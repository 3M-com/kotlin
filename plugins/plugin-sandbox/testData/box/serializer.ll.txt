FILE: serializer.kt
    @R|org/jetbrains/kotlin/plugin/sandbox/CoreSerializer|() public final object FirstSerializer : R|kotlin/Any| {
        private constructor(): R|FirstSerializer| {
            super<R|kotlin/Any|>()
        }

        public final fun bFunction(): R|kotlin/Unit| {
        }

        public final fun aFunction(): R|kotlin/Unit| {
        }

        public final val bProp: R|kotlin/Int| = Int(1)
            public get(): R|kotlin/Int|

        public final val aProp: R|kotlin/Int| = Int(2)
            public get(): R|kotlin/Int|

    }
    @R|org/jetbrains/kotlin/plugin/sandbox/CoreSerializer|() public final object SecondSerializer : R|kotlin/Any| {
        private constructor(): R|SecondSerializer| {
            super<R|kotlin/Any|>()
        }

    }
    @R|org/jetbrains/kotlin/plugin/sandbox/MySerializable|() public final class D : R|kotlin/Any| {
        public constructor(): R|D| {
            super<R|kotlin/Any|>()
        }

    }
    @R|org/jetbrains/kotlin/plugin/sandbox/MySerializable|() public final class C : R|kotlin/Any| {
        public constructor(): R|C| {
            super<R|kotlin/Any|>()
        }

    }
    @R|org/jetbrains/kotlin/plugin/sandbox/MySerializable|() public final class B : R|kotlin/Any| {
        public constructor(): R|B| {
            super<R|kotlin/Any|>()
        }

    }
    @R|org/jetbrains/kotlin/plugin/sandbox/MySerializable|() public final class A : R|kotlin/Any| {
        public constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

    }
    public final fun testFirstSerializer(): R|kotlin/Unit| {
        Q|FirstSerializer|.<Unresolved name: serializeA>#(R|/A.A|())
        Q|FirstSerializer|.<Unresolved name: serializeB>#(R|/B.B|())
        Q|FirstSerializer|.<Unresolved name: serializeC>#(R|/C.C|())
        Q|FirstSerializer|.<Unresolved name: serializeD>#(R|/D.D|())
    }
    public final fun testSecondSerializer(): R|kotlin/Unit| {
        Q|SecondSerializer|.<Unresolved name: serializeA>#(R|/A.A|())
        Q|SecondSerializer|.<Unresolved name: serializeB>#(R|/B.B|())
        Q|SecondSerializer|.<Unresolved name: serializeC>#(R|/C.C|())
        Q|SecondSerializer|.<Unresolved name: serializeD>#(R|/D.D|())
    }
    public final fun box(): R|kotlin/String| {
        R|/testFirstSerializer|()
        R|/testSecondSerializer|()
        ^box String(OK)
    }

KT element: KtClass
FIR element: FirRegularClassImpl
FIR source kind: KtRealSourceElementKind

FIR element rendered:
public final [ResolvedTo(ANNOTATION_ARGUMENTS)] enum class MyEnumClass : R|kotlin/Enum<MyEnumClass>| {
    private [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=MyEnumClass] constructor(): R|MyEnumClass| {
        super<R|kotlin/Enum<MyEnumClass>|>()
    }

    public final static [ResolvedTo(STATUS)] [ContainingClassKey=MyEnumClass] enum entry Entry: R|MyEnumClass| = LAZY_EXPRESSION
    public final [ResolvedTo(STATUS)] fun regularMember([ResolvedTo(STATUS)] i: R|kotlin/Int|): <implicit> { LAZY_BLOCK }

    [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=MyEnumClass] @R|Anno|[Types](value = String(enum dangling modifier)) <DANGLING MODIFIER: Top level declaration expected>
    public final static [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=MyEnumClass] fun values(): R|kotlin/Array<MyEnumClass>| {
    }

    public final static [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=MyEnumClass] fun valueOf([ResolvedTo(BODY_RESOLVE)] value: R|kotlin/String|): R|MyEnumClass| {
    }

    public final static [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=MyEnumClass] val entries: R|kotlin/enums/EnumEntries<MyEnumClass>|
        public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/enums/EnumEntries<MyEnumClass>|

}

FIR FILE:
FILE: [ResolvedTo(IMPORTS)] enumClassWithDanglingModifierList.kt
    public final [ResolvedTo(ANNOTATION_ARGUMENTS)] enum class MyEnumClass : R|kotlin/Enum<MyEnumClass>| {
        private [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=MyEnumClass] constructor(): R|MyEnumClass| {
            super<R|kotlin/Enum<MyEnumClass>|>()
        }

        public final static [ResolvedTo(STATUS)] [ContainingClassKey=MyEnumClass] enum entry Entry: R|MyEnumClass| = LAZY_EXPRESSION
        public final [ResolvedTo(STATUS)] fun regularMember([ResolvedTo(STATUS)] i: R|kotlin/Int|): <implicit> { LAZY_BLOCK }

        [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=MyEnumClass] @R|Anno|[Types](value = String(enum dangling modifier)) <DANGLING MODIFIER: Top level declaration expected>
        public final static [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=MyEnumClass] fun values(): R|kotlin/Array<MyEnumClass>| {
        }

        public final static [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=MyEnumClass] fun valueOf([ResolvedTo(BODY_RESOLVE)] value: R|kotlin/String|): R|MyEnumClass| {
        }

        public final static [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=MyEnumClass] val entries: R|kotlin/enums/EnumEntries<MyEnumClass>|
            public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/enums/EnumEntries<MyEnumClass>|

    }
    public final [ResolvedTo(STATUS)] annotation class Anno : R|kotlin/Annotation| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/Anno.value] value: R|kotlin/String|): R|Anno| {
            LAZY_super<R|kotlin/Any|>
        }

        public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val value: R|kotlin/String| = R|<local>/value|
            public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] get(): R|kotlin/String|

    }

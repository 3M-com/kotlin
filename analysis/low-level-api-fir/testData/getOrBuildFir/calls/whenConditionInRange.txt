KT element: KtWhenConditionInRange
FIR element: null
FIR source kind: null

FIR element rendered:
null

FIR FILE:
FILE: [ResolvedTo(IMPORTS)] whenConditionInRange.kt
    public final [ResolvedTo(STATUS)] class MyClass : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=MyClass] constructor(): R|MyClass| {
            LAZY_super<R|kotlin/Any|>
        }

    }
    public final operator [ResolvedTo(CONTRACTS)] fun <[ResolvedTo(CONTRACTS)] T> R|T|.contains([ResolvedTo(CONTRACTS)] int: R|kotlin/Int|): R|kotlin/Boolean| {
        ^contains Boolean(true)
    }
    public final [ResolvedTo(BODY_RESOLVE)] fun usage(): R|kotlin/Unit| {
        when (Int(1)) {
            R|/MyClass.MyClass|().R|/contains|<R|MyClass|>($subj$) ->  {
                Boolean(true)
            }
        }

    }

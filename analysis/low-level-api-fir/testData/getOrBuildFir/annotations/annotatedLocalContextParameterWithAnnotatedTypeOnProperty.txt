KT element: KtAnnotationEntry
FIR element: FirAnnotationCallImpl
FIR source kind: KtRealSourceElementKind

FIR element rendered:
@R|Anno|[Unresolved](String(foo))

FIR FILE:
FILE: [ResolvedTo(IMPORTS)] annotatedLocalContextParameterWithAnnotatedTypeOnProperty.kt
    @R|kotlin/annotation/Target|[CompilerRequiredAnnotations](Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.TYPE|, Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.VALUE_PARAMETER|) public final? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] annotation class Anno : R|kotlin/Annotation| {
        public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
            LAZY_super<R|kotlin/Any|>
        }

        public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

    }
    public final [ResolvedTo(BODY_RESOLVE)] fun f1(): R|kotlin/Unit| {
        local final [ResolvedTo(BODY_RESOLVE)] class Foo : R|kotlin/Any| {
            public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] constructor(): R|<local>/Foo| {
                super<R|kotlin/Any|>()
            }

            context([ResolvedTo(BODY_RESOLVE)] @R|Anno|[Types](String(par)) par: R|@R|Anno|(String(foo))  kotlin/String|)
            public final [ResolvedTo(BODY_RESOLVE)] val v1: R|kotlin/String|
                public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] get(): R|kotlin/String| {
                    ^ String(hello)
                }

        }

    }
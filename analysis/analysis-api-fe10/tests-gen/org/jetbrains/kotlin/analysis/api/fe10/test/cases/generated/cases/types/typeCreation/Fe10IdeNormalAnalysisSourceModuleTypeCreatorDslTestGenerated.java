/*
 * Copyright 2010-2024 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.analysis.api.fe10.test.cases.generated.cases.types.typeCreation;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.kotlin.analysis.api.fe10.test.configurator.AnalysisApiFe10TestConfiguratorFactory;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiTestConfiguratorFactoryData;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiTestConfigurator;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.TestModuleKind;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.FrontendKind;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisSessionMode;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiMode;
import org.jetbrains.kotlin.analysis.api.impl.base.test.cases.types.typeCreation.AbstractTypeCreatorDslTest;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.analysis.api.GenerateAnalysisApiTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("analysis/analysis-api/testData/types/typeCreation/byDsl")
@TestDataPath("$PROJECT_ROOT")
public class Fe10IdeNormalAnalysisSourceModuleTypeCreatorDslTestGenerated extends AbstractTypeCreatorDslTest {
  @NotNull
  @Override
  public AnalysisApiTestConfigurator getConfigurator() {
    return AnalysisApiFe10TestConfiguratorFactory.INSTANCE.createConfigurator(
      new AnalysisApiTestConfiguratorFactoryData(
        FrontendKind.Fe10,
        TestModuleKind.Source,
        AnalysisSessionMode.Normal,
        AnalysisApiMode.Ide
      )
    );
  }

  @Test
  public void testAllFilesPresentInByDsl() {
    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/analysis-api/testData/types/typeCreation/byDsl"), Pattern.compile("^(.+)\\.kt$"), null, true);
  }

  @Nested
  @TestMetadata("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType")
  @TestDataPath("$PROJECT_ROOT")
  public class ArrayType {
    @Test
    public void testAllFilesPresentInArrayType() {
      KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType"), Pattern.compile("^(.+)\\.kt$"), null, true);
    }

    @Test
    @TestMetadata("boolPreferPrimitive.kt")
    public void testBoolPreferPrimitive() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType/boolPreferPrimitive.kt");
    }

    @Test
    @TestMetadata("boxedArrayOutVariance.kt")
    public void testBoxedArrayOutVariance() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType/boxedArrayOutVariance.kt");
    }

    @Test
    @TestMetadata("charShouldNotPreferPrimitive.kt")
    public void testCharShouldNotPreferPrimitive() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType/charShouldNotPreferPrimitive.kt");
    }

    @Test
    @TestMetadata("dynamicType.kt")
    public void testDynamicType() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType/dynamicType.kt");
    }

    @Test
    @TestMetadata("errorType.kt")
    public void testErrorType() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType/errorType.kt");
    }

    @Test
    @TestMetadata("flexibleInt.kt")
    public void testFlexibleInt() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType/flexibleInt.kt");
    }

    @Test
    @TestMetadata("int.kt")
    public void testInt() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType/int.kt");
    }

    @Test
    @TestMetadata("intInVarianceShouldPreferPrimitive.kt")
    public void testIntInVarianceShouldPreferPrimitive() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType/intInVarianceShouldPreferPrimitive.kt");
    }

    @Test
    @TestMetadata("intOutVariance.kt")
    public void testIntOutVariance() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType/intOutVariance.kt");
    }

    @Test
    @TestMetadata("nullableIntPreferPrimitive.kt")
    public void testNullableIntPreferPrimitive() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType/nullableIntPreferPrimitive.kt");
    }

    @Test
    @TestMetadata("nullableUserType.kt")
    public void testNullableUserType() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType/nullableUserType.kt");
    }

    @Test
    @TestMetadata("primitiveArrayPreferPrimitive.kt")
    public void testPrimitiveArrayPreferPrimitive() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType/primitiveArrayPreferPrimitive.kt");
    }

    @Test
    @TestMetadata("simpleUserTypeMakeNullablePreferPrimitive.kt")
    public void testSimpleUserTypeMakeNullablePreferPrimitive() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType/simpleUserTypeMakeNullablePreferPrimitive.kt");
    }

    @Test
    @TestMetadata("typeParameterPreferPrimitiveOutVariance.kt")
    public void testTypeParameterPreferPrimitiveOutVariance() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType/typeParameterPreferPrimitiveOutVariance.kt");
    }

    @Test
    @TestMetadata("typeParameterWithIntUpperBound.kt")
    public void testTypeParameterWithIntUpperBound() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType/typeParameterWithIntUpperBound.kt");
    }

    @Test
    @TestMetadata("withAnnotations.kt")
    public void testWithAnnotations() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/arrayType/withAnnotations.kt");
    }
  }

  @Nested
  @TestMetadata("analysis/analysis-api/testData/types/typeCreation/byDsl/capturedType")
  @TestDataPath("$PROJECT_ROOT")
  public class CapturedType {
    @Test
    public void testAllFilesPresentInCapturedType() {
      KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/analysis-api/testData/types/typeCreation/byDsl/capturedType"), Pattern.compile("^(.+)\\.kt$"), null, true);
    }

    @Test
    @TestMetadata("fromAnotherCapturedTypeMarkedNullable.kt")
    public void testFromAnotherCapturedTypeMarkedNullable() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/capturedType/fromAnotherCapturedTypeMarkedNullable.kt");
    }

    @Test
    @TestMetadata("outIntProjection.kt")
    public void testOutIntProjection() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/capturedType/outIntProjection.kt");
    }

    @Test
    @TestMetadata("starProjection.kt")
    public void testStarProjection() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/capturedType/starProjection.kt");
    }

    @Test
    @TestMetadata("starProjectionMarkedNullable.kt")
    public void testStarProjectionMarkedNullable() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/capturedType/starProjectionMarkedNullable.kt");
    }

    @Test
    @TestMetadata("starProjectionWithAnnotations.kt")
    public void testStarProjectionWithAnnotations() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/capturedType/starProjectionWithAnnotations.kt");
    }

    @Test
    @TestMetadata("typeParameterOutProjection.kt")
    public void testTypeParameterOutProjection() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/capturedType/typeParameterOutProjection.kt");
    }

    @Test
    @TestMetadata("userTypeInProjection.kt")
    public void testUserTypeInProjection() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/capturedType/userTypeInProjection.kt");
    }
  }

  @Nested
  @TestMetadata("analysis/analysis-api/testData/types/typeCreation/byDsl/classType")
  @TestDataPath("$PROJECT_ROOT")
  public class ClassType {
    @Test
    public void testAllFilesPresentInClassType() {
      KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/analysis-api/testData/types/typeCreation/byDsl/classType"), Pattern.compile("^(.+)\\.kt$"), null, true);
    }

    @Test
    @TestMetadata("boxedArrayWithStringTypeArgument.kt")
    public void testBoxedArrayWithStringTypeArgument() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/classType/boxedArrayWithStringTypeArgument.kt");
    }

    @Test
    @TestMetadata("intTypeMarkNullable.kt")
    public void testIntTypeMarkNullable() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/classType/intTypeMarkNullable.kt");
    }

    @Test
    @TestMetadata("lessTypeArgumentsThanExpected.kt")
    public void testLessTypeArgumentsThanExpected() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/classType/lessTypeArgumentsThanExpected.kt");
    }

    @Test
    @TestMetadata("localUserType.kt")
    public void testLocalUserType() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/classType/localUserType.kt");
    }

    @Test
    @TestMetadata("moreTypeArgumentsThanExpected.kt")
    public void testMoreTypeArgumentsThanExpected() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/classType/moreTypeArgumentsThanExpected.kt");
    }

    @Test
    @TestMetadata("nonExistingClassId.kt")
    public void testNonExistingClassId() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/classType/nonExistingClassId.kt");
    }

    @Test
    @TestMetadata("nonExistingClassIdWithAnnotations.kt")
    public void testNonExistingClassIdWithAnnotations() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/classType/nonExistingClassIdWithAnnotations.kt");
    }

    @Test
    @TestMetadata("userGenericTypeWithStarProjection.kt")
    public void testUserGenericTypeWithStarProjection() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/classType/userGenericTypeWithStarProjection.kt");
    }

    @Test
    @TestMetadata("userType.kt")
    public void testUserType() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/classType/userType.kt");
    }

    @Test
    @TestMetadata("userTypeWithAnnotations.kt")
    public void testUserTypeWithAnnotations() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/classType/userTypeWithAnnotations.kt");
    }

    @Test
    @TestMetadata("withAnnotationRequiringArguments.kt")
    public void testWithAnnotationRequiringArguments() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/classType/withAnnotationRequiringArguments.kt");
    }

    @Test
    @TestMetadata("withGenericAnnotation.kt")
    public void testWithGenericAnnotation() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/classType/withGenericAnnotation.kt");
    }
  }

  @Nested
  @TestMetadata("analysis/analysis-api/testData/types/typeCreation/byDsl/dynamicType")
  @TestDataPath("$PROJECT_ROOT")
  public class DynamicType {
    @Test
    public void testAllFilesPresentInDynamicType() {
      KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/analysis-api/testData/types/typeCreation/byDsl/dynamicType"), Pattern.compile("^(.+)\\.kt$"), null, true);
    }

    @Test
    @TestMetadata("dynamicType.kt")
    public void testDynamicType() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/dynamicType/dynamicType.kt");
    }

    @Test
    @TestMetadata("withAnnotations.kt")
    public void testWithAnnotations() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/dynamicType/withAnnotations.kt");
    }
  }

  @Nested
  @TestMetadata("analysis/analysis-api/testData/types/typeCreation/byDsl/starTypeProjection")
  @TestDataPath("$PROJECT_ROOT")
  public class StarTypeProjection {
    @Test
    public void testAllFilesPresentInStarTypeProjection() {
      KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/analysis-api/testData/types/typeCreation/byDsl/starTypeProjection"), Pattern.compile("^(.+)\\.kt$"), null, true);
    }

    @Test
    @TestMetadata("starTypeProjection.kt")
    public void testStarTypeProjection() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/starTypeProjection/starTypeProjection.kt");
    }
  }

  @Nested
  @TestMetadata("analysis/analysis-api/testData/types/typeCreation/byDsl/typeParameterType")
  @TestDataPath("$PROJECT_ROOT")
  public class TypeParameterType {
    @Test
    public void testAllFilesPresentInTypeParameterType() {
      KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/analysis-api/testData/types/typeCreation/byDsl/typeParameterType"), Pattern.compile("^(.+)\\.kt$"), null, true);
    }

    @Test
    @TestMetadata("regularMakeNullable.kt")
    public void testRegularMakeNullable() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/typeParameterType/regularMakeNullable.kt");
    }

    @Test
    @TestMetadata("reified.kt")
    public void testReified() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/typeParameterType/reified.kt");
    }

    @Test
    @TestMetadata("withAnnotations.kt")
    public void testWithAnnotations() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/typeParameterType/withAnnotations.kt");
    }

    @Test
    @TestMetadata("withUpperBounds.kt")
    public void testWithUpperBounds() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/typeParameterType/withUpperBounds.kt");
    }
  }

  @Nested
  @TestMetadata("analysis/analysis-api/testData/types/typeCreation/byDsl/typeProjection")
  @TestDataPath("$PROJECT_ROOT")
  public class TypeProjection {
    @Test
    public void testAllFilesPresentInTypeProjection() {
      KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/analysis-api/testData/types/typeCreation/byDsl/typeProjection"), Pattern.compile("^(.+)\\.kt$"), null, true);
    }

    @Test
    @TestMetadata("intWithInVariance.kt")
    public void testIntWithInVariance() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/typeProjection/intWithInVariance.kt");
    }

    @Test
    @TestMetadata("invariantStringTypeMarkedNullable.kt")
    public void testInvariantStringTypeMarkedNullable() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/typeProjection/invariantStringTypeMarkedNullable.kt");
    }
  }

  @Nested
  @TestMetadata("analysis/analysis-api/testData/types/typeCreation/byDsl/varargArrayType")
  @TestDataPath("$PROJECT_ROOT")
  public class VarargArrayType {
    @Test
    public void testAllFilesPresentInVarargArrayType() {
      KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/analysis-api/testData/types/typeCreation/byDsl/varargArrayType"), Pattern.compile("^(.+)\\.kt$"), null, true);
    }

    @Test
    @TestMetadata("boxedArray.kt")
    public void testBoxedArray() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/varargArrayType/boxedArray.kt");
    }

    @Test
    @TestMetadata("errorType.kt")
    public void testErrorType() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/varargArrayType/errorType.kt");
    }

    @Test
    @TestMetadata("flexibleInt.kt")
    public void testFlexibleInt() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/varargArrayType/flexibleInt.kt");
    }

    @Test
    @TestMetadata("nullableInt.kt")
    public void testNullableInt() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/varargArrayType/nullableInt.kt");
    }

    @Test
    @TestMetadata("nullableUserType.kt")
    public void testNullableUserType() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/varargArrayType/nullableUserType.kt");
    }

    @Test
    @TestMetadata("primitiveArray.kt")
    public void testPrimitiveArray() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/varargArrayType/primitiveArray.kt");
    }

    @Test
    @TestMetadata("simpleUserType.kt")
    public void testSimpleUserType() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/varargArrayType/simpleUserType.kt");
    }

    @Test
    @TestMetadata("typeParameter.kt")
    public void testTypeParameter() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/varargArrayType/typeParameter.kt");
    }

    @Test
    @TestMetadata("typeParameterWithIntUpperBound.kt")
    public void testTypeParameterWithIntUpperBound() {
      runTest("analysis/analysis-api/testData/types/typeCreation/byDsl/varargArrayType/typeParameterWithIntUpperBound.kt");
    }
  }
}

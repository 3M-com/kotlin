/*
 * Copyright 2010-2024 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.analysis.api.fir.test.cases.generated.cases.components.callResolver;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.kotlin.analysis.api.fir.test.configurators.AnalysisApiFirTestConfiguratorFactory;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiTestConfiguratorFactoryData;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiTestConfigurator;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.TestModuleKind;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.FrontendKind;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisSessionMode;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiMode;
import org.jetbrains.kotlin.analysis.api.impl.base.test.cases.components.callResolver.AbstractResolveCandidatesTest;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.analysis.api.GenerateAnalysisApiTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("analysis/analysis-api/testData/components/callResolver/singleByPsi")
@TestDataPath("$PROJECT_ROOT")
public class FirIdeNormalAnalysisSourceModuleResolveCandidatesTestGenerated extends AbstractResolveCandidatesTest {
  @NotNull
  @Override
  public AnalysisApiTestConfigurator getConfigurator() {
    return AnalysisApiFirTestConfiguratorFactory.INSTANCE.createConfigurator(
      new AnalysisApiTestConfiguratorFactoryData(
        FrontendKind.Fir,
        TestModuleKind.Source,
        AnalysisSessionMode.Normal,
        AnalysisApiMode.Ide
      )
    );
  }

  @Test
  public void testAllFilesPresentInSingleByPsi() {
    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/analysis-api/testData/components/callResolver/singleByPsi"), Pattern.compile("^(.+)\\.kt$"), null, true);
  }

  @Test
  @TestMetadata("ambiguous.kt")
  public void testAmbiguous() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/ambiguous.kt");
  }

  @Test
  @TestMetadata("ambiguousImplicitInvoke.kt")
  public void testAmbiguousImplicitInvoke() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/ambiguousImplicitInvoke.kt");
  }

  @Test
  @TestMetadata("ambiguousWithExplicitTypeParameters.kt")
  public void testAmbiguousWithExplicitTypeParameters() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/ambiguousWithExplicitTypeParameters.kt");
  }

  @Test
  @TestMetadata("ambiguousWithInferredTypeParameters.kt")
  public void testAmbiguousWithInferredTypeParameters() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/ambiguousWithInferredTypeParameters.kt");
  }

  @Test
  @TestMetadata("arrayOfInAnnotation.kt")
  public void testArrayOfInAnnotation() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/arrayOfInAnnotation.kt");
  }

  @Test
  @TestMetadata("builderInference.kt")
  public void testBuilderInference() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/builderInference.kt");
  }

  @Test
  @TestMetadata("checkNotNullCall.kt")
  public void testCheckNotNullCall() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/checkNotNullCall.kt");
  }

  @Test
  @TestMetadata("checkNotNullCallAsCallee.kt")
  public void testCheckNotNullCallAsCallee() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/checkNotNullCallAsCallee.kt");
  }

  @Test
  @TestMetadata("comparisonCall.kt")
  public void testComparisonCall() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/comparisonCall.kt");
  }

  @Test
  @TestMetadata("consecutiveImplicitInvoke1.kt")
  public void testConsecutiveImplicitInvoke1() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/consecutiveImplicitInvoke1.kt");
  }

  @Test
  @TestMetadata("consecutiveImplicitInvoke2.kt")
  public void testConsecutiveImplicitInvoke2() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/consecutiveImplicitInvoke2.kt");
  }

  @Test
  @TestMetadata("consecutiveImplicitInvoke3.kt")
  public void testConsecutiveImplicitInvoke3() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/consecutiveImplicitInvoke3.kt");
  }

  @Test
  @TestMetadata("delegatedConstructor.kt")
  public void testDelegatedConstructor() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/delegatedConstructor.kt");
  }

  @Test
  @TestMetadata("delegatedConstructorApplicable.kt")
  public void testDelegatedConstructorApplicable() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/delegatedConstructorApplicable.kt");
  }

  @Test
  @TestMetadata("delegatedConstructorInapplicable.kt")
  public void testDelegatedConstructorInapplicable() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/delegatedConstructorInapplicable.kt");
  }

  @Test
  @TestMetadata("delegatedConstructorInapplicableDifferentParametersCount.kt")
  public void testDelegatedConstructorInapplicableDifferentParametersCount() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/delegatedConstructorInapplicableDifferentParametersCount.kt");
  }

  @Test
  @TestMetadata("delegatedConstructorWithSubstitution.kt")
  public void testDelegatedConstructorWithSubstitution() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/delegatedConstructorWithSubstitution.kt");
  }

  @Test
  @TestMetadata("eqEqCall_fromAny.kt")
  public void testEqEqCall_fromAny() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/eqEqCall_fromAny.kt");
  }

  @Test
  @TestMetadata("eqEqCall_fromSuperType.kt")
  public void testEqEqCall_fromSuperType() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/eqEqCall_fromSuperType.kt");
  }

  @Test
  @TestMetadata("eqEqCall_overridden.kt")
  public void testEqEqCall_overridden() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/eqEqCall_overridden.kt");
  }

  @Test
  @TestMetadata("forEach.kt")
  public void testForEach() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/forEach.kt");
  }

  @Test
  @TestMetadata("functionCallInTheSameFile.kt")
  public void testFunctionCallInTheSameFile() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/functionCallInTheSameFile.kt");
  }

  @Test
  @TestMetadata("functionCallWithExtensionReceiverAndTypeArgument.kt")
  public void testFunctionCallWithExtensionReceiverAndTypeArgument() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/functionCallWithExtensionReceiverAndTypeArgument.kt");
  }

  @Test
  @TestMetadata("functionCallWithLambdaArgument.kt")
  public void testFunctionCallWithLambdaArgument() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/functionCallWithLambdaArgument.kt");
  }

  @Test
  @TestMetadata("functionCallWithNamedArgument.kt")
  public void testFunctionCallWithNamedArgument() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/functionCallWithNamedArgument.kt");
  }

  @Test
  @TestMetadata("functionCallWithNonTrailingLambdaArgument.kt")
  public void testFunctionCallWithNonTrailingLambdaArgument() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/functionCallWithNonTrailingLambdaArgument.kt");
  }

  @Test
  @TestMetadata("functionCallWithSpreadArgument.kt")
  public void testFunctionCallWithSpreadArgument() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/functionCallWithSpreadArgument.kt");
  }

  @Test
  @TestMetadata("functionCallWithTooFewTypeArguments.kt")
  public void testFunctionCallWithTooFewTypeArguments() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/functionCallWithTooFewTypeArguments.kt");
  }

  @Test
  @TestMetadata("functionCallWithTooFewTypeArguments2.kt")
  public void testFunctionCallWithTooFewTypeArguments2() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/functionCallWithTooFewTypeArguments2.kt");
  }

  @Test
  @TestMetadata("functionCallWithTooManyTypeArguments.kt")
  public void testFunctionCallWithTooManyTypeArguments() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/functionCallWithTooManyTypeArguments.kt");
  }

  @Test
  @TestMetadata("functionCallWithTooManyTypeArguments2.kt")
  public void testFunctionCallWithTooManyTypeArguments2() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/functionCallWithTooManyTypeArguments2.kt");
  }

  @Test
  @TestMetadata("functionCallWithTypeArgument.kt")
  public void testFunctionCallWithTypeArgument() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/functionCallWithTypeArgument.kt");
  }

  @Test
  @TestMetadata("functionCallWithVarargArgument.kt")
  public void testFunctionCallWithVarargArgument() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/functionCallWithVarargArgument.kt");
  }

  @Test
  @TestMetadata("functionTypeVariableCall_dispatchReceiver.kt")
  public void testFunctionTypeVariableCall_dispatchReceiver() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/functionTypeVariableCall_dispatchReceiver.kt");
  }

  @Test
  @TestMetadata("functionTypeVariableCall_extensionReceiver.kt")
  public void testFunctionTypeVariableCall_extensionReceiver() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/functionTypeVariableCall_extensionReceiver.kt");
  }

  @Test
  @TestMetadata("functionWithReceiverCall.kt")
  public void testFunctionWithReceiverCall() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/functionWithReceiverCall.kt");
  }

  @Test
  @TestMetadata("functionWithReceiverSafeCall.kt")
  public void testFunctionWithReceiverSafeCall() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/functionWithReceiverSafeCall.kt");
  }

  @Test
  @TestMetadata("groupBy.kt")
  public void testGroupBy() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/groupBy.kt");
  }

  @Test
  @TestMetadata("hiddenConstructor.kt")
  public void testHiddenConstructor() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/hiddenConstructor.kt");
  }

  @Test
  @TestMetadata("hiddenDeprecated.kt")
  public void testHiddenDeprecated() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/hiddenDeprecated.kt");
  }

  @Test
  @TestMetadata("implicitConstructorDelegationCall.kt")
  public void testImplicitConstructorDelegationCall() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/implicitConstructorDelegationCall.kt");
  }

  @Test
  @TestMetadata("implicitConstuctorCall.kt")
  public void testImplicitConstuctorCall() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/implicitConstuctorCall.kt");
  }

  @Test
  @TestMetadata("implicitInvoke.kt")
  public void testImplicitInvoke() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/implicitInvoke.kt");
  }

  @Test
  @TestMetadata("implicitInvokeWithReceiver.kt")
  public void testImplicitInvokeWithReceiver() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/implicitInvokeWithReceiver.kt");
  }

  @Test
  @TestMetadata("implicitJavaConstuctorCall.kt")
  public void testImplicitJavaConstuctorCall() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/implicitJavaConstuctorCall.kt");
  }

  @Test
  @TestMetadata("indexedGet.kt")
  public void testIndexedGet() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/indexedGet.kt");
  }

  @Test
  @TestMetadata("indexedGetWithNotEnoughArgs.kt")
  public void testIndexedGetWithNotEnoughArgs() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/indexedGetWithNotEnoughArgs.kt");
  }

  @Test
  @TestMetadata("indexedGetWithTooManyArgs.kt")
  public void testIndexedGetWithTooManyArgs() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/indexedGetWithTooManyArgs.kt");
  }

  @Test
  @TestMetadata("indexedSet.kt")
  public void testIndexedSet() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/indexedSet.kt");
  }

  @Test
  @TestMetadata("indexedSetWithNotEnoughArgs.kt")
  public void testIndexedSetWithNotEnoughArgs() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/indexedSetWithNotEnoughArgs.kt");
  }

  @Test
  @TestMetadata("indexedSetWithTooManyArgs.kt")
  public void testIndexedSetWithTooManyArgs() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/indexedSetWithTooManyArgs.kt");
  }

  @Test
  @TestMetadata("intArrayOfInAnnotation.kt")
  public void testIntArrayOfInAnnotation() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/intArrayOfInAnnotation.kt");
  }

  @Test
  @TestMetadata("javaFunctionCall.kt")
  public void testJavaFunctionCall() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/javaFunctionCall.kt");
  }

  @Test
  @TestMetadata("memberFunctionCallWithTypeArgument.kt")
  public void testMemberFunctionCallWithTypeArgument() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/memberFunctionCallWithTypeArgument.kt");
  }

  @Test
  @TestMetadata("memberFunctionVsTopLevel.kt")
  public void testMemberFunctionVsTopLevel() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/memberFunctionVsTopLevel.kt");
  }

  @Test
  @TestMetadata("overloadWithReceiver.kt")
  public void testOverloadWithReceiver() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/overloadWithReceiver.kt");
  }

  @Test
  @TestMetadata("privateMember.kt")
  public void testPrivateMember() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/privateMember.kt");
  }

  @Test
  @TestMetadata("resolveCallInSuperConstructorParam.kt")
  public void testResolveCallInSuperConstructorParam() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/resolveCallInSuperConstructorParam.kt");
  }

  @Test
  @TestMetadata("samConstructorCall.kt")
  public void testSamConstructorCall() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/samConstructorCall.kt");
  }

  @Test
  @TestMetadata("simpleCallWithNonMatchingArgs.kt")
  public void testSimpleCallWithNonMatchingArgs() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/simpleCallWithNonMatchingArgs.kt");
  }

  @Test
  @TestMetadata("smartCastExplicitExtensionReceiver.kt")
  public void testSmartCastExplicitExtensionReceiver() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/smartCastExplicitExtensionReceiver.kt");
  }

  @Test
  @TestMetadata("staticFieldFromJavaClassFromSuper.kt")
  public void testStaticFieldFromJavaClassFromSuper() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/staticFieldFromJavaClassFromSuper.kt");
  }

  @Test
  @TestMetadata("staticImportFunction.kt")
  public void testStaticImportFunction() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/staticImportFunction.kt");
  }

  @Test
  @TestMetadata("staticImportFunctionFromSuper.kt")
  public void testStaticImportFunctionFromSuper() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/staticImportFunctionFromSuper.kt");
  }

  @Test
  @TestMetadata("staticImportNestedFunction.kt")
  public void testStaticImportNestedFunction() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/staticImportNestedFunction.kt");
  }

  @Test
  @TestMetadata("staticImportNestedJavaField.kt")
  public void testStaticImportNestedJavaField() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/staticImportNestedJavaField.kt");
  }

  @Test
  @TestMetadata("staticImportNestedJavaFunction.kt")
  public void testStaticImportNestedJavaFunction() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/staticImportNestedJavaFunction.kt");
  }

  @Test
  @TestMetadata("staticImportNestedProperty.kt")
  public void testStaticImportNestedProperty() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/staticImportNestedProperty.kt");
  }

  @Test
  @TestMetadata("staticImportProperty.kt")
  public void testStaticImportProperty() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/staticImportProperty.kt");
  }

  @Test
  @TestMetadata("staticImportPropertyFromSuper.kt")
  public void testStaticImportPropertyFromSuper() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/staticImportPropertyFromSuper.kt");
  }

  @Test
  @TestMetadata("staticMethodFromJavaClass.kt")
  public void testStaticMethodFromJavaClass() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/staticMethodFromJavaClass.kt");
  }

  @Test
  @TestMetadata("staticMethodFromJavaClassFromSuper.kt")
  public void testStaticMethodFromJavaClassFromSuper() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/staticMethodFromJavaClassFromSuper.kt");
  }

  @Test
  @TestMetadata("unresolvableOperator_elvis_1.kt")
  public void testUnresolvableOperator_elvis_1() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/unresolvableOperator_elvis_1.kt");
  }

  @Test
  @TestMetadata("unresolvableOperator_elvis_2.kt")
  public void testUnresolvableOperator_elvis_2() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/unresolvableOperator_elvis_2.kt");
  }

  @Test
  @TestMetadata("unresolvableOperator_eqeqeq_1.kt")
  public void testUnresolvableOperator_eqeqeq_1() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/unresolvableOperator_eqeqeq_1.kt");
  }

  @Test
  @TestMetadata("unresolvableOperator_eqeqeq_2.kt")
  public void testUnresolvableOperator_eqeqeq_2() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/unresolvableOperator_eqeqeq_2.kt");
  }

  @Test
  @TestMetadata("unresolvableOperator_excleqeq_1.kt")
  public void testUnresolvableOperator_excleqeq_1() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/unresolvableOperator_excleqeq_1.kt");
  }

  @Test
  @TestMetadata("unresolvableOperator_excleqeq_2.kt")
  public void testUnresolvableOperator_excleqeq_2() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/unresolvableOperator_excleqeq_2.kt");
  }

  @Test
  @TestMetadata("unresolvedReference.kt")
  public void testUnresolvedReference() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/unresolvedReference.kt");
  }

  @Test
  @TestMetadata("variableAsFunction.kt")
  public void testVariableAsFunction() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/variableAsFunction.kt");
  }

  @Test
  @TestMetadata("variableAsFunctionLikeCall.kt")
  public void testVariableAsFunctionLikeCall() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/variableAsFunctionLikeCall.kt");
  }

  @Test
  @TestMetadata("variableAsFunctionWithParameterName.kt")
  public void testVariableAsFunctionWithParameterName() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/variableAsFunctionWithParameterName.kt");
  }

  @Test
  @TestMetadata("variableAsFunctionWithParameterNameAnnotation.kt")
  public void testVariableAsFunctionWithParameterNameAnnotation() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/variableAsFunctionWithParameterNameAnnotation.kt");
  }

  @Test
  @TestMetadata("variableAsFunctionWithParameterNameAnnotationConflict.kt")
  public void testVariableAsFunctionWithParameterNameAnnotationConflict() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/variableAsFunctionWithParameterNameAnnotationConflict.kt");
  }

  @Test
  @TestMetadata("variableAsFunctionWithParameterNameGeneric.kt")
  public void testVariableAsFunctionWithParameterNameGeneric() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/variableAsFunctionWithParameterNameGeneric.kt");
  }

  @Test
  @TestMetadata("variableAsFunctionWithParameterNameInNonFunctionType.kt")
  public void testVariableAsFunctionWithParameterNameInNonFunctionType() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/variableAsFunctionWithParameterNameInNonFunctionType.kt");
  }

  @Test
  @TestMetadata("variableAsFunctionWithParameterNameMixed.kt")
  public void testVariableAsFunctionWithParameterNameMixed() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/variableAsFunctionWithParameterNameMixed.kt");
  }

  @Test
  @TestMetadata("variableWithExtensionInvoke.kt")
  public void testVariableWithExtensionInvoke() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/variableWithExtensionInvoke.kt");
  }

  @Test
  @TestMetadata("variableWithInvokeFunctionCall_dispatchReceiver.kt")
  public void testVariableWithInvokeFunctionCall_dispatchReceiver() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/variableWithInvokeFunctionCall_dispatchReceiver.kt");
  }

  @Test
  @TestMetadata("variableWithInvokeFunctionCall_extensionReceiver.kt")
  public void testVariableWithInvokeFunctionCall_extensionReceiver() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/variableWithInvokeFunctionCall_extensionReceiver.kt");
  }

  @Test
  @TestMetadata("variableWithMemberInvoke.kt")
  public void testVariableWithMemberInvoke() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/variableWithMemberInvoke.kt");
  }

  @Test
  @TestMetadata("whenConditionInRange.kt")
  public void testWhenConditionInRange() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/whenConditionInRange.kt");
  }

  @Test
  @TestMetadata("whenConditionInRangeInverted.kt")
  public void testWhenConditionInRangeInverted() {
    runTest("analysis/analysis-api/testData/components/callResolver/singleByPsi/whenConditionInRangeInverted.kt");
  }
}

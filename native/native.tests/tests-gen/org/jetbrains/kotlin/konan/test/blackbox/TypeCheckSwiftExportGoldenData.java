/*
 * Copyright 2010-2024 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.konan.test.blackbox;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.GenerateNativeTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("native/swift/swift-export-standalone/testData")
@TestDataPath("$PROJECT_ROOT")
public class TypeCheckSwiftExportGoldenData extends SwiftTypeCheckBaseTest {
    @Test
    public void testAllFilesPresentInTestData() throws Exception {
        KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("native/swift/swift-export-standalone/testData"), Pattern.compile("^(.+)\\.swift$"), null, true);
    }

    @Nested
    @TestMetadata("native/swift/swift-export-standalone/testData/no_package")
    @TestDataPath("$PROJECT_ROOT")
    public class No_package {
        @Test
        public void testAllFilesPresentInNo_package() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("native/swift/swift-export-standalone/testData/no_package"), Pattern.compile("^(.+)\\.swift$"), null, true);
        }

        @Nested
        @TestMetadata("native/swift/swift-export-standalone/testData/no_package/golden_result")
        @TestDataPath("$PROJECT_ROOT")
        public class Golden_result {
            @Test
            public void testAllFilesPresentInGolden_result() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("native/swift/swift-export-standalone/testData/no_package/golden_result"), Pattern.compile("^(.+)\\.swift$"), null, true);
            }

            @Test
            @TestMetadata("result.swift")
            public void testResult() throws Exception {
                runTest("native/swift/swift-export-standalone/testData/no_package/golden_result/result.swift");
            }
        }

        @Nested
        @TestMetadata("native/swift/swift-export-standalone/testData/no_package/input_root")
        @TestDataPath("$PROJECT_ROOT")
        public class Input_root {
            @Test
            public void testAllFilesPresentInInput_root() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("native/swift/swift-export-standalone/testData/no_package/input_root"), Pattern.compile("^(.+)\\.swift$"), null, true);
            }
        }
    }

    @Nested
    @TestMetadata("native/swift/swift-export-standalone/testData/simple")
    @TestDataPath("$PROJECT_ROOT")
    public class Simple {
        @Test
        public void testAllFilesPresentInSimple() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("native/swift/swift-export-standalone/testData/simple"), Pattern.compile("^(.+)\\.swift$"), null, true);
        }

        @Nested
        @TestMetadata("native/swift/swift-export-standalone/testData/simple/golden_result")
        @TestDataPath("$PROJECT_ROOT")
        public class Golden_result {
            @Test
            public void testAllFilesPresentInGolden_result() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("native/swift/swift-export-standalone/testData/simple/golden_result"), Pattern.compile("^(.+)\\.swift$"), null, true);
            }

            @Test
            @TestMetadata("result.swift")
            public void testResult() throws Exception {
                runTest("native/swift/swift-export-standalone/testData/simple/golden_result/result.swift");
            }
        }

        @Nested
        @TestMetadata("native/swift/swift-export-standalone/testData/simple/input_root")
        @TestDataPath("$PROJECT_ROOT")
        public class Input_root {
            @Test
            public void testAllFilesPresentInInput_root() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("native/swift/swift-export-standalone/testData/simple/input_root"), Pattern.compile("^(.+)\\.swift$"), null, true);
            }
        }
    }

    @Nested
    @TestMetadata("native/swift/swift-export-standalone/testData/variables")
    @TestDataPath("$PROJECT_ROOT")
    public class Variables {
        @Test
        public void testAllFilesPresentInVariables() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("native/swift/swift-export-standalone/testData/variables"), Pattern.compile("^(.+)\\.swift$"), null, true);
        }

        @Nested
        @TestMetadata("native/swift/swift-export-standalone/testData/variables/golden_result")
        @TestDataPath("$PROJECT_ROOT")
        public class Golden_result {
            @Test
            public void testAllFilesPresentInGolden_result() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("native/swift/swift-export-standalone/testData/variables/golden_result"), Pattern.compile("^(.+)\\.swift$"), null, true);
            }

            @Test
            @TestMetadata("result.swift")
            public void testResult() throws Exception {
                runTest("native/swift/swift-export-standalone/testData/variables/golden_result/result.swift");
            }
        }

        @Nested
        @TestMetadata("native/swift/swift-export-standalone/testData/variables/input_root")
        @TestDataPath("$PROJECT_ROOT")
        public class Input_root {
            @Test
            public void testAllFilesPresentInInput_root() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("native/swift/swift-export-standalone/testData/variables/input_root"), Pattern.compile("^(.+)\\.swift$"), null, true);
            }
        }
    }
}

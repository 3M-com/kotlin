FILE fqName:<root> fileName:/Generated_Box_Main.kt
  FUN name:main visibility:public modality:FINAL returnType:kotlin.Unit [suspend]
    BLOCK_BODY
      TRY type=kotlin.Unit
        try: BLOCK type=kotlin.Unit origin=null
          CALL 'public final fun box (): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
        CATCH parameter=val t: kotlin.Throwable declared in <root>.main
          VAR CATCH_PARAMETER name:t type:kotlin.Throwable [val]
          BLOCK type=kotlin.Unit origin=null
FILE fqName:<root> fileName:/test.kt
  FUN name:box visibility:public modality:FINAL returnType:kotlin.Unit
    BLOCK_BODY
      BLOCK type=kotlin.Unit origin=WHEN
        VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:kotlin.Boolean [val]
          CALL 'public final fun writeFalse (): kotlin.Boolean declared in <root>' type=kotlin.Boolean origin=null
        WHEN type=kotlin.Unit origin=WHEN
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
              ARG arg0: GET_VAR 'val tmp_0: kotlin.Boolean declared in <root>.box' type=kotlin.Boolean origin=null
              ARG arg1: CONST Boolean type=kotlin.Boolean value=true
            then: BLOCK type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
              ARG arg0: GET_VAR 'val tmp_0: kotlin.Boolean declared in <root>.box' type=kotlin.Boolean origin=null
              ARG arg1: CONST Boolean type=kotlin.Boolean value=false
            then: BLOCK type=kotlin.Unit origin=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CALL 'public final fun noWhenBranchMatchedException (): kotlin.Nothing declared in kotlin.internal.ir' type=kotlin.Nothing origin=null
  FUN name:writeFalse visibility:public modality:FINAL returnType:kotlin.Boolean
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun writeFalse (): kotlin.Boolean declared in <root>'
        CONST Boolean type=kotlin.Boolean value=false
  FUN name:writeTrue visibility:public modality:FINAL returnType:kotlin.Boolean
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun writeTrue (): kotlin.Boolean declared in <root>'
        CONST Boolean type=kotlin.Boolean value=true

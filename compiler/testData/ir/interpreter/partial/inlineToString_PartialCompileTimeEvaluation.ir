// --- IR for <main> after Evaluate and optimize function statements
MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/inlineToString.kt
    CLASS CLASS name:Data modality:FINAL visibility:public [data] superTypes:[kotlin.Any]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Data
      CONSTRUCTOR visibility:public <> (a:kotlin.Int, b:kotlin.Double, c:kotlin.String) returnType:<root>.Data [primary]
        VALUE_PARAMETER name:a index:0 type:kotlin.Int
        VALUE_PARAMETER name:b index:1 type:kotlin.Double
        VALUE_PARAMETER name:c index:2 type:kotlin.String
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Data modality:FINAL visibility:public [data] superTypes:[kotlin.Any]'
      PROPERTY name:a visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:a type:kotlin.Int visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'a: kotlin.Int declared in <root>.Data.<init>' type=kotlin.Int origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-a> visibility:public modality:FINAL <> ($this:<root>.Data) returnType:kotlin.Int
          correspondingProperty: PROPERTY name:a visibility:public modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.Data
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-a> (): kotlin.Int declared in <root>.Data'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
                receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.<get-a>' type=<root>.Data origin=null
      PROPERTY name:b visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:b type:kotlin.Double visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'b: kotlin.Double declared in <root>.Data.<init>' type=kotlin.Double origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-b> visibility:public modality:FINAL <> ($this:<root>.Data) returnType:kotlin.Double
          correspondingProperty: PROPERTY name:b visibility:public modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.Data
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-b> (): kotlin.Double declared in <root>.Data'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:b type:kotlin.Double visibility:private [final]' type=kotlin.Double origin=null
                receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.<get-b>' type=<root>.Data origin=null
      PROPERTY name:c visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:c type:kotlin.String visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'c: kotlin.String declared in <root>.Data.<init>' type=kotlin.String origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-c> visibility:public modality:FINAL <> ($this:<root>.Data) returnType:kotlin.String
          correspondingProperty: PROPERTY name:c visibility:public modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.Data
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-c> (): kotlin.String declared in <root>.Data'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:c type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
                receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.<get-c>' type=<root>.Data origin=null
      FUN GENERATED_DATA_CLASS_MEMBER name:component1 visibility:public modality:FINAL <> ($this:<root>.Data) returnType:kotlin.Int [operator]
        $this: VALUE_PARAMETER name:<this> type:<root>.Data
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun component1 (): kotlin.Int [operator] declared in <root>.Data'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.component1' type=<root>.Data origin=null
      FUN GENERATED_DATA_CLASS_MEMBER name:component2 visibility:public modality:FINAL <> ($this:<root>.Data) returnType:kotlin.Double [operator]
        $this: VALUE_PARAMETER name:<this> type:<root>.Data
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun component2 (): kotlin.Double [operator] declared in <root>.Data'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:b type:kotlin.Double visibility:private [final]' type=kotlin.Double origin=null
              receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.component2' type=<root>.Data origin=null
      FUN GENERATED_DATA_CLASS_MEMBER name:component3 visibility:public modality:FINAL <> ($this:<root>.Data) returnType:kotlin.String [operator]
        $this: VALUE_PARAMETER name:<this> type:<root>.Data
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun component3 (): kotlin.String [operator] declared in <root>.Data'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:c type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
              receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.component3' type=<root>.Data origin=null
      FUN GENERATED_DATA_CLASS_MEMBER name:copy visibility:public modality:FINAL <> ($this:<root>.Data, a:kotlin.Int, b:kotlin.Double, c:kotlin.String) returnType:<root>.Data
        $this: VALUE_PARAMETER name:<this> type:<root>.Data
        VALUE_PARAMETER name:a index:0 type:kotlin.Int
          EXPRESSION_BODY
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.copy' type=<root>.Data origin=null
        VALUE_PARAMETER name:b index:1 type:kotlin.Double
          EXPRESSION_BODY
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:b type:kotlin.Double visibility:private [final]' type=kotlin.Double origin=null
              receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.copy' type=<root>.Data origin=null
        VALUE_PARAMETER name:c index:2 type:kotlin.String
          EXPRESSION_BODY
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:c type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
              receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.copy' type=<root>.Data origin=null
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun copy (a: kotlin.Int, b: kotlin.Double, c: kotlin.String): <root>.Data declared in <root>.Data'
            CONSTRUCTOR_CALL 'public constructor <init> (a: kotlin.Int, b: kotlin.Double, c: kotlin.String) [primary] declared in <root>.Data' type=<root>.Data origin=null
              a: GET_VAR 'a: kotlin.Int declared in <root>.Data.copy' type=kotlin.Int origin=null
              b: GET_VAR 'b: kotlin.Double declared in <root>.Data.copy' type=kotlin.Double origin=null
              c: GET_VAR 'c: kotlin.String declared in <root>.Data.copy' type=kotlin.String origin=null
      FUN GENERATED_DATA_CLASS_MEMBER name:toString visibility:public modality:OPEN <> ($this:<root>.Data) returnType:kotlin.String
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:<root>.Data
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public open fun toString (): kotlin.String declared in <root>.Data'
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value="Data("
              CONST String type=kotlin.String value="a="
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
                receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.toString' type=<root>.Data origin=null
              CONST String type=kotlin.String value=", "
              CONST String type=kotlin.String value="b="
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:b type:kotlin.Double visibility:private [final]' type=kotlin.Double origin=null
                receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.toString' type=<root>.Data origin=null
              CONST String type=kotlin.String value=", "
              CONST String type=kotlin.String value="c="
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:c type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
                receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.toString' type=<root>.Data origin=null
              CONST String type=kotlin.String value=")"
      FUN GENERATED_DATA_CLASS_MEMBER name:hashCode visibility:public modality:OPEN <> ($this:<root>.Data) returnType:kotlin.Int
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:<root>.Data
        BLOCK_BODY
          VAR name:result type:kotlin.Int [var]
            CALL 'public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
                receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.hashCode' type=<root>.Data origin=null
          SET_VAR 'var result: kotlin.Int [var] declared in <root>.Data.hashCode' type=kotlin.Unit origin=EQ
            CALL 'public final fun plus (other: kotlin.Int): kotlin.Int [operator] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: CALL 'public final fun times (other: kotlin.Int): kotlin.Int [operator] declared in kotlin.Int' type=kotlin.Int origin=null
                $this: GET_VAR 'var result: kotlin.Int [var] declared in <root>.Data.hashCode' type=kotlin.Int origin=null
                other: CONST Int type=kotlin.Int value=31
              other: CALL 'public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.Double' type=kotlin.Int origin=null
                $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:b type:kotlin.Double visibility:private [final]' type=kotlin.Double origin=null
                  receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.hashCode' type=<root>.Data origin=null
          SET_VAR 'var result: kotlin.Int [var] declared in <root>.Data.hashCode' type=kotlin.Unit origin=EQ
            CALL 'public final fun plus (other: kotlin.Int): kotlin.Int [operator] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: CALL 'public final fun times (other: kotlin.Int): kotlin.Int [operator] declared in kotlin.Int' type=kotlin.Int origin=null
                $this: GET_VAR 'var result: kotlin.Int [var] declared in <root>.Data.hashCode' type=kotlin.Int origin=null
                other: CONST Int type=kotlin.Int value=31
              other: CALL 'public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.String' type=kotlin.Int origin=null
                $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:c type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
                  receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.hashCode' type=<root>.Data origin=null
          RETURN type=kotlin.Nothing from='public open fun hashCode (): kotlin.Int declared in <root>.Data'
            GET_VAR 'var result: kotlin.Int [var] declared in <root>.Data.hashCode' type=kotlin.Int origin=null
      FUN GENERATED_DATA_CLASS_MEMBER name:equals visibility:public modality:OPEN <> ($this:<root>.Data, other:kotlin.Any?) returnType:kotlin.Boolean [operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:<root>.Data
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
        BLOCK_BODY
          WHEN type=kotlin.Unit origin=null
            BRANCH
              if: CALL 'public final fun EQEQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQEQ
                arg0: GET_VAR '<this>: <root>.Data declared in <root>.Data.equals' type=<root>.Data origin=null
                arg1: GET_VAR 'other: kotlin.Any? declared in <root>.Data.equals' type=kotlin.Any? origin=null
              then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in <root>.Data'
                CONST Boolean type=kotlin.Boolean value=true
          WHEN type=kotlin.Unit origin=null
            BRANCH
              if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=<root>.Data
                GET_VAR 'other: kotlin.Any? declared in <root>.Data.equals' type=kotlin.Any? origin=null
              then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in <root>.Data'
                CONST Boolean type=kotlin.Boolean value=false
          VAR IR_TEMPORARY_VARIABLE name:tmp0_other_with_cast type:<root>.Data [val]
            TYPE_OP type=<root>.Data origin=CAST typeOperand=<root>.Data
              GET_VAR 'other: kotlin.Any? declared in <root>.Data.equals' type=kotlin.Any? origin=null
          WHEN type=kotlin.Unit origin=null
            BRANCH
              if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                  arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
                    receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.equals' type=<root>.Data origin=null
                  arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
                    receiver: GET_VAR 'val tmp0_other_with_cast: <root>.Data [val] declared in <root>.Data.equals' type=<root>.Data origin=null
              then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in <root>.Data'
                CONST Boolean type=kotlin.Boolean value=false
          WHEN type=kotlin.Unit origin=null
            BRANCH
              if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                  arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:b type:kotlin.Double visibility:private [final]' type=kotlin.Double origin=null
                    receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.equals' type=<root>.Data origin=null
                  arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:b type:kotlin.Double visibility:private [final]' type=kotlin.Double origin=null
                    receiver: GET_VAR 'val tmp0_other_with_cast: <root>.Data [val] declared in <root>.Data.equals' type=<root>.Data origin=null
              then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in <root>.Data'
                CONST Boolean type=kotlin.Boolean value=false
          WHEN type=kotlin.Unit origin=null
            BRANCH
              if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                  arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:c type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
                    receiver: GET_VAR '<this>: <root>.Data declared in <root>.Data.equals' type=<root>.Data origin=null
                  arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:c type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
                    receiver: GET_VAR 'val tmp0_other_with_cast: <root>.Data [val] declared in <root>.Data.equals' type=<root>.Data origin=null
              then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in <root>.Data'
                CONST Boolean type=kotlin.Boolean value=false
          RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in <root>.Data'
            CONST Boolean type=kotlin.Boolean value=true
    CLASS CLASS name:NotData modality:FINAL visibility:public superTypes:[kotlin.Any]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.NotData
      CONSTRUCTOR visibility:public <> (a:kotlin.Int, b:kotlin.Double, c:kotlin.String) returnType:<root>.NotData [primary]
        VALUE_PARAMETER name:a index:0 type:kotlin.Int
        VALUE_PARAMETER name:b index:1 type:kotlin.Double
        VALUE_PARAMETER name:c index:2 type:kotlin.String
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:NotData modality:FINAL visibility:public superTypes:[kotlin.Any]'
      PROPERTY name:a visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:a type:kotlin.Int visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'a: kotlin.Int declared in <root>.NotData.<init>' type=kotlin.Int origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-a> visibility:public modality:FINAL <> ($this:<root>.NotData) returnType:kotlin.Int
          correspondingProperty: PROPERTY name:a visibility:public modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.NotData
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-a> (): kotlin.Int declared in <root>.NotData'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
                receiver: GET_VAR '<this>: <root>.NotData declared in <root>.NotData.<get-a>' type=<root>.NotData origin=null
      PROPERTY name:b visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:b type:kotlin.Double visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'b: kotlin.Double declared in <root>.NotData.<init>' type=kotlin.Double origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-b> visibility:public modality:FINAL <> ($this:<root>.NotData) returnType:kotlin.Double
          correspondingProperty: PROPERTY name:b visibility:public modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.NotData
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-b> (): kotlin.Double declared in <root>.NotData'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:b type:kotlin.Double visibility:private [final]' type=kotlin.Double origin=null
                receiver: GET_VAR '<this>: <root>.NotData declared in <root>.NotData.<get-b>' type=<root>.NotData origin=null
      PROPERTY name:c visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:c type:kotlin.String visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'c: kotlin.String declared in <root>.NotData.<init>' type=kotlin.String origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-c> visibility:public modality:FINAL <> ($this:<root>.NotData) returnType:kotlin.String
          correspondingProperty: PROPERTY name:c visibility:public modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.NotData
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-c> (): kotlin.String declared in <root>.NotData'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:c type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
                receiver: GET_VAR '<this>: <root>.NotData declared in <root>.NotData.<get-c>' type=<root>.NotData origin=null
      PROPERTY name:asString visibility:private modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:asString type:kotlin.String visibility:private [final]
          EXPRESSION_BODY
            BLOCK type=kotlin.String origin=null
              VAR name:kClass_1 type:kotlin.reflect.KClass<out kotlin.Any> [val]
                GET_CLASS type=kotlin.reflect.KClass<out kotlin.Any>
                  GET_VAR '<this>: <root>.NotData declared in <root>.NotData' type=<root>.NotData origin=null
              VAR name:name_2 type:kotlin.String? [val]
                CALL 'public abstract fun <get-simpleName> (): kotlin.String? declared in kotlin.reflect.KClass' type=kotlin.String? origin=GET_PROPERTY
                  $this: GET_VAR 'val kClass_1: kotlin.reflect.KClass<out kotlin.Any> [val] declared in <root>.NotData.asString' type=kotlin.reflect.KClass<out kotlin.Any> origin=null
              VAR name:properties_3 type:kotlin.collections.List<kotlin.reflect.KProperty1<kotlin.Any, *>> [val]
                BLOCK type=kotlin.collections.List<kotlin.reflect.KProperty1<kotlin.Any, *>> origin=null
                  VAR IR_TEMPORARY_VARIABLE name:tmp1_filterIsInstance_0 type:kotlin.collections.Collection<kotlin.reflect.KCallable<*>> [val]
                    BLOCK type=kotlin.collections.Collection<kotlin.reflect.KCallable<*>> origin=(InlinerExpressionLocationHint : FIELD PROPERTY_BACKING_FIELD name:asString type:kotlin.String visibility:private [final] @null)
                      CALL 'public abstract fun <get-members> (): kotlin.collections.Collection<kotlin.reflect.KCallable<*>> declared in kotlin.reflect.KClass' type=kotlin.collections.Collection<kotlin.reflect.KCallable<*>> origin=GET_PROPERTY
                        $this: GET_VAR 'val kClass_1: kotlin.reflect.KClass<out kotlin.Any> [val] declared in <root>.NotData.asString' type=kotlin.reflect.KClass<out kotlin.Any> origin=null
                  RETURN type=kotlin.Nothing from='BLOCK type=kotlin.collections.List<kotlin.reflect.KProperty1<kotlin.Any, *>> origin=null'
                    BLOCK type=<root>.ArrayList<kotlin.reflect.KProperty1<kotlin.Any, *>> origin=null
                      VAR IR_TEMPORARY_VARIABLE name:tmp0_filterIsInstanceTo_0 type:<root>.ArrayList<kotlin.reflect.KProperty1<kotlin.Any, *>> [val]
                        BLOCK type=<root>.ArrayList<kotlin.reflect.KProperty1<kotlin.Any, *>> origin=(InlinerExpressionLocationHint : FIELD PROPERTY_BACKING_FIELD name:asString type:kotlin.String visibility:private [final] @null)
                          CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.ArrayList' type=<root>.ArrayList<kotlin.reflect.KProperty1<kotlin.Any, *>> origin=null
                            <class: E>: kotlin.reflect.KProperty1<kotlin.Any, *>
                      BLOCK type=kotlin.Unit origin=FOR_LOOP
                        VAR FOR_LOOP_ITERATOR name:tmp0_iterator_1 type:kotlin.collections.Iterator<kotlin.Any?> [val]
                          CALL 'public abstract fun iterator (): kotlin.collections.Iterator<T of kotlin.collections.Iterable> [operator] declared in kotlin.collections.Iterable' type=kotlin.collections.Iterator<kotlin.Any?> origin=FOR_LOOP_ITERATOR
                            $this: GET_VAR 'val tmp1_filterIsInstance_0: kotlin.collections.Collection<kotlin.reflect.KCallable<*>> [val] declared in <root>.NotData.asString' type=kotlin.collections.Collection<kotlin.reflect.KCallable<*>> origin=null
                        WHILE label=null origin=FOR_LOOP_INNER_WHILE
                          condition: CALL 'public abstract fun hasNext (): kotlin.Boolean [operator] declared in kotlin.collections.Iterator' type=kotlin.Boolean origin=FOR_LOOP_HAS_NEXT
                            $this: GET_VAR 'val tmp0_iterator_1: kotlin.collections.Iterator<kotlin.Any?> [val] declared in <root>.NotData.asString' type=kotlin.collections.Iterator<kotlin.Any?> origin=null
                          body: BLOCK type=kotlin.Unit origin=FOR_LOOP_INNER_WHILE
                            VAR FOR_LOOP_VARIABLE name:element_2 type:kotlin.Any? [val]
                              CALL 'public abstract fun next (): T of kotlin.collections.Iterator [operator] declared in kotlin.collections.Iterator' type=kotlin.Any? origin=FOR_LOOP_NEXT
                                $this: GET_VAR 'val tmp0_iterator_1: kotlin.collections.Iterator<kotlin.Any?> [val] declared in <root>.NotData.asString' type=kotlin.collections.Iterator<kotlin.Any?> origin=null
                            WHEN type=kotlin.Unit origin=IF
                              BRANCH
                                if: TYPE_OP type=kotlin.Boolean origin=INSTANCEOF typeOperand=kotlin.reflect.KProperty1<kotlin.Any, *>
                                  GET_VAR 'val element_2: kotlin.Any? [val] declared in <root>.NotData.asString' type=kotlin.Any? origin=null
                                then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                                  CALL 'public abstract fun add (element: E of kotlin.collections.MutableCollection): kotlin.Boolean declared in kotlin.collections.MutableCollection' type=kotlin.Boolean origin=null
                                    $this: GET_VAR 'val tmp0_filterIsInstanceTo_0: <root>.ArrayList<kotlin.reflect.KProperty1<kotlin.Any, *>> [val] declared in <root>.NotData.asString' type=<root>.ArrayList<kotlin.reflect.KProperty1<kotlin.Any, *>> origin=null
                                    element: TYPE_OP type=kotlin.reflect.KProperty1<kotlin.Any, *> origin=IMPLICIT_CAST typeOperand=kotlin.reflect.KProperty1<kotlin.Any, *>
                                      GET_VAR 'val element_2: kotlin.Any? [val] declared in <root>.NotData.asString' type=kotlin.Any? origin=null
                      RETURN type=kotlin.Nothing from='BLOCK type=<root>.ArrayList<kotlin.reflect.KProperty1<kotlin.Any, *>> origin=null'
                        GET_VAR 'val tmp0_filterIsInstanceTo_0: <root>.ArrayList<kotlin.reflect.KProperty1<kotlin.Any, *>> [val] declared in <root>.NotData.asString' type=<root>.ArrayList<kotlin.reflect.KProperty1<kotlin.Any, *>> origin=null
              VAR name:propertiesFormatted_4 type:kotlin.String [val]
                BLOCK type=kotlin.String origin=null
                  RETURN type=kotlin.Nothing from='BLOCK type=kotlin.String origin=null'
                    TYPE_OP type=kotlin.String origin=IMPLICIT_NOTNULL typeOperand=kotlin.String
                      CALL 'public open fun toString (): @[EnhancedNullability] kotlin.String declared in java.lang.StringBuilder' type=@[EnhancedNullability] kotlin.String origin=null
                        $this: BLOCK type=java.lang.StringBuilder origin=null
                          VAR IR_TEMPORARY_VARIABLE name:tmp2_joinTo_0 type:java.lang.StringBuilder [val]
                            BLOCK type=java.lang.StringBuilder origin=(InlinerExpressionLocationHint : FIELD PROPERTY_BACKING_FIELD name:asString type:kotlin.String visibility:private [final] @null)
                              CONSTRUCTOR_CALL 'public constructor <init> () declared in java.lang.StringBuilder' type=java.lang.StringBuilder origin=null
                          TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                            CALL 'public abstract fun append (p0: @[FlexibleNullability] kotlin.CharSequence?): @[FlexibleNullability] java.lang.Appendable? declared in java.lang.Appendable' type=@[FlexibleNullability] java.lang.Appendable? origin=null
                              $this: GET_VAR 'val tmp2_joinTo_0: java.lang.StringBuilder [val] declared in <root>.NotData.asString' type=java.lang.StringBuilder origin=null
                              p0: CONST String type=kotlin.String value=""
                          VAR name:count_1 type:kotlin.Int [var]
                            CONST Int type=kotlin.Int value=0
                          BLOCK type=kotlin.Unit origin=FOR_LOOP
                            VAR FOR_LOOP_ITERATOR name:tmp0_iterator_2 type:kotlin.collections.Iterator<kotlin.reflect.KProperty1<kotlin.Any, *>> [val]
                              CALL 'public abstract fun iterator (): kotlin.collections.Iterator<T of kotlin.collections.Iterable> [operator] declared in kotlin.collections.Iterable' type=kotlin.collections.Iterator<kotlin.reflect.KProperty1<kotlin.Any, *>> origin=FOR_LOOP_ITERATOR
                                $this: GET_VAR 'val properties_3: kotlin.collections.List<kotlin.reflect.KProperty1<kotlin.Any, *>> [val] declared in <root>.NotData.asString' type=kotlin.collections.List<kotlin.reflect.KProperty1<kotlin.Any, *>> origin=null
                            WHILE label=null origin=FOR_LOOP_INNER_WHILE
                              condition: CALL 'public abstract fun hasNext (): kotlin.Boolean [operator] declared in kotlin.collections.Iterator' type=kotlin.Boolean origin=FOR_LOOP_HAS_NEXT
                                $this: GET_VAR 'val tmp0_iterator_2: kotlin.collections.Iterator<kotlin.reflect.KProperty1<kotlin.Any, *>> [val] declared in <root>.NotData.asString' type=kotlin.collections.Iterator<kotlin.reflect.KProperty1<kotlin.Any, *>> origin=null
                              body: BLOCK type=kotlin.Unit origin=FOR_LOOP_INNER_WHILE
                                VAR FOR_LOOP_VARIABLE name:element_3 type:kotlin.reflect.KProperty1<kotlin.Any, *> [val]
                                  CALL 'public abstract fun next (): T of kotlin.collections.Iterator [operator] declared in kotlin.collections.Iterator' type=kotlin.reflect.KProperty1<kotlin.Any, *> origin=FOR_LOOP_NEXT
                                    $this: GET_VAR 'val tmp0_iterator_2: kotlin.collections.Iterator<kotlin.reflect.KProperty1<kotlin.Any, *>> [val] declared in <root>.NotData.asString' type=kotlin.collections.Iterator<kotlin.reflect.KProperty1<kotlin.Any, *>> origin=null
                                BLOCK type=kotlin.Unit origin=null
                                  WHEN type=kotlin.Unit origin=IF
                                    BRANCH
                                      if: CALL 'public final fun greater (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=GT
                                        arg0: BLOCK type=kotlin.Int origin=PREFIX_INCR
                                          SET_VAR 'var count_1: kotlin.Int [var] declared in <root>.NotData.asString' type=kotlin.Unit origin=PREFIX_INCR
                                            CALL 'public final fun inc (): kotlin.Int [operator] declared in kotlin.Int' type=kotlin.Int origin=PREFIX_INCR
                                              $this: GET_VAR 'var count_1: kotlin.Int [var] declared in <root>.NotData.asString' type=kotlin.Int origin=PREFIX_INCR
                                          GET_VAR 'var count_1: kotlin.Int [var] declared in <root>.NotData.asString' type=kotlin.Int origin=PREFIX_INCR
                                        arg1: CONST Int type=kotlin.Int value=1
                                      then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                                        CALL 'public abstract fun append (p0: @[FlexibleNullability] kotlin.CharSequence?): @[FlexibleNullability] java.lang.Appendable? declared in java.lang.Appendable' type=@[FlexibleNullability] java.lang.Appendable? origin=null
                                          $this: GET_VAR 'val tmp2_joinTo_0: java.lang.StringBuilder [val] declared in <root>.NotData.asString' type=java.lang.StringBuilder origin=null
                                          p0: CONST String type=kotlin.String value=", "
                                  BLOCK type=kotlin.Unit origin=null
                                    BLOCK type=kotlin.Unit origin=null
                                      WHEN type=kotlin.Unit origin=WHEN
                                        BRANCH
                                          if: TYPE_OP type=kotlin.Boolean origin=INSTANCEOF typeOperand=kotlin.CharSequence?
                                            GET_VAR 'val element_3: kotlin.reflect.KProperty1<kotlin.Any, *> [val] declared in <root>.NotData.asString' type=kotlin.reflect.KProperty1<kotlin.Any, *> origin=null
                                          then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                                            CALL 'public abstract fun append (p0: @[FlexibleNullability] kotlin.CharSequence?): @[FlexibleNullability] java.lang.Appendable? declared in java.lang.Appendable' type=@[FlexibleNullability] java.lang.Appendable? origin=null
                                              $this: GET_VAR 'val tmp2_joinTo_0: java.lang.StringBuilder [val] declared in <root>.NotData.asString' type=java.lang.StringBuilder origin=null
                                              p0: TYPE_OP type=@[FlexibleNullability] kotlin.CharSequence? origin=IMPLICIT_CAST typeOperand=@[FlexibleNullability] kotlin.CharSequence?
                                                GET_VAR 'val element_3: kotlin.reflect.KProperty1<kotlin.Any, *> [val] declared in <root>.NotData.asString' type=kotlin.reflect.KProperty1<kotlin.Any, *> origin=null
                                        BRANCH
                                          if: TYPE_OP type=kotlin.Boolean origin=INSTANCEOF typeOperand=kotlin.Char
                                            GET_VAR 'val element_3: kotlin.reflect.KProperty1<kotlin.Any, *> [val] declared in <root>.NotData.asString' type=kotlin.reflect.KProperty1<kotlin.Any, *> origin=null
                                          then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                                            CALL 'public abstract fun append (p0: kotlin.Char): @[FlexibleNullability] java.lang.Appendable? declared in java.lang.Appendable' type=@[FlexibleNullability] java.lang.Appendable? origin=null
                                              $this: GET_VAR 'val tmp2_joinTo_0: java.lang.StringBuilder [val] declared in <root>.NotData.asString' type=java.lang.StringBuilder origin=null
                                              p0: TYPE_OP type=kotlin.Char origin=IMPLICIT_CAST typeOperand=kotlin.Char
                                                GET_VAR 'val element_3: kotlin.reflect.KProperty1<kotlin.Any, *> [val] declared in <root>.NotData.asString' type=kotlin.reflect.KProperty1<kotlin.Any, *> origin=null
                                        BRANCH
                                          if: CONST Boolean type=kotlin.Boolean value=true
                                          then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                                            CALL 'public abstract fun append (p0: @[FlexibleNullability] kotlin.CharSequence?): @[FlexibleNullability] java.lang.Appendable? declared in java.lang.Appendable' type=@[FlexibleNullability] java.lang.Appendable? origin=null
                                              $this: GET_VAR 'val tmp2_joinTo_0: java.lang.StringBuilder [val] declared in <root>.NotData.asString' type=java.lang.StringBuilder origin=null
                                              p0: BLOCK type=kotlin.CharSequence origin=null
                                                RETURN type=kotlin.Nothing from='BLOCK type=kotlin.CharSequence origin=null'
                                                  BLOCK type=kotlin.CharSequence origin=null
                                                    RETURN type=kotlin.Nothing from='BLOCK type=kotlin.CharSequence origin=null'
                                                      BLOCK type=kotlin.CharSequence origin=null
                                                        RETURN type=kotlin.Nothing from='BLOCK type=kotlin.CharSequence origin=null'
                                                          STRING_CONCATENATION type=kotlin.String
                                                            CALL 'public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty1' type=kotlin.String origin=GET_PROPERTY
                                                              $this: GET_VAR 'val element_3: kotlin.reflect.KProperty1<kotlin.Any, *> [val] declared in <root>.NotData.asString' type=kotlin.reflect.KProperty1<kotlin.Any, *> origin=null
                                                            CONST String type=kotlin.String value="="
                                                            CALL 'public abstract fun invoke (p1: T of kotlin.reflect.KProperty1): V of kotlin.reflect.KProperty1 [fake_override,operator] declared in kotlin.reflect.KProperty1' type=kotlin.Any? origin=null
                                                              $this: GET_VAR 'val element_3: kotlin.reflect.KProperty1<kotlin.Any, *> [val] declared in <root>.NotData.asString' type=kotlin.reflect.KProperty1<kotlin.Any, *> origin=null
                                                              p1: GET_VAR '<this>: <root>.NotData declared in <root>.NotData' type=<root>.NotData origin=null
                          WHEN type=kotlin.Unit origin=IF
                            BRANCH
                              if: CONST Boolean type=kotlin.Boolean value=false
                              then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                                CALL 'public abstract fun append (p0: @[FlexibleNullability] kotlin.CharSequence?): @[FlexibleNullability] java.lang.Appendable? declared in java.lang.Appendable' type=@[FlexibleNullability] java.lang.Appendable? origin=null
                                  $this: GET_VAR 'val tmp2_joinTo_0: java.lang.StringBuilder [val] declared in <root>.NotData.asString' type=java.lang.StringBuilder origin=null
                                  p0: CONST String type=kotlin.String value="..."
                          TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                            CALL 'public abstract fun append (p0: @[FlexibleNullability] kotlin.CharSequence?): @[FlexibleNullability] java.lang.Appendable? declared in java.lang.Appendable' type=@[FlexibleNullability] java.lang.Appendable? origin=null
                              $this: GET_VAR 'val tmp2_joinTo_0: java.lang.StringBuilder [val] declared in <root>.NotData.asString' type=java.lang.StringBuilder origin=null
                              p0: CONST String type=kotlin.String value=""
                          RETURN type=kotlin.Nothing from='BLOCK type=java.lang.StringBuilder origin=null'
                            GET_VAR 'val tmp2_joinTo_0: java.lang.StringBuilder [val] declared in <root>.NotData.asString' type=java.lang.StringBuilder origin=null
              RETURN type=kotlin.Nothing from='BLOCK type=kotlin.String origin=null'
                CONST String type=kotlin.String value=")"
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-asString> visibility:private modality:FINAL <> ($this:<root>.NotData) returnType:kotlin.String
          correspondingProperty: PROPERTY name:asString visibility:private modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.NotData
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='private final fun <get-asString> (): kotlin.String declared in <root>.NotData'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:asString type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
                receiver: GET_VAR '<this>: <root>.NotData declared in <root>.NotData.<get-asString>' type=<root>.NotData origin=null
      FUN name:toString visibility:public modality:OPEN <> ($this:<root>.NotData) returnType:kotlin.String
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:<root>.NotData
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public open fun toString (): kotlin.String declared in <root>.NotData'
            CALL 'private final fun <get-asString> (): kotlin.String declared in <root>.NotData' type=kotlin.String origin=GET_PROPERTY
              $this: GET_VAR '<this>: <root>.NotData declared in <root>.NotData.toString' type=<root>.NotData origin=null
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN name:toStringAsDataClass visibility:public modality:FINAL <> ($receiver:kotlin.Any) returnType:kotlin.String [inline]
      annotations:
        PartialEvaluation
      $receiver: VALUE_PARAMETER name:<this> type:kotlin.Any
      BLOCK_BODY
        VAR name:kClass type:kotlin.reflect.KClass<out kotlin.Any> [val]
          GET_CLASS type=kotlin.reflect.KClass<out kotlin.Any>
            GET_VAR '<this>: kotlin.Any declared in <root>.toStringAsDataClass' type=kotlin.Any origin=null
        VAR name:name type:kotlin.String? [val]
          CALL 'public abstract fun <get-simpleName> (): kotlin.String? declared in kotlin.reflect.KClass' type=kotlin.String? origin=GET_PROPERTY
            $this: GET_VAR 'val kClass: kotlin.reflect.KClass<out kotlin.Any> [val] declared in <root>.toStringAsDataClass' type=kotlin.reflect.KClass<out kotlin.Any> origin=null
        VAR name:properties type:kotlin.collections.List<kotlin.reflect.KProperty1<kotlin.Any, *>> [val]
          CALL 'public final fun filterIsInstance <R> (): kotlin.collections.List<R of <root>.filterIsInstance> [inline] declared in <root>' type=kotlin.collections.List<kotlin.reflect.KProperty1<kotlin.Any, *>> origin=null
            <R>: kotlin.reflect.KProperty1<kotlin.Any, *>
            $receiver: CALL 'public abstract fun <get-members> (): kotlin.collections.Collection<kotlin.reflect.KCallable<*>> declared in kotlin.reflect.KClass' type=kotlin.collections.Collection<kotlin.reflect.KCallable<*>> origin=GET_PROPERTY
              $this: GET_VAR 'val kClass: kotlin.reflect.KClass<out kotlin.Any> [val] declared in <root>.toStringAsDataClass' type=kotlin.reflect.KClass<out kotlin.Any> origin=null
        VAR name:propertiesFormatted type:kotlin.String [val]
          CALL 'public final fun joinToString <T> (separator: kotlin.CharSequence, prefix: kotlin.CharSequence, postfix: kotlin.CharSequence, limit: kotlin.Int, truncated: kotlin.CharSequence, transform: kotlin.Function1<T of <root>.joinToString, kotlin.CharSequence>): kotlin.String [inline] declared in <root>' type=kotlin.String origin=null
            <T>: kotlin.reflect.KProperty1<kotlin.Any, *>
            $receiver: GET_VAR 'val properties: kotlin.collections.List<kotlin.reflect.KProperty1<kotlin.Any, *>> [val] declared in <root>.toStringAsDataClass' type=kotlin.collections.List<kotlin.reflect.KProperty1<kotlin.Any, *>> origin=null
            transform: FUN_EXPR type=kotlin.Function1<kotlin.reflect.KProperty1<kotlin.Any, *>, kotlin.CharSequence> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:kotlin.reflect.KProperty1<kotlin.Any, *>) returnType:kotlin.CharSequence
                VALUE_PARAMETER name:it index:0 type:kotlin.reflect.KProperty1<kotlin.Any, *>
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: kotlin.reflect.KProperty1<kotlin.Any, *>): kotlin.CharSequence declared in <root>.toStringAsDataClass'
                    STRING_CONCATENATION type=kotlin.String
                      CALL 'public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty1' type=kotlin.String origin=GET_PROPERTY
                        $this: GET_VAR 'it: kotlin.reflect.KProperty1<kotlin.Any, *> declared in <root>.toStringAsDataClass.<anonymous>' type=kotlin.reflect.KProperty1<kotlin.Any, *> origin=null
                      CONST String type=kotlin.String value="="
                      CALL 'public abstract fun invoke (p1: T of kotlin.reflect.KProperty1): V of kotlin.reflect.KProperty1 [fake_override,operator] declared in kotlin.reflect.KProperty1' type=kotlin.Any? origin=null
                        $this: GET_VAR 'it: kotlin.reflect.KProperty1<kotlin.Any, *> declared in <root>.toStringAsDataClass.<anonymous>' type=kotlin.reflect.KProperty1<kotlin.Any, *> origin=null
                        p1: GET_VAR '<this>: kotlin.Any declared in <root>.toStringAsDataClass' type=kotlin.Any origin=null
        RETURN type=kotlin.Nothing from='public final fun toStringAsDataClass (): kotlin.String [inline] declared in <root>'
          STRING_CONCATENATION type=kotlin.String
            GET_VAR 'val name: kotlin.String? [val] declared in <root>.toStringAsDataClass' type=kotlin.String? origin=null
            CONST String type=kotlin.String value="("
            GET_VAR 'val propertiesFormatted: kotlin.String [val] declared in <root>.toStringAsDataClass' type=kotlin.String origin=null
            CONST String type=kotlin.String value=")"
    CLASS CLASS name:ArrayList modality:FINAL visibility:public superTypes:[kotlin.collections.MutableList<E of <root>.ArrayList>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.ArrayList<E of <root>.ArrayList>
      TYPE_PARAMETER name:E index:0 variance: superTypes:[kotlin.Any?]
      CONSTRUCTOR visibility:public <> () returnType:<root>.ArrayList<E of <root>.ArrayList>
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:ArrayList modality:FINAL visibility:public superTypes:[kotlin.collections.MutableList<E of <root>.ArrayList>]'
      FUN FAKE_OVERRIDE name:add visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<E of <root>.ArrayList>, element:E of <root>.ArrayList) returnType:kotlin.Boolean [fake_override]
        overridden:
          public abstract fun add (element: E of kotlin.collections.MutableList): kotlin.Boolean declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<E of <root>.ArrayList>
        VALUE_PARAMETER name:element index:0 type:E of <root>.ArrayList
      FUN FAKE_OVERRIDE name:add visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<E of <root>.ArrayList>, index:kotlin.Int, element:E of <root>.ArrayList) returnType:kotlin.Unit [fake_override]
        overridden:
          public abstract fun add (index: kotlin.Int, element: E of kotlin.collections.MutableList): kotlin.Unit declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<E of <root>.ArrayList>
        VALUE_PARAMETER name:index index:0 type:kotlin.Int
        VALUE_PARAMETER name:element index:1 type:E of <root>.ArrayList
      FUN FAKE_OVERRIDE name:addAll visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<E of <root>.ArrayList>, elements:kotlin.collections.Collection<E of <root>.ArrayList>) returnType:kotlin.Boolean [fake_override]
        overridden:
          public abstract fun addAll (elements: kotlin.collections.Collection<E of kotlin.collections.MutableList>): kotlin.Boolean declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<E of <root>.ArrayList>
        VALUE_PARAMETER name:elements index:0 type:kotlin.collections.Collection<E of <root>.ArrayList>
      FUN FAKE_OVERRIDE name:addAll visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<E of <root>.ArrayList>, index:kotlin.Int, elements:kotlin.collections.Collection<E of <root>.ArrayList>) returnType:kotlin.Boolean [fake_override]
        overridden:
          public abstract fun addAll (index: kotlin.Int, elements: kotlin.collections.Collection<E of kotlin.collections.MutableList>): kotlin.Boolean declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<E of <root>.ArrayList>
        VALUE_PARAMETER name:index index:0 type:kotlin.Int
        VALUE_PARAMETER name:elements index:1 type:kotlin.collections.Collection<E of <root>.ArrayList>
      FUN FAKE_OVERRIDE name:clear visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<E of <root>.ArrayList>) returnType:kotlin.Unit [fake_override]
        overridden:
          public abstract fun clear (): kotlin.Unit declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<E of <root>.ArrayList>
      FUN FAKE_OVERRIDE name:contains visibility:public modality:ABSTRACT <> ($this:kotlin.collections.List<E of <root>.ArrayList>, element:E of <root>.ArrayList) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public abstract fun contains (element: E of kotlin.collections.MutableList): kotlin.Boolean [fake_override,operator] declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.List<E of <root>.ArrayList>
        VALUE_PARAMETER name:element index:0 type:E of <root>.ArrayList
      FUN FAKE_OVERRIDE name:containsAll visibility:public modality:ABSTRACT <> ($this:kotlin.collections.List<E of <root>.ArrayList>, elements:kotlin.collections.Collection<E of <root>.ArrayList>) returnType:kotlin.Boolean [fake_override]
        overridden:
          public abstract fun containsAll (elements: kotlin.collections.Collection<E of kotlin.collections.MutableList>): kotlin.Boolean [fake_override] declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.List<E of <root>.ArrayList>
        VALUE_PARAMETER name:elements index:0 type:kotlin.collections.Collection<E of <root>.ArrayList>
      FUN FAKE_OVERRIDE name:get visibility:public modality:ABSTRACT <> ($this:kotlin.collections.List<E of <root>.ArrayList>, index:kotlin.Int) returnType:E of <root>.ArrayList [fake_override,operator]
        overridden:
          public abstract fun get (index: kotlin.Int): E of kotlin.collections.MutableList [fake_override,operator] declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.List<E of <root>.ArrayList>
        VALUE_PARAMETER name:index index:0 type:kotlin.Int
      FUN FAKE_OVERRIDE name:indexOf visibility:public modality:ABSTRACT <> ($this:kotlin.collections.List<E of <root>.ArrayList>, element:E of <root>.ArrayList) returnType:kotlin.Int [fake_override]
        overridden:
          public abstract fun indexOf (element: E of kotlin.collections.MutableList): kotlin.Int [fake_override] declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.List<E of <root>.ArrayList>
        VALUE_PARAMETER name:element index:0 type:E of <root>.ArrayList
      FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:ABSTRACT <> ($this:kotlin.collections.List<E of <root>.ArrayList>) returnType:kotlin.Boolean [fake_override]
        overridden:
          public abstract fun isEmpty (): kotlin.Boolean [fake_override] declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.List<E of <root>.ArrayList>
      FUN FAKE_OVERRIDE name:iterator visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableCollection<E of <root>.ArrayList>) returnType:kotlin.collections.MutableIterator<E of <root>.ArrayList> [fake_override,operator]
        overridden:
          public abstract fun iterator (): kotlin.collections.MutableIterator<E of kotlin.collections.MutableList> [fake_override,operator] declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableCollection<E of <root>.ArrayList>
      FUN FAKE_OVERRIDE name:lastIndexOf visibility:public modality:ABSTRACT <> ($this:kotlin.collections.List<E of <root>.ArrayList>, element:E of <root>.ArrayList) returnType:kotlin.Int [fake_override]
        overridden:
          public abstract fun lastIndexOf (element: E of kotlin.collections.MutableList): kotlin.Int [fake_override] declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.List<E of <root>.ArrayList>
        VALUE_PARAMETER name:element index:0 type:E of <root>.ArrayList
      FUN FAKE_OVERRIDE name:listIterator visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<E of <root>.ArrayList>) returnType:kotlin.collections.MutableListIterator<E of <root>.ArrayList> [fake_override]
        overridden:
          public abstract fun listIterator (): kotlin.collections.MutableListIterator<E of kotlin.collections.MutableList> declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<E of <root>.ArrayList>
      FUN FAKE_OVERRIDE name:listIterator visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<E of <root>.ArrayList>, index:kotlin.Int) returnType:kotlin.collections.MutableListIterator<E of <root>.ArrayList> [fake_override]
        overridden:
          public abstract fun listIterator (index: kotlin.Int): kotlin.collections.MutableListIterator<E of kotlin.collections.MutableList> declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<E of <root>.ArrayList>
        VALUE_PARAMETER name:index index:0 type:kotlin.Int
      FUN FAKE_OVERRIDE name:remove visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<E of <root>.ArrayList>, element:E of <root>.ArrayList) returnType:kotlin.Boolean [fake_override]
        overridden:
          public abstract fun remove (element: E of kotlin.collections.MutableList): kotlin.Boolean declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<E of <root>.ArrayList>
        VALUE_PARAMETER name:element index:0 type:E of <root>.ArrayList
      FUN FAKE_OVERRIDE name:removeAll visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<E of <root>.ArrayList>, elements:kotlin.collections.Collection<E of <root>.ArrayList>) returnType:kotlin.Boolean [fake_override]
        overridden:
          public abstract fun removeAll (elements: kotlin.collections.Collection<E of kotlin.collections.MutableList>): kotlin.Boolean declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<E of <root>.ArrayList>
        VALUE_PARAMETER name:elements index:0 type:kotlin.collections.Collection<E of <root>.ArrayList>
      FUN FAKE_OVERRIDE name:removeAt visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<E of <root>.ArrayList>, index:kotlin.Int) returnType:E of <root>.ArrayList [fake_override]
        overridden:
          public abstract fun removeAt (index: kotlin.Int): E of kotlin.collections.MutableList declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<E of <root>.ArrayList>
        VALUE_PARAMETER name:index index:0 type:kotlin.Int
      FUN FAKE_OVERRIDE name:retainAll visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<E of <root>.ArrayList>, elements:kotlin.collections.Collection<E of <root>.ArrayList>) returnType:kotlin.Boolean [fake_override]
        overridden:
          public abstract fun retainAll (elements: kotlin.collections.Collection<E of kotlin.collections.MutableList>): kotlin.Boolean declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<E of <root>.ArrayList>
        VALUE_PARAMETER name:elements index:0 type:kotlin.collections.Collection<E of <root>.ArrayList>
      FUN FAKE_OVERRIDE name:set visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<E of <root>.ArrayList>, index:kotlin.Int, element:E of <root>.ArrayList) returnType:E of <root>.ArrayList [fake_override,operator]
        overridden:
          public abstract fun set (index: kotlin.Int, element: E of kotlin.collections.MutableList): E of kotlin.collections.MutableList [operator] declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<E of <root>.ArrayList>
        VALUE_PARAMETER name:index index:0 type:kotlin.Int
        VALUE_PARAMETER name:element index:1 type:E of <root>.ArrayList
      FUN FAKE_OVERRIDE name:subList visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<E of <root>.ArrayList>, fromIndex:kotlin.Int, toIndex:kotlin.Int) returnType:kotlin.collections.MutableList<E of <root>.ArrayList> [fake_override]
        overridden:
          public abstract fun subList (fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.MutableList<E of kotlin.collections.MutableList> declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<E of <root>.ArrayList>
        VALUE_PARAMETER name:fromIndex index:0 type:kotlin.Int
        VALUE_PARAMETER name:toIndex index:1 type:kotlin.Int
      PROPERTY FAKE_OVERRIDE name:size visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract size: kotlin.Int [val]
        FUN FAKE_OVERRIDE name:<get-size> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.List<E of <root>.ArrayList>) returnType:kotlin.Int [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:size visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-size> (): kotlin.Int [fake_override] declared in kotlin.collections.MutableList
          $this: VALUE_PARAMETER name:<this> type:kotlin.collections.List<E of <root>.ArrayList>
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN name:filterIsInstance visibility:public modality:FINAL <R> ($receiver:kotlin.collections.Iterable<*>) returnType:kotlin.collections.List<R of <root>.filterIsInstance> [inline]
      annotations:
        PartialEvaluation
      TYPE_PARAMETER name:R index:0 variance: superTypes:[kotlin.Any?]
      $receiver: VALUE_PARAMETER name:<this> type:kotlin.collections.Iterable<*>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun filterIsInstance <R> (): kotlin.collections.List<R of <root>.filterIsInstance> [inline] declared in <root>'
          CALL 'public final fun filterIsInstanceTo <R, C> (destination: C of <root>.filterIsInstanceTo): C of <root>.filterIsInstanceTo [inline] declared in <root>' type=<root>.ArrayList<R of <root>.filterIsInstance> origin=null
            <R>: R of <root>.filterIsInstance
            <C>: <root>.ArrayList<R of <root>.filterIsInstance>
            $receiver: GET_VAR '<this>: kotlin.collections.Iterable<*> declared in <root>.filterIsInstance' type=kotlin.collections.Iterable<*> origin=null
            destination: CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.ArrayList' type=<root>.ArrayList<R of <root>.filterIsInstance> origin=null
              <class: E>: R of <root>.filterIsInstance
    FUN name:filterIsInstanceTo visibility:public modality:FINAL <R, C> ($receiver:kotlin.collections.Iterable<*>, destination:C of <root>.filterIsInstanceTo) returnType:C of <root>.filterIsInstanceTo [inline]
      annotations:
        PartialEvaluation
      TYPE_PARAMETER name:R index:0 variance: superTypes:[kotlin.Any?]
      TYPE_PARAMETER name:C index:1 variance: superTypes:[kotlin.collections.MutableCollection<in R of <root>.filterIsInstanceTo>]
      $receiver: VALUE_PARAMETER name:<this> type:kotlin.collections.Iterable<*>
      VALUE_PARAMETER name:destination index:0 type:C of <root>.filterIsInstanceTo
      BLOCK_BODY
        BLOCK type=kotlin.Unit origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:tmp0_iterator type:kotlin.collections.Iterator<kotlin.Any?> [val]
            CALL 'public abstract fun iterator (): kotlin.collections.Iterator<T of kotlin.collections.Iterable> [operator] declared in kotlin.collections.Iterable' type=kotlin.collections.Iterator<kotlin.Any?> origin=FOR_LOOP_ITERATOR
              $this: GET_VAR '<this>: kotlin.collections.Iterable<*> declared in <root>.filterIsInstanceTo' type=kotlin.collections.Iterable<*> origin=null
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'public abstract fun hasNext (): kotlin.Boolean [operator] declared in kotlin.collections.Iterator' type=kotlin.Boolean origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val tmp0_iterator: kotlin.collections.Iterator<kotlin.Any?> [val] declared in <root>.filterIsInstanceTo' type=kotlin.collections.Iterator<kotlin.Any?> origin=null
            body: BLOCK type=kotlin.Unit origin=FOR_LOOP_INNER_WHILE
              VAR FOR_LOOP_VARIABLE name:element type:kotlin.Any? [val]
                CALL 'public abstract fun next (): T of kotlin.collections.Iterator [operator] declared in kotlin.collections.Iterator' type=kotlin.Any? origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val tmp0_iterator: kotlin.collections.Iterator<kotlin.Any?> [val] declared in <root>.filterIsInstanceTo' type=kotlin.collections.Iterator<kotlin.Any?> origin=null
              WHEN type=kotlin.Unit origin=IF
                BRANCH
                  if: TYPE_OP type=kotlin.Boolean origin=INSTANCEOF typeOperand=R of <root>.filterIsInstanceTo
                    GET_VAR 'val element: kotlin.Any? [val] declared in <root>.filterIsInstanceTo' type=kotlin.Any? origin=null
                  then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                    CALL 'public abstract fun add (element: E of kotlin.collections.MutableCollection): kotlin.Boolean declared in kotlin.collections.MutableCollection' type=kotlin.Boolean origin=null
                      $this: GET_VAR 'destination: C of <root>.filterIsInstanceTo declared in <root>.filterIsInstanceTo' type=C of <root>.filterIsInstanceTo origin=null
                      element: TYPE_OP type=R of <root>.filterIsInstanceTo origin=IMPLICIT_CAST typeOperand=R of <root>.filterIsInstanceTo
                        GET_VAR 'val element: kotlin.Any? [val] declared in <root>.filterIsInstanceTo' type=kotlin.Any? origin=null
        RETURN type=kotlin.Nothing from='public final fun filterIsInstanceTo <R, C> (destination: C of <root>.filterIsInstanceTo): C of <root>.filterIsInstanceTo [inline] declared in <root>'
          GET_VAR 'destination: C of <root>.filterIsInstanceTo declared in <root>.filterIsInstanceTo' type=C of <root>.filterIsInstanceTo origin=null
    FUN name:joinToString visibility:public modality:FINAL <T> ($receiver:kotlin.collections.Iterable<T of <root>.joinToString>, separator:kotlin.CharSequence, prefix:kotlin.CharSequence, postfix:kotlin.CharSequence, limit:kotlin.Int, truncated:kotlin.CharSequence, transform:kotlin.Function1<T of <root>.joinToString, kotlin.CharSequence>) returnType:kotlin.String [inline]
      annotations:
        PartialEvaluation
      TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?]
      $receiver: VALUE_PARAMETER name:<this> type:kotlin.collections.Iterable<T of <root>.joinToString>
      VALUE_PARAMETER name:separator index:0 type:kotlin.CharSequence
        EXPRESSION_BODY
          CONST String type=kotlin.String value=", "
      VALUE_PARAMETER name:prefix index:1 type:kotlin.CharSequence
        EXPRESSION_BODY
          CONST String type=kotlin.String value=""
      VALUE_PARAMETER name:postfix index:2 type:kotlin.CharSequence
        EXPRESSION_BODY
          CONST String type=kotlin.String value=""
      VALUE_PARAMETER name:limit index:3 type:kotlin.Int
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value=-1
      VALUE_PARAMETER name:truncated index:4 type:kotlin.CharSequence
        EXPRESSION_BODY
          CONST String type=kotlin.String value="..."
      VALUE_PARAMETER name:transform index:5 type:kotlin.Function1<T of <root>.joinToString, kotlin.CharSequence> [crossinline]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun joinToString <T> (separator: kotlin.CharSequence, prefix: kotlin.CharSequence, postfix: kotlin.CharSequence, limit: kotlin.Int, truncated: kotlin.CharSequence, transform: kotlin.Function1<T of <root>.joinToString, kotlin.CharSequence>): kotlin.String [inline] declared in <root>'
          TYPE_OP type=kotlin.String origin=IMPLICIT_NOTNULL typeOperand=kotlin.String
            CALL 'public open fun toString (): @[EnhancedNullability] kotlin.String declared in java.lang.StringBuilder' type=@[EnhancedNullability] kotlin.String origin=null
              $this: CALL 'public final fun joinTo <T, A> (buffer: A of <root>.joinTo, separator: kotlin.CharSequence, prefix: kotlin.CharSequence, postfix: kotlin.CharSequence, limit: kotlin.Int, truncated: kotlin.CharSequence, transform: kotlin.Function1<T of <root>.joinTo, kotlin.CharSequence>): A of <root>.joinTo [inline] declared in <root>' type=java.lang.StringBuilder origin=null
                <T>: T of <root>.joinToString
                <A>: java.lang.StringBuilder
                $receiver: GET_VAR '<this>: kotlin.collections.Iterable<T of <root>.joinToString> declared in <root>.joinToString' type=kotlin.collections.Iterable<T of <root>.joinToString> origin=null
                buffer: CONSTRUCTOR_CALL 'public constructor <init> () declared in java.lang.StringBuilder' type=java.lang.StringBuilder origin=null
                separator: GET_VAR 'separator: kotlin.CharSequence declared in <root>.joinToString' type=kotlin.CharSequence origin=null
                prefix: GET_VAR 'prefix: kotlin.CharSequence declared in <root>.joinToString' type=kotlin.CharSequence origin=null
                postfix: GET_VAR 'postfix: kotlin.CharSequence declared in <root>.joinToString' type=kotlin.CharSequence origin=null
                limit: GET_VAR 'limit: kotlin.Int declared in <root>.joinToString' type=kotlin.Int origin=null
                truncated: GET_VAR 'truncated: kotlin.CharSequence declared in <root>.joinToString' type=kotlin.CharSequence origin=null
                transform: FUN_EXPR type=kotlin.Function1<T of <root>.joinToString, kotlin.CharSequence> origin=LAMBDA
                  FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:T of <root>.joinToString) returnType:kotlin.CharSequence
                    VALUE_PARAMETER name:it index:0 type:T of <root>.joinToString
                    BLOCK_BODY
                      RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: T of <root>.joinToString): kotlin.CharSequence declared in <root>.joinToString'
                        CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.CharSequence origin=INVOKE
                          $this: GET_VAR 'transform: kotlin.Function1<T of <root>.joinToString, kotlin.CharSequence> [crossinline] declared in <root>.joinToString' type=kotlin.Function1<T of <root>.joinToString, kotlin.CharSequence> origin=VARIABLE_AS_FUNCTION
                          p1: GET_VAR 'it: T of <root>.joinToString declared in <root>.joinToString.<anonymous>' type=T of <root>.joinToString origin=null
    FUN name:joinTo visibility:public modality:FINAL <T, A> ($receiver:kotlin.collections.Iterable<T of <root>.joinTo>, buffer:A of <root>.joinTo, separator:kotlin.CharSequence, prefix:kotlin.CharSequence, postfix:kotlin.CharSequence, limit:kotlin.Int, truncated:kotlin.CharSequence, transform:kotlin.Function1<T of <root>.joinTo, kotlin.CharSequence>) returnType:A of <root>.joinTo [inline]
      annotations:
        PartialEvaluation
      TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?]
      TYPE_PARAMETER name:A index:1 variance: superTypes:[java.lang.Appendable]
      $receiver: VALUE_PARAMETER name:<this> type:kotlin.collections.Iterable<T of <root>.joinTo>
      VALUE_PARAMETER name:buffer index:0 type:A of <root>.joinTo
      VALUE_PARAMETER name:separator index:1 type:kotlin.CharSequence
        EXPRESSION_BODY
          CONST String type=kotlin.String value=", "
      VALUE_PARAMETER name:prefix index:2 type:kotlin.CharSequence
        EXPRESSION_BODY
          CONST String type=kotlin.String value=""
      VALUE_PARAMETER name:postfix index:3 type:kotlin.CharSequence
        EXPRESSION_BODY
          CONST String type=kotlin.String value=""
      VALUE_PARAMETER name:limit index:4 type:kotlin.Int
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value=-1
      VALUE_PARAMETER name:truncated index:5 type:kotlin.CharSequence
        EXPRESSION_BODY
          CONST String type=kotlin.String value="..."
      VALUE_PARAMETER name:transform index:6 type:kotlin.Function1<T of <root>.joinTo, kotlin.CharSequence> [crossinline]
      BLOCK_BODY
        TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
          CALL 'public abstract fun append (p0: @[FlexibleNullability] kotlin.CharSequence?): @[FlexibleNullability] java.lang.Appendable? declared in java.lang.Appendable' type=@[FlexibleNullability] java.lang.Appendable? origin=null
            $this: GET_VAR 'buffer: A of <root>.joinTo declared in <root>.joinTo' type=A of <root>.joinTo origin=null
            p0: GET_VAR 'prefix: kotlin.CharSequence declared in <root>.joinTo' type=kotlin.CharSequence origin=null
        VAR name:count type:kotlin.Int [var]
          CONST Int type=kotlin.Int value=0
        BLOCK type=kotlin.Unit origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:tmp0_iterator type:kotlin.collections.Iterator<T of <root>.joinTo> [val]
            CALL 'public abstract fun iterator (): kotlin.collections.Iterator<T of kotlin.collections.Iterable> [operator] declared in kotlin.collections.Iterable' type=kotlin.collections.Iterator<T of <root>.joinTo> origin=FOR_LOOP_ITERATOR
              $this: GET_VAR '<this>: kotlin.collections.Iterable<T of <root>.joinTo> declared in <root>.joinTo' type=kotlin.collections.Iterable<T of <root>.joinTo> origin=null
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'public abstract fun hasNext (): kotlin.Boolean [operator] declared in kotlin.collections.Iterator' type=kotlin.Boolean origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val tmp0_iterator: kotlin.collections.Iterator<T of <root>.joinTo> [val] declared in <root>.joinTo' type=kotlin.collections.Iterator<T of <root>.joinTo> origin=null
            body: BLOCK type=kotlin.Unit origin=FOR_LOOP_INNER_WHILE
              VAR FOR_LOOP_VARIABLE name:element type:T of <root>.joinTo [val]
                CALL 'public abstract fun next (): T of kotlin.collections.Iterator [operator] declared in kotlin.collections.Iterator' type=T of <root>.joinTo origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val tmp0_iterator: kotlin.collections.Iterator<T of <root>.joinTo> [val] declared in <root>.joinTo' type=kotlin.collections.Iterator<T of <root>.joinTo> origin=null
              BLOCK type=kotlin.Unit origin=null
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun greater (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=GT
                      arg0: BLOCK type=kotlin.Int origin=PREFIX_INCR
                        SET_VAR 'var count: kotlin.Int [var] declared in <root>.joinTo' type=kotlin.Unit origin=PREFIX_INCR
                          CALL 'public final fun inc (): kotlin.Int [operator] declared in kotlin.Int' type=kotlin.Int origin=PREFIX_INCR
                            $this: GET_VAR 'var count: kotlin.Int [var] declared in <root>.joinTo' type=kotlin.Int origin=PREFIX_INCR
                        GET_VAR 'var count: kotlin.Int [var] declared in <root>.joinTo' type=kotlin.Int origin=PREFIX_INCR
                      arg1: CONST Int type=kotlin.Int value=1
                    then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                      CALL 'public abstract fun append (p0: @[FlexibleNullability] kotlin.CharSequence?): @[FlexibleNullability] java.lang.Appendable? declared in java.lang.Appendable' type=@[FlexibleNullability] java.lang.Appendable? origin=null
                        $this: GET_VAR 'buffer: A of <root>.joinTo declared in <root>.joinTo' type=A of <root>.joinTo origin=null
                        p0: GET_VAR 'separator: kotlin.CharSequence declared in <root>.joinTo' type=kotlin.CharSequence origin=null
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: WHEN type=kotlin.Boolean origin=OROR
                      BRANCH
                        if: CALL 'public final fun less (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=LT
                          arg0: GET_VAR 'limit: kotlin.Int declared in <root>.joinTo' type=kotlin.Int origin=null
                          arg1: CONST Int type=kotlin.Int value=0
                        then: CONST Boolean type=kotlin.Boolean value=true
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: CALL 'public final fun lessOrEqual (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=LTEQ
                          arg0: GET_VAR 'var count: kotlin.Int [var] declared in <root>.joinTo' type=kotlin.Int origin=null
                          arg1: GET_VAR 'limit: kotlin.Int declared in <root>.joinTo' type=kotlin.Int origin=null
                    then: BLOCK type=kotlin.Unit origin=null
                      CALL 'public final fun appendElement <T> (element: T of <root>.appendElement, transform: kotlin.Function1<T of <root>.appendElement, kotlin.CharSequence>): kotlin.Unit [inline] declared in <root>' type=kotlin.Unit origin=null
                        <T>: T of <root>.joinTo
                        $receiver: GET_VAR 'buffer: A of <root>.joinTo declared in <root>.joinTo' type=A of <root>.joinTo origin=null
                        element: GET_VAR 'val element: T of <root>.joinTo [val] declared in <root>.joinTo' type=T of <root>.joinTo origin=null
                        transform: FUN_EXPR type=kotlin.Function1<T of <root>.joinTo, kotlin.CharSequence> origin=LAMBDA
                          FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:T of <root>.joinTo) returnType:kotlin.CharSequence
                            VALUE_PARAMETER name:it index:0 type:T of <root>.joinTo
                            BLOCK_BODY
                              RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: T of <root>.joinTo): kotlin.CharSequence declared in <root>.joinTo'
                                CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.CharSequence origin=INVOKE
                                  $this: GET_VAR 'transform: kotlin.Function1<T of <root>.joinTo, kotlin.CharSequence> [crossinline] declared in <root>.joinTo' type=kotlin.Function1<T of <root>.joinTo, kotlin.CharSequence> origin=VARIABLE_AS_FUNCTION
                                  p1: GET_VAR 'it: T of <root>.joinTo declared in <root>.joinTo.<anonymous>' type=T of <root>.joinTo origin=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: BREAK label=null loop.label=null
        WHEN type=kotlin.Unit origin=IF
          BRANCH
            if: WHEN type=kotlin.Boolean origin=ANDAND
              BRANCH
                if: CALL 'public final fun greaterOrEqual (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=GTEQ
                  arg0: GET_VAR 'limit: kotlin.Int declared in <root>.joinTo' type=kotlin.Int origin=null
                  arg1: CONST Int type=kotlin.Int value=0
                then: CALL 'public final fun greater (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=GT
                  arg0: GET_VAR 'var count: kotlin.Int [var] declared in <root>.joinTo' type=kotlin.Int origin=null
                  arg1: GET_VAR 'limit: kotlin.Int declared in <root>.joinTo' type=kotlin.Int origin=null
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CONST Boolean type=kotlin.Boolean value=false
            then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
              CALL 'public abstract fun append (p0: @[FlexibleNullability] kotlin.CharSequence?): @[FlexibleNullability] java.lang.Appendable? declared in java.lang.Appendable' type=@[FlexibleNullability] java.lang.Appendable? origin=null
                $this: GET_VAR 'buffer: A of <root>.joinTo declared in <root>.joinTo' type=A of <root>.joinTo origin=null
                p0: GET_VAR 'truncated: kotlin.CharSequence declared in <root>.joinTo' type=kotlin.CharSequence origin=null
        TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
          CALL 'public abstract fun append (p0: @[FlexibleNullability] kotlin.CharSequence?): @[FlexibleNullability] java.lang.Appendable? declared in java.lang.Appendable' type=@[FlexibleNullability] java.lang.Appendable? origin=null
            $this: GET_VAR 'buffer: A of <root>.joinTo declared in <root>.joinTo' type=A of <root>.joinTo origin=null
            p0: GET_VAR 'postfix: kotlin.CharSequence declared in <root>.joinTo' type=kotlin.CharSequence origin=null
        RETURN type=kotlin.Nothing from='public final fun joinTo <T, A> (buffer: A of <root>.joinTo, separator: kotlin.CharSequence, prefix: kotlin.CharSequence, postfix: kotlin.CharSequence, limit: kotlin.Int, truncated: kotlin.CharSequence, transform: kotlin.Function1<T of <root>.joinTo, kotlin.CharSequence>): A of <root>.joinTo [inline] declared in <root>'
          GET_VAR 'buffer: A of <root>.joinTo declared in <root>.joinTo' type=A of <root>.joinTo origin=null
    FUN name:appendElement visibility:public modality:FINAL <T> ($receiver:java.lang.Appendable, element:T of <root>.appendElement, transform:kotlin.Function1<T of <root>.appendElement, kotlin.CharSequence>) returnType:kotlin.Unit [inline]
      annotations:
        PartialEvaluation
      TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?]
      $receiver: VALUE_PARAMETER name:<this> type:java.lang.Appendable
      VALUE_PARAMETER name:element index:0 type:T of <root>.appendElement
      VALUE_PARAMETER name:transform index:1 type:kotlin.Function1<T of <root>.appendElement, kotlin.CharSequence>
      BLOCK_BODY
        WHEN type=kotlin.Unit origin=WHEN
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=INSTANCEOF typeOperand=kotlin.CharSequence?
              GET_VAR 'element: T of <root>.appendElement declared in <root>.appendElement' type=T of <root>.appendElement origin=null
            then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
              CALL 'public abstract fun append (p0: @[FlexibleNullability] kotlin.CharSequence?): @[FlexibleNullability] java.lang.Appendable? declared in java.lang.Appendable' type=@[FlexibleNullability] java.lang.Appendable? origin=null
                $this: GET_VAR '<this>: java.lang.Appendable declared in <root>.appendElement' type=java.lang.Appendable origin=null
                p0: TYPE_OP type=@[FlexibleNullability] kotlin.CharSequence? origin=IMPLICIT_CAST typeOperand=@[FlexibleNullability] kotlin.CharSequence?
                  GET_VAR 'element: T of <root>.appendElement declared in <root>.appendElement' type=T of <root>.appendElement origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=INSTANCEOF typeOperand=kotlin.Char
              GET_VAR 'element: T of <root>.appendElement declared in <root>.appendElement' type=T of <root>.appendElement origin=null
            then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
              CALL 'public abstract fun append (p0: kotlin.Char): @[FlexibleNullability] java.lang.Appendable? declared in java.lang.Appendable' type=@[FlexibleNullability] java.lang.Appendable? origin=null
                $this: GET_VAR '<this>: java.lang.Appendable declared in <root>.appendElement' type=java.lang.Appendable origin=null
                p0: TYPE_OP type=kotlin.Char origin=IMPLICIT_CAST typeOperand=kotlin.Char
                  GET_VAR 'element: T of <root>.appendElement declared in <root>.appendElement' type=T of <root>.appendElement origin=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
              CALL 'public abstract fun append (p0: @[FlexibleNullability] kotlin.CharSequence?): @[FlexibleNullability] java.lang.Appendable? declared in java.lang.Appendable' type=@[FlexibleNullability] java.lang.Appendable? origin=null
                $this: GET_VAR '<this>: java.lang.Appendable declared in <root>.appendElement' type=java.lang.Appendable origin=null
                p0: CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.CharSequence origin=INVOKE
                  $this: GET_VAR 'transform: kotlin.Function1<T of <root>.appendElement, kotlin.CharSequence> declared in <root>.appendElement' type=kotlin.Function1<T of <root>.appendElement, kotlin.CharSequence> origin=VARIABLE_AS_FUNCTION
                  p1: GET_VAR 'element: T of <root>.appendElement declared in <root>.appendElement' type=T of <root>.appendElement origin=null
  FILE fqName:kotlin fileName:/CompileTimeCalculation.kt
    CLASS ANNOTATION_CLASS name:CompileTimeCalculation modality:FINAL visibility:public superTypes:[kotlin.Annotation]
      annotations:
        Target(allowedTargets = [GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:FUNCTION' type=kotlin.annotation.AnnotationTarget, GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:PROPERTY' type=kotlin.annotation.AnnotationTarget])
        Retention(value = GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:BINARY' type=kotlin.annotation.AnnotationRetention)
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.CompileTimeCalculation
      CONSTRUCTOR visibility:public <> () returnType:kotlin.CompileTimeCalculation [primary]
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.Annotation
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.Annotation
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.Annotation
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FILE fqName:kotlin fileName:/PartialEvaluation.kt
    CLASS ANNOTATION_CLASS name:PartialEvaluation modality:FINAL visibility:public superTypes:[kotlin.Annotation]
      annotations:
        Target(allowedTargets = [GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:FUNCTION' type=kotlin.annotation.AnnotationTarget])
        Retention(value = GET_ENUM 'ENUM_ENTRY IR_EXTERNAL_DECLARATION_STUB name:BINARY' type=kotlin.annotation.AnnotationRetention)
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.PartialEvaluation
      CONSTRUCTOR visibility:public <> () returnType:kotlin.PartialEvaluation [primary]
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.Annotation
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.Annotation
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.Annotation
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FILE fqName:kotlin.reflect fileName:/KClassesImpl.kt
    PROPERTY name:qualifiedOrSimpleName visibility:internal modality:FINAL [val]
      FUN name:<get-qualifiedOrSimpleName> visibility:internal modality:FINAL <> ($receiver:kotlin.reflect.KClass<*>) returnType:kotlin.String? [inline]
        correspondingProperty: PROPERTY name:qualifiedOrSimpleName visibility:internal modality:FINAL [val]
        $receiver: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<*>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='internal final fun <get-qualifiedOrSimpleName> (): kotlin.String? [inline] declared in kotlin.reflect'
            CALL 'public abstract fun <get-qualifiedName> (): kotlin.String? declared in kotlin.reflect.KClass' type=kotlin.String? origin=GET_PROPERTY
              $this: GET_VAR '<this>: kotlin.reflect.KClass<*> declared in kotlin.reflect.<get-qualifiedOrSimpleName>' type=kotlin.reflect.KClass<*> origin=null
  FILE fqName:kotlin.reflect fileName:/KType.kt
    CLASS INTERFACE name:KType modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KAnnotatedElement]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KType
      PROPERTY name:classifier visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-classifier> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KType) returnType:kotlin.reflect.KClassifier?
          correspondingProperty: PROPERTY name:classifier visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KType
      PROPERTY name:arguments visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-arguments> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KType) returnType:kotlin.collections.List<kotlin.reflect.KTypeProjection>
          correspondingProperty: PROPERTY name:arguments visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KType
      PROPERTY name:isMarkedNullable visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isMarkedNullable> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KType) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isMarkedNullable visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KType
      PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract annotations: kotlin.collections.List<kotlin.Annotation> [val]
        FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> declared in kotlin.reflect.KAnnotatedElement
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KAnnotatedElement
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KAnnotatedElement
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KAnnotatedElement
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FILE fqName:kotlin.reflect fileName:/KParameter.kt
    CLASS INTERFACE name:KParameter modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KAnnotatedElement]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KParameter
      PROPERTY name:index visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-index> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KParameter) returnType:kotlin.Int
          correspondingProperty: PROPERTY name:index visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KParameter
      PROPERTY name:name visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KParameter) returnType:kotlin.String?
          correspondingProperty: PROPERTY name:name visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KParameter
      PROPERTY name:type visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-type> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KParameter) returnType:kotlin.reflect.KType
          correspondingProperty: PROPERTY name:type visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KParameter
      PROPERTY name:kind visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-kind> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KParameter) returnType:kotlin.reflect.KParameter.Kind
          correspondingProperty: PROPERTY name:kind visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KParameter
      CLASS ENUM_CLASS name:Kind modality:FINAL visibility:public superTypes:[kotlin.Enum<kotlin.reflect.KParameter.Kind>]
        $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KParameter.Kind
        CONSTRUCTOR visibility:private <> () returnType:kotlin.reflect.KParameter.Kind [primary]
          BLOCK_BODY
            ENUM_CONSTRUCTOR_CALL 'public constructor <init> (name: kotlin.String, ordinal: kotlin.Int) [primary] declared in kotlin.Enum'
              <E>: kotlin.reflect.KParameter.Kind
            INSTANCE_INITIALIZER_CALL classDescriptor='CLASS ENUM_CLASS name:Kind modality:FINAL visibility:public superTypes:[kotlin.Enum<kotlin.reflect.KParameter.Kind>]'
        ENUM_ENTRY name:INSTANCE
          init: EXPRESSION_BODY
            ENUM_CONSTRUCTOR_CALL 'private constructor <init> () [primary] declared in kotlin.reflect.KParameter.Kind'
        ENUM_ENTRY name:EXTENSION_RECEIVER
          init: EXPRESSION_BODY
            ENUM_CONSTRUCTOR_CALL 'private constructor <init> () [primary] declared in kotlin.reflect.KParameter.Kind'
        ENUM_ENTRY name:VALUE
          init: EXPRESSION_BODY
            ENUM_CONSTRUCTOR_CALL 'private constructor <init> () [primary] declared in kotlin.reflect.KParameter.Kind'
        FUN FAKE_OVERRIDE name:clone visibility:protected modality:FINAL <> ($this:kotlin.Enum<kotlin.reflect.KParameter.Kind>) returnType:kotlin.Any [fake_override]
          overridden:
            protected final fun clone (): kotlin.Any declared in kotlin.Enum
          $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<kotlin.reflect.KParameter.Kind>
        FUN FAKE_OVERRIDE name:compareTo visibility:public modality:FINAL <> ($this:kotlin.Enum<kotlin.reflect.KParameter.Kind>, other:kotlin.reflect.KParameter.Kind) returnType:kotlin.Int [fake_override,operator]
          overridden:
            public final fun compareTo (other: E of kotlin.Enum): kotlin.Int [operator] declared in kotlin.Enum
          $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<kotlin.reflect.KParameter.Kind>
          VALUE_PARAMETER name:other index:0 type:kotlin.reflect.KParameter.Kind
        FUN FAKE_OVERRIDE name:equals visibility:public modality:FINAL <> ($this:kotlin.Enum<kotlin.reflect.KParameter.Kind>, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
          overridden:
            public final fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Enum
          $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<kotlin.reflect.KParameter.Kind>
          VALUE_PARAMETER name:other index:0 type:kotlin.Any?
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:FINAL <> ($this:kotlin.Enum<kotlin.reflect.KParameter.Kind>) returnType:kotlin.Int [fake_override]
          overridden:
            public final fun hashCode (): kotlin.Int declared in kotlin.Enum
          $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<kotlin.reflect.KParameter.Kind>
        PROPERTY FAKE_OVERRIDE name:name visibility:public modality:FINAL [fake_override,val]
          overridden:
            public final name: kotlin.String [val]
          FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:FINAL <> ($this:kotlin.Enum<kotlin.reflect.KParameter.Kind>) returnType:kotlin.String [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:FINAL [fake_override,val]
            overridden:
              public final fun <get-name> (): kotlin.String declared in kotlin.Enum
            $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<kotlin.reflect.KParameter.Kind>
        PROPERTY FAKE_OVERRIDE name:ordinal visibility:public modality:FINAL [fake_override,val]
          overridden:
            public final ordinal: kotlin.Int [val]
          FUN FAKE_OVERRIDE name:<get-ordinal> visibility:public modality:FINAL <> ($this:kotlin.Enum<kotlin.reflect.KParameter.Kind>) returnType:kotlin.Int [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:ordinal visibility:public modality:FINAL [fake_override,val]
            overridden:
              public final fun <get-ordinal> (): kotlin.Int declared in kotlin.Enum
            $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<kotlin.reflect.KParameter.Kind>
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Enum<kotlin.reflect.KParameter.Kind>) returnType:kotlin.String [fake_override]
          overridden:
            public open fun toString (): kotlin.String declared in kotlin.Enum
          $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<kotlin.reflect.KParameter.Kind>
        FUN ENUM_CLASS_SPECIAL_MEMBER name:values visibility:public modality:FINAL <> () returnType:kotlin.Array<kotlin.reflect.KParameter.Kind>
          SYNTHETIC_BODY kind=ENUM_VALUES
        FUN ENUM_CLASS_SPECIAL_MEMBER name:valueOf visibility:public modality:FINAL <> (value:kotlin.String) returnType:kotlin.reflect.KParameter.Kind
          VALUE_PARAMETER name:value index:0 type:kotlin.String
          SYNTHETIC_BODY kind=ENUM_VALUEOF
      PROPERTY name:isOptional visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isOptional> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KParameter) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isOptional visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KParameter
      PROPERTY name:isVararg visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isVararg> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KParameter) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isVararg visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KParameter
      PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract annotations: kotlin.collections.List<kotlin.Annotation> [val]
        FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> declared in kotlin.reflect.KAnnotatedElement
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KAnnotatedElement
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KAnnotatedElement
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KAnnotatedElement
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FILE fqName:kotlin.reflect fileName:/KAnnotatedElement.kt
    CLASS INTERFACE name:KAnnotatedElement modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KAnnotatedElement
      PROPERTY name:annotations visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation>
          correspondingProperty: PROPERTY name:annotations visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FILE fqName:kotlin.reflect fileName:/KFunction.kt
    CLASS INTERFACE name:KFunction modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>; kotlin.Function<R of kotlin.reflect.KFunction>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KFunction<R of kotlin.reflect.KFunction>
      TYPE_PARAMETER name:R index:0 variance:out superTypes:[kotlin.Any?]
      PROPERTY name:isInline visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isInline> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<R of kotlin.reflect.KFunction>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isInline visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<R of kotlin.reflect.KFunction>
      PROPERTY name:isExternal visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isExternal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<R of kotlin.reflect.KFunction>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isExternal visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<R of kotlin.reflect.KFunction>
      PROPERTY name:isOperator visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isOperator> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<R of kotlin.reflect.KFunction>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isOperator visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<R of kotlin.reflect.KFunction>
      PROPERTY name:isInfix visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isInfix> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<R of kotlin.reflect.KFunction>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isInfix visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<R of kotlin.reflect.KFunction>
      PROPERTY name:isSuspend visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isSuspend: kotlin.Boolean [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<R of kotlin.reflect.KFunction>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isSuspend visibility:public modality:ABSTRACT [val]
          overridden:
            public abstract fun <get-isSuspend> (): kotlin.Boolean declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<R of kotlin.reflect.KFunction>
      PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isAbstract: kotlin.Boolean [val]
        FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isAbstract> (): kotlin.Boolean declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>
      PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isFinal: kotlin.Boolean [val]
        FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isFinal> (): kotlin.Boolean declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>
      PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isOpen: kotlin.Boolean [val]
        FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isOpen> (): kotlin.Boolean declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>
      PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [val]
        FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>
      PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract visibility: kotlin.reflect.KVisibility? [val]
        FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>) returnType:kotlin.reflect.KVisibility? [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>
      FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>, args:kotlin.Array<out kotlin.Any?>) returnType:R of kotlin.reflect.KFunction [fake_override]
        overridden:
          public abstract fun call (vararg args: kotlin.Any?): R of kotlin.reflect.KCallable declared in kotlin.reflect.KCallable
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>
        VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
      FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:R of kotlin.reflect.KFunction [fake_override]
        overridden:
          public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): R of kotlin.reflect.KCallable declared in kotlin.reflect.KCallable
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>
        VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
      PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
      PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [val]
        FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>
      PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract returnType: kotlin.reflect.KType [val]
        FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>) returnType:kotlin.reflect.KType [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-returnType> (): kotlin.reflect.KType declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>
      PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract name: kotlin.String [val]
        FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>) returnType:kotlin.String [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-name> (): kotlin.String declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KFunction>
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KCallable
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.Function
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KCallable
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.Function
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KCallable
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.Function
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FILE fqName:kotlin.reflect fileName:/KVisibility.kt
    CLASS ENUM_CLASS name:KVisibility modality:FINAL visibility:public superTypes:[kotlin.Enum<kotlin.reflect.KVisibility>]
      annotations:
        SinceKotlin(version = '1.1')
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KVisibility
      CONSTRUCTOR visibility:private <> () returnType:kotlin.reflect.KVisibility [primary]
        BLOCK_BODY
          ENUM_CONSTRUCTOR_CALL 'public constructor <init> (name: kotlin.String, ordinal: kotlin.Int) [primary] declared in kotlin.Enum'
            <E>: kotlin.reflect.KVisibility
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS ENUM_CLASS name:KVisibility modality:FINAL visibility:public superTypes:[kotlin.Enum<kotlin.reflect.KVisibility>]'
      ENUM_ENTRY name:PUBLIC
        init: EXPRESSION_BODY
          ENUM_CONSTRUCTOR_CALL 'private constructor <init> () [primary] declared in kotlin.reflect.KVisibility'
      ENUM_ENTRY name:PROTECTED
        init: EXPRESSION_BODY
          ENUM_CONSTRUCTOR_CALL 'private constructor <init> () [primary] declared in kotlin.reflect.KVisibility'
      ENUM_ENTRY name:INTERNAL
        init: EXPRESSION_BODY
          ENUM_CONSTRUCTOR_CALL 'private constructor <init> () [primary] declared in kotlin.reflect.KVisibility'
      ENUM_ENTRY name:PRIVATE
        init: EXPRESSION_BODY
          ENUM_CONSTRUCTOR_CALL 'private constructor <init> () [primary] declared in kotlin.reflect.KVisibility'
      FUN FAKE_OVERRIDE name:clone visibility:protected modality:FINAL <> ($this:kotlin.Enum<kotlin.reflect.KVisibility>) returnType:kotlin.Any [fake_override]
        overridden:
          protected final fun clone (): kotlin.Any declared in kotlin.Enum
        $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<kotlin.reflect.KVisibility>
      FUN FAKE_OVERRIDE name:compareTo visibility:public modality:FINAL <> ($this:kotlin.Enum<kotlin.reflect.KVisibility>, other:kotlin.reflect.KVisibility) returnType:kotlin.Int [fake_override,operator]
        overridden:
          public final fun compareTo (other: E of kotlin.Enum): kotlin.Int [operator] declared in kotlin.Enum
        $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<kotlin.reflect.KVisibility>
        VALUE_PARAMETER name:other index:0 type:kotlin.reflect.KVisibility
      FUN FAKE_OVERRIDE name:equals visibility:public modality:FINAL <> ($this:kotlin.Enum<kotlin.reflect.KVisibility>, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public final fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Enum
        $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<kotlin.reflect.KVisibility>
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:FINAL <> ($this:kotlin.Enum<kotlin.reflect.KVisibility>) returnType:kotlin.Int [fake_override]
        overridden:
          public final fun hashCode (): kotlin.Int declared in kotlin.Enum
        $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<kotlin.reflect.KVisibility>
      PROPERTY FAKE_OVERRIDE name:name visibility:public modality:FINAL [fake_override,val]
        overridden:
          public final name: kotlin.String [val]
        FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:FINAL <> ($this:kotlin.Enum<kotlin.reflect.KVisibility>) returnType:kotlin.String [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:FINAL [fake_override,val]
          overridden:
            public final fun <get-name> (): kotlin.String declared in kotlin.Enum
          $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<kotlin.reflect.KVisibility>
      PROPERTY FAKE_OVERRIDE name:ordinal visibility:public modality:FINAL [fake_override,val]
        overridden:
          public final ordinal: kotlin.Int [val]
        FUN FAKE_OVERRIDE name:<get-ordinal> visibility:public modality:FINAL <> ($this:kotlin.Enum<kotlin.reflect.KVisibility>) returnType:kotlin.Int [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:ordinal visibility:public modality:FINAL [fake_override,val]
          overridden:
            public final fun <get-ordinal> (): kotlin.Int declared in kotlin.Enum
          $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<kotlin.reflect.KVisibility>
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Enum<kotlin.reflect.KVisibility>) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Enum
        $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<kotlin.reflect.KVisibility>
      FUN ENUM_CLASS_SPECIAL_MEMBER name:values visibility:public modality:FINAL <> () returnType:kotlin.Array<kotlin.reflect.KVisibility>
        SYNTHETIC_BODY kind=ENUM_VALUES
      FUN ENUM_CLASS_SPECIAL_MEMBER name:valueOf visibility:public modality:FINAL <> (value:kotlin.String) returnType:kotlin.reflect.KVisibility
        VALUE_PARAMETER name:value index:0 type:kotlin.String
        SYNTHETIC_BODY kind=ENUM_VALUEOF
  FILE fqName:kotlin.reflect fileName:/KProperty.kt
    annotations:
      Suppress(names = ['IMPLEMENTING_FUNCTION_INTERFACE'])
    CLASS INTERFACE name:KProperty modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty>
      TYPE_PARAMETER name:V index:0 variance:out superTypes:[kotlin.Any?]
      PROPERTY name:isLateinit visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isLateinit> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isLateinit visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty>
      PROPERTY name:isConst visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isConst> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isConst visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty>
      PROPERTY name:getter visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-getter> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty>) returnType:kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KProperty>
          correspondingProperty: PROPERTY name:getter visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty>
      CLASS INTERFACE name:Accessor modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
        $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KProperty.Accessor>
        TYPE_PARAMETER name:V index:0 variance:out superTypes:[kotlin.Any?]
        PROPERTY name:property visibility:public modality:ABSTRACT [val]
          FUN DEFAULT_PROPERTY_ACCESSOR name:<get-property> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KProperty.Accessor>) returnType:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty.Accessor>
            correspondingProperty: PROPERTY name:property visibility:public modality:ABSTRACT [val]
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KProperty.Accessor>
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
          overridden:
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
          VALUE_PARAMETER name:other index:0 type:kotlin.Any?
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
          overridden:
            public open fun hashCode (): kotlin.Int declared in kotlin.Any
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
          overridden:
            public open fun toString (): kotlin.String declared in kotlin.Any
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      CLASS INTERFACE name:Getter modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KProperty.Getter>; kotlin.reflect.KFunction<V of kotlin.reflect.KProperty.Getter>]
        $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KProperty.Getter>
        TYPE_PARAMETER name:V index:0 variance:out superTypes:[kotlin.Any?]
        PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isAbstract: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>
        PROPERTY FAKE_OVERRIDE name:isExternal visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isExternal: kotlin.Boolean [val]
          FUN FAKE_OVERRIDE name:<get-isExternal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isExternal visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isExternal> (): kotlin.Boolean declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty.Getter>
        PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isFinal: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>
        PROPERTY FAKE_OVERRIDE name:isInfix visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isInfix: kotlin.Boolean [val]
          FUN FAKE_OVERRIDE name:<get-isInfix> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isInfix visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isInfix> (): kotlin.Boolean declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty.Getter>
        PROPERTY FAKE_OVERRIDE name:isInline visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isInline: kotlin.Boolean [val]
          FUN FAKE_OVERRIDE name:<get-isInline> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isInline visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isInline> (): kotlin.Boolean declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty.Getter>
        PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isOpen: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>
        PROPERTY FAKE_OVERRIDE name:isOperator visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isOperator: kotlin.Boolean [val]
          FUN FAKE_OVERRIDE name:<get-isOperator> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOperator visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isOperator> (): kotlin.Boolean declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty.Getter>
        PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isSuspend: kotlin.Boolean [val]
          FUN FAKE_OVERRIDE name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isSuspend> (): kotlin.Boolean declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty.Getter>
        PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>
        PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>) returnType:kotlin.reflect.KVisibility? [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>
        FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>, args:kotlin.Array<out kotlin.Any?>) returnType:V of kotlin.reflect.KProperty.Getter [fake_override]
          overridden:
            public abstract fun call (vararg args: kotlin.Any?): R of kotlin.reflect.KFunction [fake_override] declared in kotlin.reflect.KFunction
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>
          VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
        FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:V of kotlin.reflect.KProperty.Getter [fake_override]
          overridden:
            public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): R of kotlin.reflect.KFunction [fake_override] declared in kotlin.reflect.KFunction
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>
          VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
        PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
        PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>
        PROPERTY FAKE_OVERRIDE name:property visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract property: kotlin.reflect.KProperty<V of kotlin.reflect.KProperty.Accessor> [val]
          FUN FAKE_OVERRIDE name:<get-property> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KProperty.Getter>) returnType:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty.Getter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:property visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-property> (): kotlin.reflect.KProperty<V of kotlin.reflect.KProperty.Accessor> declared in kotlin.reflect.KProperty.Accessor
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KProperty.Getter>
        PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract returnType: kotlin.reflect.KType [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>) returnType:kotlin.reflect.KType [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>
        PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract name: kotlin.String [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>) returnType:kotlin.String [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty.Getter>
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
          overridden:
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KProperty.Accessor
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KFunction
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
          VALUE_PARAMETER name:other index:0 type:kotlin.Any?
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
          overridden:
            public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KProperty.Accessor
            public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KFunction
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
          overridden:
            public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty.Accessor
            public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KFunction
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isAbstract: kotlin.Boolean [val]
        FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isAbstract> (): kotlin.Boolean declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>
      PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isFinal: kotlin.Boolean [val]
        FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isFinal> (): kotlin.Boolean declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>
      PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isOpen: kotlin.Boolean [val]
        FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isOpen> (): kotlin.Boolean declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>
      PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.3')
        overridden:
          public abstract isSuspend: kotlin.Boolean [val]
        FUN FAKE_OVERRIDE name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isSuspend> (): kotlin.Boolean declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>
      PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [val]
        FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>
      PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract visibility: kotlin.reflect.KVisibility? [val]
        FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>) returnType:kotlin.reflect.KVisibility? [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>
      FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>, args:kotlin.Array<out kotlin.Any?>) returnType:V of kotlin.reflect.KProperty [fake_override]
        overridden:
          public abstract fun call (vararg args: kotlin.Any?): R of kotlin.reflect.KCallable declared in kotlin.reflect.KCallable
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>
        VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
      FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:V of kotlin.reflect.KProperty [fake_override]
        overridden:
          public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): R of kotlin.reflect.KCallable declared in kotlin.reflect.KCallable
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>
        VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
      PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
      PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [val]
        FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>
      PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract returnType: kotlin.reflect.KType [val]
        FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>) returnType:kotlin.reflect.KType [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-returnType> (): kotlin.reflect.KType declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>
      PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract name: kotlin.String [val]
        FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>) returnType:kotlin.String [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-name> (): kotlin.String declared in kotlin.reflect.KCallable
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty>
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KCallable
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KCallable
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KCallable
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    CLASS INTERFACE name:KMutableProperty modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KMutableProperty<V of kotlin.reflect.KMutableProperty>
      TYPE_PARAMETER name:V index:0 variance: superTypes:[kotlin.Any?]
      PROPERTY name:setter visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-setter> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KMutableProperty<V of kotlin.reflect.KMutableProperty>) returnType:kotlin.reflect.KMutableProperty.Setter<V of kotlin.reflect.KMutableProperty>
          correspondingProperty: PROPERTY name:setter visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KMutableProperty<V of kotlin.reflect.KMutableProperty>
      CLASS INTERFACE name:Setter modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KMutableProperty.Setter>; kotlin.reflect.KFunction<kotlin.Unit>]
        $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KMutableProperty.Setter<V of kotlin.reflect.KMutableProperty.Setter>
        TYPE_PARAMETER name:V index:0 variance: superTypes:[kotlin.Any?]
        PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isAbstract: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isExternal visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isExternal: kotlin.Boolean [val]
          FUN FAKE_OVERRIDE name:<get-isExternal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isExternal visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isExternal> (): kotlin.Boolean declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isFinal: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isInfix visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isInfix: kotlin.Boolean [val]
          FUN FAKE_OVERRIDE name:<get-isInfix> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isInfix visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isInfix> (): kotlin.Boolean declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isInline visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isInline: kotlin.Boolean [val]
          FUN FAKE_OVERRIDE name:<get-isInline> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isInline visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isInline> (): kotlin.Boolean declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isOpen: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isOperator visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isOperator: kotlin.Boolean [val]
          FUN FAKE_OVERRIDE name:<get-isOperator> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOperator visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isOperator> (): kotlin.Boolean declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isSuspend: kotlin.Boolean [val]
          FUN FAKE_OVERRIDE name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isSuspend> (): kotlin.Boolean declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.reflect.KVisibility? [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>, args:kotlin.Array<out kotlin.Any?>) returnType:kotlin.Unit [fake_override]
          overridden:
            public abstract fun call (vararg args: kotlin.Any?): R of kotlin.reflect.KFunction [fake_override] declared in kotlin.reflect.KFunction
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
          VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
        FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:kotlin.Unit [fake_override]
          overridden:
            public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): R of kotlin.reflect.KFunction [fake_override] declared in kotlin.reflect.KFunction
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
          VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
        PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
        PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:property visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract property: kotlin.reflect.KProperty<V of kotlin.reflect.KProperty.Accessor> [val]
          FUN FAKE_OVERRIDE name:<get-property> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KMutableProperty.Setter>) returnType:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty.Setter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:property visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-property> (): kotlin.reflect.KProperty<V of kotlin.reflect.KProperty.Accessor> declared in kotlin.reflect.KProperty.Accessor
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KMutableProperty.Setter>
        PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract returnType: kotlin.reflect.KType [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.reflect.KType [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract name: kotlin.String [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.String [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KFunction
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
          overridden:
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KProperty.Accessor
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KFunction
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
          VALUE_PARAMETER name:other index:0 type:kotlin.Any?
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
          overridden:
            public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KProperty.Accessor
            public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KFunction
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
          overridden:
            public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty.Accessor
            public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KFunction
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isAbstract: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>
      PROPERTY FAKE_OVERRIDE name:isConst visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isConst: kotlin.Boolean [val]
        FUN FAKE_OVERRIDE name:<get-isConst> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isConst visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isConst> (): kotlin.Boolean declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty>
      PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isFinal: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>
      PROPERTY FAKE_OVERRIDE name:isLateinit visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isLateinit: kotlin.Boolean [val]
        FUN FAKE_OVERRIDE name:<get-isLateinit> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isLateinit visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isLateinit> (): kotlin.Boolean declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty>
      PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isOpen: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>
      PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.3')
        overridden:
          public abstract isSuspend: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isSuspend> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>
      PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>
      PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>) returnType:kotlin.reflect.KVisibility? [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>
      FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>, args:kotlin.Array<out kotlin.Any?>) returnType:V of kotlin.reflect.KMutableProperty [fake_override]
        overridden:
          public abstract fun call (vararg args: kotlin.Any?): V of kotlin.reflect.KProperty [fake_override] declared in kotlin.reflect.KProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>
        VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
      FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:V of kotlin.reflect.KMutableProperty [fake_override]
        overridden:
          public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): V of kotlin.reflect.KProperty [fake_override] declared in kotlin.reflect.KProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>
        VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
      PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
      PROPERTY FAKE_OVERRIDE name:getter visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract getter: kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KProperty> [val]
        FUN FAKE_OVERRIDE name:<get-getter> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty>) returnType:kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KMutableProperty> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:getter visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-getter> (): kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KProperty> declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty>
      PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>
      PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract returnType: kotlin.reflect.KType [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>) returnType:kotlin.reflect.KType [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>
      PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract name: kotlin.String [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>) returnType:kotlin.String [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty>
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    CLASS INTERFACE name:KProperty0 modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KProperty<V of kotlin.reflect.KProperty0>; kotlin.Function0<V of kotlin.reflect.KProperty0>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KProperty0<V of kotlin.reflect.KProperty0>
      TYPE_PARAMETER name:V index:0 variance:out superTypes:[kotlin.Any?]
      FUN name:get visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty0<V of kotlin.reflect.KProperty0>) returnType:V of kotlin.reflect.KProperty0
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty0<V of kotlin.reflect.KProperty0>
      FUN name:getDelegate visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty0<V of kotlin.reflect.KProperty0>) returnType:kotlin.Any?
        annotations:
          SinceKotlin(version = '1.1')
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty0<V of kotlin.reflect.KProperty0>
      PROPERTY name:getter visibility:public modality:ABSTRACT [val]
        overridden:
          public abstract getter: kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KProperty> [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-getter> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty0<V of kotlin.reflect.KProperty0>) returnType:kotlin.reflect.KProperty0.Getter<V of kotlin.reflect.KProperty0>
          correspondingProperty: PROPERTY name:getter visibility:public modality:ABSTRACT [val]
          overridden:
            public abstract fun <get-getter> (): kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KProperty> declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty0<V of kotlin.reflect.KProperty0>
      CLASS INTERFACE name:Getter modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KProperty0.Getter>; kotlin.Function0<V of kotlin.reflect.KProperty0.Getter>]
        $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KProperty0.Getter<V of kotlin.reflect.KProperty0.Getter>
        TYPE_PARAMETER name:V index:0 variance:out superTypes:[kotlin.Any?]
        PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isAbstract: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>
        PROPERTY FAKE_OVERRIDE name:isExternal visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isExternal: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isExternal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty0.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isExternal visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isExternal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty0.Getter>
        PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isFinal: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>
        PROPERTY FAKE_OVERRIDE name:isInfix visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isInfix: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isInfix> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty0.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isInfix visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isInfix> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty0.Getter>
        PROPERTY FAKE_OVERRIDE name:isInline visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isInline: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isInline> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty0.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isInline visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isInline> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty0.Getter>
        PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isOpen: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>
        PROPERTY FAKE_OVERRIDE name:isOperator visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isOperator: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isOperator> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty0.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOperator visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isOperator> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty0.Getter>
        PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isSuspend: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty0.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isSuspend> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty0.Getter>
        PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>
        PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>) returnType:kotlin.reflect.KVisibility? [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>
        FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>, args:kotlin.Array<out kotlin.Any?>) returnType:V of kotlin.reflect.KProperty0.Getter [fake_override]
          overridden:
            public abstract fun call (vararg args: kotlin.Any?): V of kotlin.reflect.KProperty.Getter [fake_override] declared in kotlin.reflect.KProperty.Getter
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>
          VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
        FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:V of kotlin.reflect.KProperty0.Getter [fake_override]
          overridden:
            public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): V of kotlin.reflect.KProperty.Getter [fake_override] declared in kotlin.reflect.KProperty.Getter
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>
          VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
        FUN FAKE_OVERRIDE name:invoke visibility:public modality:ABSTRACT <> ($this:kotlin.Function0<V of kotlin.reflect.KProperty0.Getter>) returnType:V of kotlin.reflect.KProperty0.Getter [fake_override,operator]
          overridden:
            public abstract fun invoke (): R of kotlin.Function0 [operator] declared in kotlin.Function0
          $this: VALUE_PARAMETER name:<this> type:kotlin.Function0<V of kotlin.reflect.KProperty0.Getter>
        PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
        PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>
        PROPERTY FAKE_OVERRIDE name:property visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract property: kotlin.reflect.KProperty<V of kotlin.reflect.KProperty.Getter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-property> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KProperty0.Getter>) returnType:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty0.Getter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:property visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-property> (): kotlin.reflect.KProperty<V of kotlin.reflect.KProperty.Getter> [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KProperty0.Getter>
        PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract returnType: kotlin.reflect.KType [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>) returnType:kotlin.reflect.KType [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>
        PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract name: kotlin.String [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>) returnType:kotlin.String [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0.Getter>
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
          overridden:
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KProperty.Getter
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.Function0
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
          VALUE_PARAMETER name:other index:0 type:kotlin.Any?
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
          overridden:
            public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KProperty.Getter
            public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.Function0
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
          overridden:
            public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty.Getter
            public open fun toString (): kotlin.String [fake_override] declared in kotlin.Function0
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isAbstract: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>
      PROPERTY FAKE_OVERRIDE name:isConst visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isConst: kotlin.Boolean [val]
        FUN FAKE_OVERRIDE name:<get-isConst> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty0>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isConst visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isConst> (): kotlin.Boolean declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty0>
      PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isFinal: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>
      PROPERTY FAKE_OVERRIDE name:isLateinit visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isLateinit: kotlin.Boolean [val]
        FUN FAKE_OVERRIDE name:<get-isLateinit> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty0>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isLateinit visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isLateinit> (): kotlin.Boolean declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty0>
      PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isOpen: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>
      PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.3')
        overridden:
          public abstract isSuspend: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isSuspend> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>
      PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>
      PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>) returnType:kotlin.reflect.KVisibility? [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>
      FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>, args:kotlin.Array<out kotlin.Any?>) returnType:V of kotlin.reflect.KProperty0 [fake_override]
        overridden:
          public abstract fun call (vararg args: kotlin.Any?): V of kotlin.reflect.KProperty [fake_override] declared in kotlin.reflect.KProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>
        VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
      FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:V of kotlin.reflect.KProperty0 [fake_override]
        overridden:
          public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): V of kotlin.reflect.KProperty [fake_override] declared in kotlin.reflect.KProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>
        VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
      FUN FAKE_OVERRIDE name:invoke visibility:public modality:ABSTRACT <> ($this:kotlin.Function0<V of kotlin.reflect.KProperty0>) returnType:V of kotlin.reflect.KProperty0 [fake_override,operator]
        overridden:
          public abstract fun invoke (): R of kotlin.Function0 [operator] declared in kotlin.Function0
        $this: VALUE_PARAMETER name:<this> type:kotlin.Function0<V of kotlin.reflect.KProperty0>
      PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
      PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>
      PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract returnType: kotlin.reflect.KType [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>) returnType:kotlin.reflect.KType [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>
      PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract name: kotlin.String [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>) returnType:kotlin.String [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty0>
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KProperty
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.Function0
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KProperty
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.Function0
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.Function0
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    CLASS INTERFACE name:KMutableProperty0 modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KProperty0<V of kotlin.reflect.KMutableProperty0>; kotlin.reflect.KMutableProperty<V of kotlin.reflect.KMutableProperty0>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KMutableProperty0<V of kotlin.reflect.KMutableProperty0>
      TYPE_PARAMETER name:V index:0 variance: superTypes:[kotlin.Any?]
      FUN name:set visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KMutableProperty0<V of kotlin.reflect.KMutableProperty0>, value:V of kotlin.reflect.KMutableProperty0) returnType:kotlin.Unit
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KMutableProperty0<V of kotlin.reflect.KMutableProperty0>
        VALUE_PARAMETER name:value index:0 type:V of kotlin.reflect.KMutableProperty0
      PROPERTY name:setter visibility:public modality:ABSTRACT [val]
        overridden:
          public abstract setter: kotlin.reflect.KMutableProperty.Setter<V of kotlin.reflect.KMutableProperty> [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-setter> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KMutableProperty0<V of kotlin.reflect.KMutableProperty0>) returnType:kotlin.reflect.KMutableProperty0.Setter<V of kotlin.reflect.KMutableProperty0>
          correspondingProperty: PROPERTY name:setter visibility:public modality:ABSTRACT [val]
          overridden:
            public abstract fun <get-setter> (): kotlin.reflect.KMutableProperty.Setter<V of kotlin.reflect.KMutableProperty> declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KMutableProperty0<V of kotlin.reflect.KMutableProperty0>
      CLASS INTERFACE name:Setter modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KMutableProperty.Setter<V of kotlin.reflect.KMutableProperty0.Setter>; kotlin.Function1<V of kotlin.reflect.KMutableProperty0.Setter, kotlin.Unit>]
        $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KMutableProperty0.Setter<V of kotlin.reflect.KMutableProperty0.Setter>
        TYPE_PARAMETER name:V index:0 variance: superTypes:[kotlin.Any?]
        PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isAbstract: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isExternal visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isExternal: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isExternal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isExternal visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isExternal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isFinal: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isInfix visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isInfix: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isInfix> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isInfix visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isInfix> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isInline visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isInline: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isInline> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isInline visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isInline> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isOpen: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isOperator visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isOperator: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isOperator> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOperator visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isOperator> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isSuspend: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isSuspend> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.reflect.KVisibility? [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>, args:kotlin.Array<out kotlin.Any?>) returnType:kotlin.Unit [fake_override]
          overridden:
            public abstract fun call (vararg args: kotlin.Any?): kotlin.Unit [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
          VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
        FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:kotlin.Unit [fake_override]
          overridden:
            public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): kotlin.Unit [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
          VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
        FUN FAKE_OVERRIDE name:invoke visibility:public modality:ABSTRACT <> ($this:kotlin.Function1<V of kotlin.reflect.KMutableProperty0.Setter, kotlin.Unit>, p1:V of kotlin.reflect.KMutableProperty0.Setter) returnType:kotlin.Unit [fake_override,operator]
          overridden:
            public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1
          $this: VALUE_PARAMETER name:<this> type:kotlin.Function1<V of kotlin.reflect.KMutableProperty0.Setter, kotlin.Unit>
          VALUE_PARAMETER name:p1 index:0 type:V of kotlin.reflect.KMutableProperty0.Setter
        PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
        PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:property visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract property: kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty.Setter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-property> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KMutableProperty0.Setter>) returnType:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty0.Setter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:property visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-property> (): kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty.Setter> [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KMutableProperty0.Setter>
        PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract returnType: kotlin.reflect.KType [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.reflect.KType [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract name: kotlin.String [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.String [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
          overridden:
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KMutableProperty.Setter
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.Function1
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
          VALUE_PARAMETER name:other index:0 type:kotlin.Any?
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
          overridden:
            public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.Function1
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
          overridden:
            public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            public open fun toString (): kotlin.String [fake_override] declared in kotlin.Function1
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:getDelegate visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty0<V of kotlin.reflect.KMutableProperty0>) returnType:kotlin.Any? [fake_override]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract fun getDelegate (): kotlin.Any? declared in kotlin.reflect.KProperty0
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty0<V of kotlin.reflect.KMutableProperty0>
      PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isAbstract: kotlin.Boolean [fake_override,val]
          public abstract isAbstract: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty0
            public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>
      PROPERTY FAKE_OVERRIDE name:isConst visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isConst: kotlin.Boolean [fake_override,val]
          public abstract isConst: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isConst> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty0>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isConst visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isConst> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty0
            public abstract fun <get-isConst> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty0>
      PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isFinal: kotlin.Boolean [fake_override,val]
          public abstract isFinal: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty0
            public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>
      PROPERTY FAKE_OVERRIDE name:isLateinit visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isLateinit: kotlin.Boolean [fake_override,val]
          public abstract isLateinit: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isLateinit> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty0>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isLateinit visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isLateinit> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty0
            public abstract fun <get-isLateinit> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty0>
      PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isOpen: kotlin.Boolean [fake_override,val]
          public abstract isOpen: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty0
            public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>
      PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.3')
        overridden:
          public abstract isSuspend: kotlin.Boolean [fake_override,val]
          public abstract isSuspend: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isSuspend> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty0
            public abstract fun <get-isSuspend> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>
      PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
          public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KProperty0
            public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>
      PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
          public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>) returnType:kotlin.reflect.KVisibility? [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KProperty0
            public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>
      FUN FAKE_OVERRIDE name:get visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty0<V of kotlin.reflect.KMutableProperty0>) returnType:V of kotlin.reflect.KMutableProperty0 [fake_override]
        overridden:
          public abstract fun get (): V of kotlin.reflect.KProperty0 declared in kotlin.reflect.KProperty0
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty0<V of kotlin.reflect.KMutableProperty0>
      FUN FAKE_OVERRIDE name:invoke visibility:public modality:ABSTRACT <> ($this:kotlin.Function0<V of kotlin.reflect.KMutableProperty0>) returnType:V of kotlin.reflect.KMutableProperty0 [fake_override,operator]
        overridden:
          public abstract fun invoke (): V of kotlin.reflect.KProperty0 [fake_override,operator] declared in kotlin.reflect.KProperty0
        $this: VALUE_PARAMETER name:<this> type:kotlin.Function0<V of kotlin.reflect.KMutableProperty0>
      FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>, args:kotlin.Array<out kotlin.Any?>) returnType:V of kotlin.reflect.KMutableProperty0 [fake_override]
        overridden:
          public abstract fun call (vararg args: kotlin.Any?): V of kotlin.reflect.KProperty0 [fake_override] declared in kotlin.reflect.KProperty0
          public abstract fun call (vararg args: kotlin.Any?): V of kotlin.reflect.KMutableProperty [fake_override] declared in kotlin.reflect.KMutableProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>
        VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
      FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:V of kotlin.reflect.KMutableProperty0 [fake_override]
        overridden:
          public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): V of kotlin.reflect.KProperty0 [fake_override] declared in kotlin.reflect.KProperty0
          public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): V of kotlin.reflect.KMutableProperty [fake_override] declared in kotlin.reflect.KMutableProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>
        VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
      PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
          public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KProperty0
            public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
      PROPERTY FAKE_OVERRIDE name:getter visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract getter: kotlin.reflect.KProperty0.Getter<V of kotlin.reflect.KProperty0> [val]
          public abstract getter: kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KMutableProperty> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-getter> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty0<V of kotlin.reflect.KMutableProperty0>) returnType:kotlin.reflect.KProperty0.Getter<V of kotlin.reflect.KMutableProperty0> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:getter visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-getter> (): kotlin.reflect.KProperty0.Getter<V of kotlin.reflect.KProperty0> declared in kotlin.reflect.KProperty0
            public abstract fun <get-getter> (): kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KMutableProperty> [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty0<V of kotlin.reflect.KMutableProperty0>
      PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
          public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KProperty0
            public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>
      PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract returnType: kotlin.reflect.KType [fake_override,val]
          public abstract returnType: kotlin.reflect.KType [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>) returnType:kotlin.reflect.KType [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KProperty0
            public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>
      PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract name: kotlin.String [fake_override,val]
          public abstract name: kotlin.String [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>) returnType:kotlin.String [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty0
            public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty0>
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KProperty0
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KMutableProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KProperty0
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KMutableProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty0
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KMutableProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    CLASS INTERFACE name:KProperty1 modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KProperty<V of kotlin.reflect.KProperty1>; kotlin.Function1<T of kotlin.reflect.KProperty1, V of kotlin.reflect.KProperty1>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KProperty1<T of kotlin.reflect.KProperty1, V of kotlin.reflect.KProperty1>
      TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?]
      TYPE_PARAMETER name:V index:1 variance:out superTypes:[kotlin.Any?]
      FUN name:get visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty1<T of kotlin.reflect.KProperty1, V of kotlin.reflect.KProperty1>, receiver:T of kotlin.reflect.KProperty1) returnType:V of kotlin.reflect.KProperty1
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty1<T of kotlin.reflect.KProperty1, V of kotlin.reflect.KProperty1>
        VALUE_PARAMETER name:receiver index:0 type:T of kotlin.reflect.KProperty1
      FUN name:getDelegate visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty1<T of kotlin.reflect.KProperty1, V of kotlin.reflect.KProperty1>, receiver:T of kotlin.reflect.KProperty1) returnType:kotlin.Any?
        annotations:
          SinceKotlin(version = '1.1')
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty1<T of kotlin.reflect.KProperty1, V of kotlin.reflect.KProperty1>
        VALUE_PARAMETER name:receiver index:0 type:T of kotlin.reflect.KProperty1
      PROPERTY name:getter visibility:public modality:ABSTRACT [val]
        overridden:
          public abstract getter: kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KProperty> [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-getter> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty1<T of kotlin.reflect.KProperty1, V of kotlin.reflect.KProperty1>) returnType:kotlin.reflect.KProperty1.Getter<T of kotlin.reflect.KProperty1, V of kotlin.reflect.KProperty1>
          correspondingProperty: PROPERTY name:getter visibility:public modality:ABSTRACT [val]
          overridden:
            public abstract fun <get-getter> (): kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KProperty> declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty1<T of kotlin.reflect.KProperty1, V of kotlin.reflect.KProperty1>
      CLASS INTERFACE name:Getter modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KProperty1.Getter>; kotlin.Function1<T of kotlin.reflect.KProperty1.Getter, V of kotlin.reflect.KProperty1.Getter>]
        $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KProperty1.Getter<T of kotlin.reflect.KProperty1.Getter, V of kotlin.reflect.KProperty1.Getter>
        TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?]
        TYPE_PARAMETER name:V index:1 variance:out superTypes:[kotlin.Any?]
        PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isAbstract: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>
        PROPERTY FAKE_OVERRIDE name:isExternal visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isExternal: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isExternal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty1.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isExternal visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isExternal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty1.Getter>
        PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isFinal: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>
        PROPERTY FAKE_OVERRIDE name:isInfix visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isInfix: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isInfix> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty1.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isInfix visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isInfix> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty1.Getter>
        PROPERTY FAKE_OVERRIDE name:isInline visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isInline: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isInline> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty1.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isInline visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isInline> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty1.Getter>
        PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isOpen: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>
        PROPERTY FAKE_OVERRIDE name:isOperator visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isOperator: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isOperator> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty1.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOperator visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isOperator> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty1.Getter>
        PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isSuspend: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty1.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isSuspend> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty1.Getter>
        PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>
        PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>) returnType:kotlin.reflect.KVisibility? [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>
        FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>, args:kotlin.Array<out kotlin.Any?>) returnType:V of kotlin.reflect.KProperty1.Getter [fake_override]
          overridden:
            public abstract fun call (vararg args: kotlin.Any?): V of kotlin.reflect.KProperty.Getter [fake_override] declared in kotlin.reflect.KProperty.Getter
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>
          VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
        FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:V of kotlin.reflect.KProperty1.Getter [fake_override]
          overridden:
            public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): V of kotlin.reflect.KProperty.Getter [fake_override] declared in kotlin.reflect.KProperty.Getter
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>
          VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
        FUN FAKE_OVERRIDE name:invoke visibility:public modality:ABSTRACT <> ($this:kotlin.Function1<T of kotlin.reflect.KProperty1.Getter, V of kotlin.reflect.KProperty1.Getter>, p1:T of kotlin.reflect.KProperty1.Getter) returnType:V of kotlin.reflect.KProperty1.Getter [fake_override,operator]
          overridden:
            public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1
          $this: VALUE_PARAMETER name:<this> type:kotlin.Function1<T of kotlin.reflect.KProperty1.Getter, V of kotlin.reflect.KProperty1.Getter>
          VALUE_PARAMETER name:p1 index:0 type:T of kotlin.reflect.KProperty1.Getter
        PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
        PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>
        PROPERTY FAKE_OVERRIDE name:property visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract property: kotlin.reflect.KProperty<V of kotlin.reflect.KProperty.Getter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-property> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KProperty1.Getter>) returnType:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty1.Getter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:property visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-property> (): kotlin.reflect.KProperty<V of kotlin.reflect.KProperty.Getter> [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KProperty1.Getter>
        PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract returnType: kotlin.reflect.KType [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>) returnType:kotlin.reflect.KType [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>
        PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract name: kotlin.String [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>) returnType:kotlin.String [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1.Getter>
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
          overridden:
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KProperty.Getter
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.Function1
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
          VALUE_PARAMETER name:other index:0 type:kotlin.Any?
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
          overridden:
            public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KProperty.Getter
            public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.Function1
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
          overridden:
            public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty.Getter
            public open fun toString (): kotlin.String [fake_override] declared in kotlin.Function1
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isAbstract: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>
      PROPERTY FAKE_OVERRIDE name:isConst visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isConst: kotlin.Boolean [val]
        FUN FAKE_OVERRIDE name:<get-isConst> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty1>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isConst visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isConst> (): kotlin.Boolean declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty1>
      PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isFinal: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>
      PROPERTY FAKE_OVERRIDE name:isLateinit visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isLateinit: kotlin.Boolean [val]
        FUN FAKE_OVERRIDE name:<get-isLateinit> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty1>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isLateinit visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isLateinit> (): kotlin.Boolean declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty1>
      PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isOpen: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>
      PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.3')
        overridden:
          public abstract isSuspend: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isSuspend> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>
      PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>
      PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>) returnType:kotlin.reflect.KVisibility? [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>
      FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>, args:kotlin.Array<out kotlin.Any?>) returnType:V of kotlin.reflect.KProperty1 [fake_override]
        overridden:
          public abstract fun call (vararg args: kotlin.Any?): V of kotlin.reflect.KProperty [fake_override] declared in kotlin.reflect.KProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>
        VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
      FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:V of kotlin.reflect.KProperty1 [fake_override]
        overridden:
          public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): V of kotlin.reflect.KProperty [fake_override] declared in kotlin.reflect.KProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>
        VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
      FUN FAKE_OVERRIDE name:invoke visibility:public modality:ABSTRACT <> ($this:kotlin.Function1<T of kotlin.reflect.KProperty1, V of kotlin.reflect.KProperty1>, p1:T of kotlin.reflect.KProperty1) returnType:V of kotlin.reflect.KProperty1 [fake_override,operator]
        overridden:
          public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1
        $this: VALUE_PARAMETER name:<this> type:kotlin.Function1<T of kotlin.reflect.KProperty1, V of kotlin.reflect.KProperty1>
        VALUE_PARAMETER name:p1 index:0 type:T of kotlin.reflect.KProperty1
      PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
      PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>
      PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract returnType: kotlin.reflect.KType [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>) returnType:kotlin.reflect.KType [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>
      PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract name: kotlin.String [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>) returnType:kotlin.String [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty1>
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KProperty
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.Function1
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KProperty
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.Function1
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.Function1
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    CLASS INTERFACE name:KMutableProperty1 modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KProperty1<T of kotlin.reflect.KMutableProperty1, V of kotlin.reflect.KMutableProperty1>; kotlin.reflect.KMutableProperty<V of kotlin.reflect.KMutableProperty1>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KMutableProperty1<T of kotlin.reflect.KMutableProperty1, V of kotlin.reflect.KMutableProperty1>
      TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?]
      TYPE_PARAMETER name:V index:1 variance: superTypes:[kotlin.Any?]
      FUN name:set visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KMutableProperty1<T of kotlin.reflect.KMutableProperty1, V of kotlin.reflect.KMutableProperty1>, receiver:T of kotlin.reflect.KMutableProperty1, value:V of kotlin.reflect.KMutableProperty1) returnType:kotlin.Unit
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KMutableProperty1<T of kotlin.reflect.KMutableProperty1, V of kotlin.reflect.KMutableProperty1>
        VALUE_PARAMETER name:receiver index:0 type:T of kotlin.reflect.KMutableProperty1
        VALUE_PARAMETER name:value index:1 type:V of kotlin.reflect.KMutableProperty1
      PROPERTY name:setter visibility:public modality:ABSTRACT [val]
        overridden:
          public abstract setter: kotlin.reflect.KMutableProperty.Setter<V of kotlin.reflect.KMutableProperty> [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-setter> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KMutableProperty1<T of kotlin.reflect.KMutableProperty1, V of kotlin.reflect.KMutableProperty1>) returnType:kotlin.reflect.KMutableProperty1.Setter<T of kotlin.reflect.KMutableProperty1, V of kotlin.reflect.KMutableProperty1>
          correspondingProperty: PROPERTY name:setter visibility:public modality:ABSTRACT [val]
          overridden:
            public abstract fun <get-setter> (): kotlin.reflect.KMutableProperty.Setter<V of kotlin.reflect.KMutableProperty> declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KMutableProperty1<T of kotlin.reflect.KMutableProperty1, V of kotlin.reflect.KMutableProperty1>
      CLASS INTERFACE name:Setter modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KMutableProperty.Setter<V of kotlin.reflect.KMutableProperty1.Setter>; kotlin.Function2<T of kotlin.reflect.KMutableProperty1.Setter, V of kotlin.reflect.KMutableProperty1.Setter, kotlin.Unit>]
        $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KMutableProperty1.Setter<T of kotlin.reflect.KMutableProperty1.Setter, V of kotlin.reflect.KMutableProperty1.Setter>
        TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?]
        TYPE_PARAMETER name:V index:1 variance: superTypes:[kotlin.Any?]
        PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isAbstract: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isExternal visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isExternal: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isExternal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isExternal visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isExternal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isFinal: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isInfix visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isInfix: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isInfix> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isInfix visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isInfix> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isInline visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isInline: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isInline> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isInline visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isInline> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isOpen: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isOperator visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isOperator: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isOperator> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOperator visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isOperator> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isSuspend: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isSuspend> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.reflect.KVisibility? [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>, args:kotlin.Array<out kotlin.Any?>) returnType:kotlin.Unit [fake_override]
          overridden:
            public abstract fun call (vararg args: kotlin.Any?): kotlin.Unit [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
          VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
        FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:kotlin.Unit [fake_override]
          overridden:
            public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): kotlin.Unit [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
          VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
        FUN FAKE_OVERRIDE name:invoke visibility:public modality:ABSTRACT <> ($this:kotlin.Function2<T of kotlin.reflect.KMutableProperty1.Setter, V of kotlin.reflect.KMutableProperty1.Setter, kotlin.Unit>, p1:T of kotlin.reflect.KMutableProperty1.Setter, p2:V of kotlin.reflect.KMutableProperty1.Setter) returnType:kotlin.Unit [fake_override,operator]
          overridden:
            public abstract fun invoke (p1: P1 of kotlin.Function2, p2: P2 of kotlin.Function2): R of kotlin.Function2 [operator] declared in kotlin.Function2
          $this: VALUE_PARAMETER name:<this> type:kotlin.Function2<T of kotlin.reflect.KMutableProperty1.Setter, V of kotlin.reflect.KMutableProperty1.Setter, kotlin.Unit>
          VALUE_PARAMETER name:p1 index:0 type:T of kotlin.reflect.KMutableProperty1.Setter
          VALUE_PARAMETER name:p2 index:1 type:V of kotlin.reflect.KMutableProperty1.Setter
        PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
        PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:property visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract property: kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty.Setter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-property> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KMutableProperty1.Setter>) returnType:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty1.Setter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:property visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-property> (): kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty.Setter> [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KMutableProperty1.Setter>
        PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract returnType: kotlin.reflect.KType [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.reflect.KType [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract name: kotlin.String [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.String [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
          overridden:
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KMutableProperty.Setter
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.Function2
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
          VALUE_PARAMETER name:other index:0 type:kotlin.Any?
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
          overridden:
            public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.Function2
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
          overridden:
            public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            public open fun toString (): kotlin.String [fake_override] declared in kotlin.Function2
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:getDelegate visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty1<T of kotlin.reflect.KMutableProperty1, V of kotlin.reflect.KMutableProperty1>, receiver:T of kotlin.reflect.KMutableProperty1) returnType:kotlin.Any? [fake_override]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract fun getDelegate (receiver: T of kotlin.reflect.KProperty1): kotlin.Any? declared in kotlin.reflect.KProperty1
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty1<T of kotlin.reflect.KMutableProperty1, V of kotlin.reflect.KMutableProperty1>
        VALUE_PARAMETER name:receiver index:0 type:T of kotlin.reflect.KMutableProperty1
      PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isAbstract: kotlin.Boolean [fake_override,val]
          public abstract isAbstract: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty1
            public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>
      PROPERTY FAKE_OVERRIDE name:isConst visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isConst: kotlin.Boolean [fake_override,val]
          public abstract isConst: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isConst> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty1>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isConst visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isConst> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty1
            public abstract fun <get-isConst> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty1>
      PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isFinal: kotlin.Boolean [fake_override,val]
          public abstract isFinal: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty1
            public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>
      PROPERTY FAKE_OVERRIDE name:isLateinit visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isLateinit: kotlin.Boolean [fake_override,val]
          public abstract isLateinit: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isLateinit> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty1>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isLateinit visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isLateinit> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty1
            public abstract fun <get-isLateinit> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty1>
      PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isOpen: kotlin.Boolean [fake_override,val]
          public abstract isOpen: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty1
            public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>
      PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.3')
        overridden:
          public abstract isSuspend: kotlin.Boolean [fake_override,val]
          public abstract isSuspend: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isSuspend> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty1
            public abstract fun <get-isSuspend> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>
      PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
          public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KProperty1
            public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>
      PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
          public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>) returnType:kotlin.reflect.KVisibility? [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KProperty1
            public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>
      FUN FAKE_OVERRIDE name:get visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty1<T of kotlin.reflect.KMutableProperty1, V of kotlin.reflect.KMutableProperty1>, receiver:T of kotlin.reflect.KMutableProperty1) returnType:V of kotlin.reflect.KMutableProperty1 [fake_override]
        overridden:
          public abstract fun get (receiver: T of kotlin.reflect.KProperty1): V of kotlin.reflect.KProperty1 declared in kotlin.reflect.KProperty1
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty1<T of kotlin.reflect.KMutableProperty1, V of kotlin.reflect.KMutableProperty1>
        VALUE_PARAMETER name:receiver index:0 type:T of kotlin.reflect.KMutableProperty1
      FUN FAKE_OVERRIDE name:invoke visibility:public modality:ABSTRACT <> ($this:kotlin.Function1<T of kotlin.reflect.KMutableProperty1, V of kotlin.reflect.KMutableProperty1>, p1:T of kotlin.reflect.KMutableProperty1) returnType:V of kotlin.reflect.KMutableProperty1 [fake_override,operator]
        overridden:
          public abstract fun invoke (p1: T of kotlin.reflect.KProperty1): V of kotlin.reflect.KProperty1 [fake_override,operator] declared in kotlin.reflect.KProperty1
        $this: VALUE_PARAMETER name:<this> type:kotlin.Function1<T of kotlin.reflect.KMutableProperty1, V of kotlin.reflect.KMutableProperty1>
        VALUE_PARAMETER name:p1 index:0 type:T of kotlin.reflect.KMutableProperty1
      FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>, args:kotlin.Array<out kotlin.Any?>) returnType:V of kotlin.reflect.KMutableProperty1 [fake_override]
        overridden:
          public abstract fun call (vararg args: kotlin.Any?): V of kotlin.reflect.KProperty1 [fake_override] declared in kotlin.reflect.KProperty1
          public abstract fun call (vararg args: kotlin.Any?): V of kotlin.reflect.KMutableProperty [fake_override] declared in kotlin.reflect.KMutableProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>
        VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
      FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:V of kotlin.reflect.KMutableProperty1 [fake_override]
        overridden:
          public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): V of kotlin.reflect.KProperty1 [fake_override] declared in kotlin.reflect.KProperty1
          public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): V of kotlin.reflect.KMutableProperty [fake_override] declared in kotlin.reflect.KMutableProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>
        VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
      PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
          public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KProperty1
            public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
      PROPERTY FAKE_OVERRIDE name:getter visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract getter: kotlin.reflect.KProperty1.Getter<T of kotlin.reflect.KProperty1, V of kotlin.reflect.KProperty1> [val]
          public abstract getter: kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KMutableProperty> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-getter> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty1<T of kotlin.reflect.KMutableProperty1, V of kotlin.reflect.KMutableProperty1>) returnType:kotlin.reflect.KProperty1.Getter<T of kotlin.reflect.KMutableProperty1, V of kotlin.reflect.KMutableProperty1> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:getter visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-getter> (): kotlin.reflect.KProperty1.Getter<T of kotlin.reflect.KProperty1, V of kotlin.reflect.KProperty1> declared in kotlin.reflect.KProperty1
            public abstract fun <get-getter> (): kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KMutableProperty> [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty1<T of kotlin.reflect.KMutableProperty1, V of kotlin.reflect.KMutableProperty1>
      PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
          public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KProperty1
            public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>
      PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract returnType: kotlin.reflect.KType [fake_override,val]
          public abstract returnType: kotlin.reflect.KType [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>) returnType:kotlin.reflect.KType [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KProperty1
            public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>
      PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract name: kotlin.String [fake_override,val]
          public abstract name: kotlin.String [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>) returnType:kotlin.String [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty1
            public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty1>
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KProperty1
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KMutableProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KProperty1
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KMutableProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty1
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KMutableProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    CLASS INTERFACE name:KProperty2 modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KProperty<V of kotlin.reflect.KProperty2>; kotlin.Function2<D of kotlin.reflect.KProperty2, E of kotlin.reflect.KProperty2, V of kotlin.reflect.KProperty2>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KProperty2<D of kotlin.reflect.KProperty2, E of kotlin.reflect.KProperty2, V of kotlin.reflect.KProperty2>
      TYPE_PARAMETER name:D index:0 variance: superTypes:[kotlin.Any?]
      TYPE_PARAMETER name:E index:1 variance: superTypes:[kotlin.Any?]
      TYPE_PARAMETER name:V index:2 variance:out superTypes:[kotlin.Any?]
      FUN name:get visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty2<D of kotlin.reflect.KProperty2, E of kotlin.reflect.KProperty2, V of kotlin.reflect.KProperty2>, receiver1:D of kotlin.reflect.KProperty2, receiver2:E of kotlin.reflect.KProperty2) returnType:V of kotlin.reflect.KProperty2
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty2<D of kotlin.reflect.KProperty2, E of kotlin.reflect.KProperty2, V of kotlin.reflect.KProperty2>
        VALUE_PARAMETER name:receiver1 index:0 type:D of kotlin.reflect.KProperty2
        VALUE_PARAMETER name:receiver2 index:1 type:E of kotlin.reflect.KProperty2
      FUN name:getDelegate visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty2<D of kotlin.reflect.KProperty2, E of kotlin.reflect.KProperty2, V of kotlin.reflect.KProperty2>, receiver1:D of kotlin.reflect.KProperty2, receiver2:E of kotlin.reflect.KProperty2) returnType:kotlin.Any?
        annotations:
          SinceKotlin(version = '1.1')
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty2<D of kotlin.reflect.KProperty2, E of kotlin.reflect.KProperty2, V of kotlin.reflect.KProperty2>
        VALUE_PARAMETER name:receiver1 index:0 type:D of kotlin.reflect.KProperty2
        VALUE_PARAMETER name:receiver2 index:1 type:E of kotlin.reflect.KProperty2
      PROPERTY name:getter visibility:public modality:ABSTRACT [val]
        overridden:
          public abstract getter: kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KProperty> [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-getter> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty2<D of kotlin.reflect.KProperty2, E of kotlin.reflect.KProperty2, V of kotlin.reflect.KProperty2>) returnType:kotlin.reflect.KProperty2.Getter<D of kotlin.reflect.KProperty2, E of kotlin.reflect.KProperty2, V of kotlin.reflect.KProperty2>
          correspondingProperty: PROPERTY name:getter visibility:public modality:ABSTRACT [val]
          overridden:
            public abstract fun <get-getter> (): kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KProperty> declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty2<D of kotlin.reflect.KProperty2, E of kotlin.reflect.KProperty2, V of kotlin.reflect.KProperty2>
      CLASS INTERFACE name:Getter modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KProperty2.Getter>; kotlin.Function2<D of kotlin.reflect.KProperty2.Getter, E of kotlin.reflect.KProperty2.Getter, V of kotlin.reflect.KProperty2.Getter>]
        $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KProperty2.Getter<D of kotlin.reflect.KProperty2.Getter, E of kotlin.reflect.KProperty2.Getter, V of kotlin.reflect.KProperty2.Getter>
        TYPE_PARAMETER name:D index:0 variance: superTypes:[kotlin.Any?]
        TYPE_PARAMETER name:E index:1 variance: superTypes:[kotlin.Any?]
        TYPE_PARAMETER name:V index:2 variance:out superTypes:[kotlin.Any?]
        PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isAbstract: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>
        PROPERTY FAKE_OVERRIDE name:isExternal visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isExternal: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isExternal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty2.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isExternal visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isExternal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty2.Getter>
        PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isFinal: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>
        PROPERTY FAKE_OVERRIDE name:isInfix visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isInfix: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isInfix> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty2.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isInfix visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isInfix> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty2.Getter>
        PROPERTY FAKE_OVERRIDE name:isInline visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isInline: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isInline> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty2.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isInline visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isInline> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty2.Getter>
        PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isOpen: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>
        PROPERTY FAKE_OVERRIDE name:isOperator visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isOperator: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isOperator> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty2.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOperator visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isOperator> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty2.Getter>
        PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isSuspend: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty2.Getter>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isSuspend> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<V of kotlin.reflect.KProperty2.Getter>
        PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>
        PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>) returnType:kotlin.reflect.KVisibility? [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>
        FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>, args:kotlin.Array<out kotlin.Any?>) returnType:V of kotlin.reflect.KProperty2.Getter [fake_override]
          overridden:
            public abstract fun call (vararg args: kotlin.Any?): V of kotlin.reflect.KProperty.Getter [fake_override] declared in kotlin.reflect.KProperty.Getter
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>
          VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
        FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:V of kotlin.reflect.KProperty2.Getter [fake_override]
          overridden:
            public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): V of kotlin.reflect.KProperty.Getter [fake_override] declared in kotlin.reflect.KProperty.Getter
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>
          VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
        FUN FAKE_OVERRIDE name:invoke visibility:public modality:ABSTRACT <> ($this:kotlin.Function2<D of kotlin.reflect.KProperty2.Getter, E of kotlin.reflect.KProperty2.Getter, V of kotlin.reflect.KProperty2.Getter>, p1:D of kotlin.reflect.KProperty2.Getter, p2:E of kotlin.reflect.KProperty2.Getter) returnType:V of kotlin.reflect.KProperty2.Getter [fake_override,operator]
          overridden:
            public abstract fun invoke (p1: P1 of kotlin.Function2, p2: P2 of kotlin.Function2): R of kotlin.Function2 [operator] declared in kotlin.Function2
          $this: VALUE_PARAMETER name:<this> type:kotlin.Function2<D of kotlin.reflect.KProperty2.Getter, E of kotlin.reflect.KProperty2.Getter, V of kotlin.reflect.KProperty2.Getter>
          VALUE_PARAMETER name:p1 index:0 type:D of kotlin.reflect.KProperty2.Getter
          VALUE_PARAMETER name:p2 index:1 type:E of kotlin.reflect.KProperty2.Getter
        PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
        PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>
        PROPERTY FAKE_OVERRIDE name:property visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract property: kotlin.reflect.KProperty<V of kotlin.reflect.KProperty.Getter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-property> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KProperty2.Getter>) returnType:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty2.Getter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:property visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-property> (): kotlin.reflect.KProperty<V of kotlin.reflect.KProperty.Getter> [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KProperty2.Getter>
        PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract returnType: kotlin.reflect.KType [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>) returnType:kotlin.reflect.KType [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>
        PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract name: kotlin.String [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>) returnType:kotlin.String [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty.Getter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2.Getter>
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
          overridden:
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KProperty.Getter
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.Function2
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
          VALUE_PARAMETER name:other index:0 type:kotlin.Any?
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
          overridden:
            public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KProperty.Getter
            public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.Function2
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
          overridden:
            public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty.Getter
            public open fun toString (): kotlin.String [fake_override] declared in kotlin.Function2
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isAbstract: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>
      PROPERTY FAKE_OVERRIDE name:isConst visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isConst: kotlin.Boolean [val]
        FUN FAKE_OVERRIDE name:<get-isConst> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty2>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isConst visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isConst> (): kotlin.Boolean declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty2>
      PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isFinal: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>
      PROPERTY FAKE_OVERRIDE name:isLateinit visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isLateinit: kotlin.Boolean [val]
        FUN FAKE_OVERRIDE name:<get-isLateinit> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty2>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isLateinit visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isLateinit> (): kotlin.Boolean declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KProperty2>
      PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isOpen: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>
      PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.3')
        overridden:
          public abstract isSuspend: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isSuspend> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>
      PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>
      PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>) returnType:kotlin.reflect.KVisibility? [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>
      FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>, args:kotlin.Array<out kotlin.Any?>) returnType:V of kotlin.reflect.KProperty2 [fake_override]
        overridden:
          public abstract fun call (vararg args: kotlin.Any?): V of kotlin.reflect.KProperty [fake_override] declared in kotlin.reflect.KProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>
        VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
      FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:V of kotlin.reflect.KProperty2 [fake_override]
        overridden:
          public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): V of kotlin.reflect.KProperty [fake_override] declared in kotlin.reflect.KProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>
        VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
      FUN FAKE_OVERRIDE name:invoke visibility:public modality:ABSTRACT <> ($this:kotlin.Function2<D of kotlin.reflect.KProperty2, E of kotlin.reflect.KProperty2, V of kotlin.reflect.KProperty2>, p1:D of kotlin.reflect.KProperty2, p2:E of kotlin.reflect.KProperty2) returnType:V of kotlin.reflect.KProperty2 [fake_override,operator]
        overridden:
          public abstract fun invoke (p1: P1 of kotlin.Function2, p2: P2 of kotlin.Function2): R of kotlin.Function2 [operator] declared in kotlin.Function2
        $this: VALUE_PARAMETER name:<this> type:kotlin.Function2<D of kotlin.reflect.KProperty2, E of kotlin.reflect.KProperty2, V of kotlin.reflect.KProperty2>
        VALUE_PARAMETER name:p1 index:0 type:D of kotlin.reflect.KProperty2
        VALUE_PARAMETER name:p2 index:1 type:E of kotlin.reflect.KProperty2
      PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
      PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>
      PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract returnType: kotlin.reflect.KType [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>) returnType:kotlin.reflect.KType [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>
      PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract name: kotlin.String [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>) returnType:kotlin.String [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KProperty2>
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KProperty
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.Function2
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KProperty
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.Function2
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.Function2
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    CLASS INTERFACE name:KMutableProperty2 modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KProperty2<D of kotlin.reflect.KMutableProperty2, E of kotlin.reflect.KMutableProperty2, V of kotlin.reflect.KMutableProperty2>; kotlin.reflect.KMutableProperty<V of kotlin.reflect.KMutableProperty2>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KMutableProperty2<D of kotlin.reflect.KMutableProperty2, E of kotlin.reflect.KMutableProperty2, V of kotlin.reflect.KMutableProperty2>
      TYPE_PARAMETER name:D index:0 variance: superTypes:[kotlin.Any?]
      TYPE_PARAMETER name:E index:1 variance: superTypes:[kotlin.Any?]
      TYPE_PARAMETER name:V index:2 variance: superTypes:[kotlin.Any?]
      FUN name:set visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KMutableProperty2<D of kotlin.reflect.KMutableProperty2, E of kotlin.reflect.KMutableProperty2, V of kotlin.reflect.KMutableProperty2>, receiver1:D of kotlin.reflect.KMutableProperty2, receiver2:E of kotlin.reflect.KMutableProperty2, value:V of kotlin.reflect.KMutableProperty2) returnType:kotlin.Unit
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KMutableProperty2<D of kotlin.reflect.KMutableProperty2, E of kotlin.reflect.KMutableProperty2, V of kotlin.reflect.KMutableProperty2>
        VALUE_PARAMETER name:receiver1 index:0 type:D of kotlin.reflect.KMutableProperty2
        VALUE_PARAMETER name:receiver2 index:1 type:E of kotlin.reflect.KMutableProperty2
        VALUE_PARAMETER name:value index:2 type:V of kotlin.reflect.KMutableProperty2
      PROPERTY name:setter visibility:public modality:ABSTRACT [val]
        overridden:
          public abstract setter: kotlin.reflect.KMutableProperty.Setter<V of kotlin.reflect.KMutableProperty> [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-setter> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KMutableProperty2<D of kotlin.reflect.KMutableProperty2, E of kotlin.reflect.KMutableProperty2, V of kotlin.reflect.KMutableProperty2>) returnType:kotlin.reflect.KMutableProperty2.Setter<D of kotlin.reflect.KMutableProperty2, E of kotlin.reflect.KMutableProperty2, V of kotlin.reflect.KMutableProperty2>
          correspondingProperty: PROPERTY name:setter visibility:public modality:ABSTRACT [val]
          overridden:
            public abstract fun <get-setter> (): kotlin.reflect.KMutableProperty.Setter<V of kotlin.reflect.KMutableProperty> declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KMutableProperty2<D of kotlin.reflect.KMutableProperty2, E of kotlin.reflect.KMutableProperty2, V of kotlin.reflect.KMutableProperty2>
      CLASS INTERFACE name:Setter modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KMutableProperty.Setter<V of kotlin.reflect.KMutableProperty2.Setter>; kotlin.Function3<D of kotlin.reflect.KMutableProperty2.Setter, E of kotlin.reflect.KMutableProperty2.Setter, V of kotlin.reflect.KMutableProperty2.Setter, kotlin.Unit>]
        $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KMutableProperty2.Setter<D of kotlin.reflect.KMutableProperty2.Setter, E of kotlin.reflect.KMutableProperty2.Setter, V of kotlin.reflect.KMutableProperty2.Setter>
        TYPE_PARAMETER name:D index:0 variance: superTypes:[kotlin.Any?]
        TYPE_PARAMETER name:E index:1 variance: superTypes:[kotlin.Any?]
        TYPE_PARAMETER name:V index:2 variance: superTypes:[kotlin.Any?]
        PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isAbstract: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isExternal visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isExternal: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isExternal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isExternal visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isExternal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isFinal: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isInfix visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isInfix: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isInfix> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isInfix visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isInfix> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isInline visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isInline: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isInline> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isInline visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isInline> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isOpen: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isOperator visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isOperator: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isOperator> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOperator visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isOperator> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract isSuspend: kotlin.Boolean [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KFunction<kotlin.Unit>) returnType:kotlin.Boolean [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-isSuspend> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KFunction<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          annotations:
            SinceKotlin(version = '1.1')
          overridden:
            public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.reflect.KVisibility? [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>, args:kotlin.Array<out kotlin.Any?>) returnType:kotlin.Unit [fake_override]
          overridden:
            public abstract fun call (vararg args: kotlin.Any?): kotlin.Unit [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
          VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
        FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:kotlin.Unit [fake_override]
          overridden:
            public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): kotlin.Unit [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
          VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
        FUN FAKE_OVERRIDE name:invoke visibility:public modality:ABSTRACT <> ($this:kotlin.Function3<D of kotlin.reflect.KMutableProperty2.Setter, E of kotlin.reflect.KMutableProperty2.Setter, V of kotlin.reflect.KMutableProperty2.Setter, kotlin.Unit>, p1:D of kotlin.reflect.KMutableProperty2.Setter, p2:E of kotlin.reflect.KMutableProperty2.Setter, p3:V of kotlin.reflect.KMutableProperty2.Setter) returnType:kotlin.Unit [fake_override,operator]
          overridden:
            public abstract fun invoke (p1: P1 of kotlin.Function3, p2: P2 of kotlin.Function3, p3: P3 of kotlin.Function3): R of kotlin.Function3 [operator] declared in kotlin.Function3
          $this: VALUE_PARAMETER name:<this> type:kotlin.Function3<D of kotlin.reflect.KMutableProperty2.Setter, E of kotlin.reflect.KMutableProperty2.Setter, V of kotlin.reflect.KMutableProperty2.Setter, kotlin.Unit>
          VALUE_PARAMETER name:p1 index:0 type:D of kotlin.reflect.KMutableProperty2.Setter
          VALUE_PARAMETER name:p2 index:1 type:E of kotlin.reflect.KMutableProperty2.Setter
          VALUE_PARAMETER name:p3 index:2 type:V of kotlin.reflect.KMutableProperty2.Setter
        PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
        PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:property visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract property: kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty.Setter> [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-property> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KMutableProperty2.Setter>) returnType:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty2.Setter> [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:property visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-property> (): kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty.Setter> [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty.Accessor<V of kotlin.reflect.KMutableProperty2.Setter>
        PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract returnType: kotlin.reflect.KType [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.reflect.KType [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract name: kotlin.String [fake_override,val]
          FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<kotlin.Unit>) returnType:kotlin.String [fake_override]
            correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
            overridden:
              public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<kotlin.Unit>
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
          overridden:
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KMutableProperty.Setter
            public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.Function3
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
          VALUE_PARAMETER name:other index:0 type:kotlin.Any?
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
          overridden:
            public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.Function3
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
          overridden:
            public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KMutableProperty.Setter
            public open fun toString (): kotlin.String [fake_override] declared in kotlin.Function3
          $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:getDelegate visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty2<D of kotlin.reflect.KMutableProperty2, E of kotlin.reflect.KMutableProperty2, V of kotlin.reflect.KMutableProperty2>, receiver1:D of kotlin.reflect.KMutableProperty2, receiver2:E of kotlin.reflect.KMutableProperty2) returnType:kotlin.Any? [fake_override]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract fun getDelegate (receiver1: D of kotlin.reflect.KProperty2, receiver2: E of kotlin.reflect.KProperty2): kotlin.Any? declared in kotlin.reflect.KProperty2
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty2<D of kotlin.reflect.KMutableProperty2, E of kotlin.reflect.KMutableProperty2, V of kotlin.reflect.KMutableProperty2>
        VALUE_PARAMETER name:receiver1 index:0 type:D of kotlin.reflect.KMutableProperty2
        VALUE_PARAMETER name:receiver2 index:1 type:E of kotlin.reflect.KMutableProperty2
      PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isAbstract: kotlin.Boolean [fake_override,val]
          public abstract isAbstract: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isAbstract visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty2
            public abstract fun <get-isAbstract> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>
      PROPERTY FAKE_OVERRIDE name:isConst visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isConst: kotlin.Boolean [fake_override,val]
          public abstract isConst: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isConst> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty2>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isConst visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isConst> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty2
            public abstract fun <get-isConst> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty2>
      PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isFinal: kotlin.Boolean [fake_override,val]
          public abstract isFinal: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isFinal visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty2
            public abstract fun <get-isFinal> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>
      PROPERTY FAKE_OVERRIDE name:isLateinit visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isLateinit: kotlin.Boolean [fake_override,val]
          public abstract isLateinit: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isLateinit> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty2>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isLateinit visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isLateinit> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty2
            public abstract fun <get-isLateinit> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty<V of kotlin.reflect.KMutableProperty2>
      PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract isOpen: kotlin.Boolean [fake_override,val]
          public abstract isOpen: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isOpen visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty2
            public abstract fun <get-isOpen> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>
      PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.3')
        overridden:
          public abstract isSuspend: kotlin.Boolean [fake_override,val]
          public abstract isSuspend: kotlin.Boolean [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>) returnType:kotlin.Boolean [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:isSuspend visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-isSuspend> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KProperty2
            public abstract fun <get-isSuspend> (): kotlin.Boolean [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>
      PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
          public abstract typeParameters: kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:typeParameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KProperty2
            public abstract fun <get-typeParameters> (): kotlin.collections.List<kotlin.reflect.KTypeParameter> [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>
      PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
        annotations:
          SinceKotlin(version = '1.1')
        overridden:
          public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
          public abstract visibility: kotlin.reflect.KVisibility? [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>) returnType:kotlin.reflect.KVisibility? [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:visibility visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KProperty2
            public abstract fun <get-visibility> (): kotlin.reflect.KVisibility? [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>
      FUN FAKE_OVERRIDE name:get visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty2<D of kotlin.reflect.KMutableProperty2, E of kotlin.reflect.KMutableProperty2, V of kotlin.reflect.KMutableProperty2>, receiver1:D of kotlin.reflect.KMutableProperty2, receiver2:E of kotlin.reflect.KMutableProperty2) returnType:V of kotlin.reflect.KMutableProperty2 [fake_override]
        overridden:
          public abstract fun get (receiver1: D of kotlin.reflect.KProperty2, receiver2: E of kotlin.reflect.KProperty2): V of kotlin.reflect.KProperty2 declared in kotlin.reflect.KProperty2
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty2<D of kotlin.reflect.KMutableProperty2, E of kotlin.reflect.KMutableProperty2, V of kotlin.reflect.KMutableProperty2>
        VALUE_PARAMETER name:receiver1 index:0 type:D of kotlin.reflect.KMutableProperty2
        VALUE_PARAMETER name:receiver2 index:1 type:E of kotlin.reflect.KMutableProperty2
      FUN FAKE_OVERRIDE name:invoke visibility:public modality:ABSTRACT <> ($this:kotlin.Function2<D of kotlin.reflect.KMutableProperty2, E of kotlin.reflect.KMutableProperty2, V of kotlin.reflect.KMutableProperty2>, p1:D of kotlin.reflect.KMutableProperty2, p2:E of kotlin.reflect.KMutableProperty2) returnType:V of kotlin.reflect.KMutableProperty2 [fake_override,operator]
        overridden:
          public abstract fun invoke (p1: D of kotlin.reflect.KProperty2, p2: E of kotlin.reflect.KProperty2): V of kotlin.reflect.KProperty2 [fake_override,operator] declared in kotlin.reflect.KProperty2
        $this: VALUE_PARAMETER name:<this> type:kotlin.Function2<D of kotlin.reflect.KMutableProperty2, E of kotlin.reflect.KMutableProperty2, V of kotlin.reflect.KMutableProperty2>
        VALUE_PARAMETER name:p1 index:0 type:D of kotlin.reflect.KMutableProperty2
        VALUE_PARAMETER name:p2 index:1 type:E of kotlin.reflect.KMutableProperty2
      FUN FAKE_OVERRIDE name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>, args:kotlin.Array<out kotlin.Any?>) returnType:V of kotlin.reflect.KMutableProperty2 [fake_override]
        overridden:
          public abstract fun call (vararg args: kotlin.Any?): V of kotlin.reflect.KProperty2 [fake_override] declared in kotlin.reflect.KProperty2
          public abstract fun call (vararg args: kotlin.Any?): V of kotlin.reflect.KMutableProperty [fake_override] declared in kotlin.reflect.KMutableProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>
        VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
      FUN FAKE_OVERRIDE name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:V of kotlin.reflect.KMutableProperty2 [fake_override]
        overridden:
          public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): V of kotlin.reflect.KProperty2 [fake_override] declared in kotlin.reflect.KProperty2
          public abstract fun callBy (args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): V of kotlin.reflect.KMutableProperty [fake_override] declared in kotlin.reflect.KMutableProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>
        VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
      PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
          public abstract annotations: kotlin.collections.List<kotlin.Annotation> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KProperty2
            public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
      PROPERTY FAKE_OVERRIDE name:getter visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract getter: kotlin.reflect.KProperty2.Getter<D of kotlin.reflect.KProperty2, E of kotlin.reflect.KProperty2, V of kotlin.reflect.KProperty2> [val]
          public abstract getter: kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KMutableProperty> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-getter> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KProperty2<D of kotlin.reflect.KMutableProperty2, E of kotlin.reflect.KMutableProperty2, V of kotlin.reflect.KMutableProperty2>) returnType:kotlin.reflect.KProperty2.Getter<D of kotlin.reflect.KMutableProperty2, E of kotlin.reflect.KMutableProperty2, V of kotlin.reflect.KMutableProperty2> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:getter visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-getter> (): kotlin.reflect.KProperty2.Getter<D of kotlin.reflect.KProperty2, E of kotlin.reflect.KProperty2, V of kotlin.reflect.KProperty2> declared in kotlin.reflect.KProperty2
            public abstract fun <get-getter> (): kotlin.reflect.KProperty.Getter<V of kotlin.reflect.KMutableProperty> [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KProperty2<D of kotlin.reflect.KMutableProperty2, E of kotlin.reflect.KMutableProperty2, V of kotlin.reflect.KMutableProperty2>
      PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
          public abstract parameters: kotlin.collections.List<kotlin.reflect.KParameter> [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>) returnType:kotlin.collections.List<kotlin.reflect.KParameter> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:parameters visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KProperty2
            public abstract fun <get-parameters> (): kotlin.collections.List<kotlin.reflect.KParameter> [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>
      PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract returnType: kotlin.reflect.KType [fake_override,val]
          public abstract returnType: kotlin.reflect.KType [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>) returnType:kotlin.reflect.KType [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:returnType visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KProperty2
            public abstract fun <get-returnType> (): kotlin.reflect.KType [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>
      PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract name: kotlin.String [fake_override,val]
          public abstract name: kotlin.String [fake_override,val]
        FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>) returnType:kotlin.String [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty2
            public abstract fun <get-name> (): kotlin.String [fake_override] declared in kotlin.reflect.KMutableProperty
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<V of kotlin.reflect.KMutableProperty2>
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KProperty2
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KMutableProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KProperty2
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KMutableProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KProperty2
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KMutableProperty
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FILE fqName:kotlin.reflect fileName:/KCallable.kt
    CLASS INTERFACE name:KCallable modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KAnnotatedElement]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>
      TYPE_PARAMETER name:R index:0 variance:out superTypes:[kotlin.Any?]
      PROPERTY name:name visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-name> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>) returnType:kotlin.String
          correspondingProperty: PROPERTY name:name visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>
      PROPERTY name:parameters visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-parameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>) returnType:kotlin.collections.List<kotlin.reflect.KParameter>
          correspondingProperty: PROPERTY name:parameters visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>
      PROPERTY name:returnType visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-returnType> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>) returnType:kotlin.reflect.KType
          correspondingProperty: PROPERTY name:returnType visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>
      PROPERTY name:typeParameters visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter>
          correspondingProperty: PROPERTY name:typeParameters visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>
      FUN name:call visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>, args:kotlin.Array<out kotlin.Any?>) returnType:R of kotlin.reflect.KCallable
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>
        VALUE_PARAMETER name:args index:0 type:kotlin.Array<out kotlin.Any?> varargElementType:kotlin.Any? [vararg]
      FUN name:callBy visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>, args:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>) returnType:R of kotlin.reflect.KCallable
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>
        VALUE_PARAMETER name:args index:0 type:kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>
      PROPERTY name:visibility visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>) returnType:kotlin.reflect.KVisibility?
          correspondingProperty: PROPERTY name:visibility visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>
      PROPERTY name:isFinal visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isFinal visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>
      PROPERTY name:isOpen visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isOpen visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>
      PROPERTY name:isAbstract visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isAbstract visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>
      PROPERTY name:isSuspend visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.3')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isSuspend> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isSuspend visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KCallable<R of kotlin.reflect.KCallable>
      PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract annotations: kotlin.collections.List<kotlin.Annotation> [val]
        FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> declared in kotlin.reflect.KAnnotatedElement
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KAnnotatedElement
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KAnnotatedElement
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KAnnotatedElement
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FILE fqName:kotlin.reflect fileName:/KClass.kt
    CLASS INTERFACE name:KClass modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KDeclarationContainer; kotlin.reflect.KAnnotatedElement; kotlin.reflect.KClassifier]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any]
      PROPERTY name:simpleName visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-simpleName> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.String?
          correspondingProperty: PROPERTY name:simpleName visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:qualifiedName visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-qualifiedName> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.String?
          correspondingProperty: PROPERTY name:qualifiedName visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:members visibility:public modality:ABSTRACT [val]
        overridden:
          public abstract members: kotlin.collections.Collection<kotlin.reflect.KCallable<*>> [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-members> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.collections.Collection<kotlin.reflect.KCallable<*>>
          correspondingProperty: PROPERTY name:members visibility:public modality:ABSTRACT [val]
          overridden:
            public abstract fun <get-members> (): kotlin.collections.Collection<kotlin.reflect.KCallable<*>> declared in kotlin.reflect.KDeclarationContainer
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:constructors visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-constructors> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.collections.Collection<kotlin.reflect.KFunction<T of kotlin.reflect.KClass>>
          correspondingProperty: PROPERTY name:constructors visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:nestedClasses visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-nestedClasses> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.collections.Collection<kotlin.reflect.KClass<*>>
          correspondingProperty: PROPERTY name:nestedClasses visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:objectInstance visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-objectInstance> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:T of kotlin.reflect.KClass?
          correspondingProperty: PROPERTY name:objectInstance visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      FUN name:isInstance visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>, value:kotlin.Any?) returnType:kotlin.Boolean
        annotations:
          SinceKotlin(version = '1.1')
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
        VALUE_PARAMETER name:value index:0 type:kotlin.Any?
      PROPERTY name:typeParameters visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-typeParameters> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.collections.List<kotlin.reflect.KTypeParameter>
          correspondingProperty: PROPERTY name:typeParameters visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:supertypes visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-supertypes> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.collections.List<kotlin.reflect.KType>
          correspondingProperty: PROPERTY name:supertypes visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:sealedSubclasses visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.3')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-sealedSubclasses> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.collections.List<kotlin.reflect.KClass<out T of kotlin.reflect.KClass>>
          correspondingProperty: PROPERTY name:sealedSubclasses visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:visibility visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-visibility> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.reflect.KVisibility?
          correspondingProperty: PROPERTY name:visibility visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:isFinal visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isFinal> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isFinal visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:isOpen visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isOpen> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isOpen visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:isAbstract visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isAbstract> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isAbstract visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:isSealed visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isSealed> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isSealed visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:isData visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isData> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isData visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:isInner visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isInner> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isInner visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:isCompanion visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.1')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isCompanion> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isCompanion visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:isFun visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.4')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isFun> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isFun visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY name:isValue visibility:public modality:ABSTRACT [val]
        annotations:
          SinceKotlin(version = '1.5')
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-isValue> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.Boolean
          correspondingProperty: PROPERTY name:isValue visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      FUN name:equals visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>, other:kotlin.Any?) returnType:kotlin.Boolean [operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KDeclarationContainer
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KAnnotatedElement
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in kotlin.reflect.KClassifier
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN name:hashCode visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KClass<T of kotlin.reflect.KClass>) returnType:kotlin.Int
        overridden:
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KDeclarationContainer
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KAnnotatedElement
          public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.reflect.KClassifier
        $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KClass<T of kotlin.reflect.KClass>
      PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract annotations: kotlin.collections.List<kotlin.Annotation> [val]
        FUN FAKE_OVERRIDE name:<get-annotations> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KAnnotatedElement) returnType:kotlin.collections.List<kotlin.Annotation> [fake_override]
          correspondingProperty: PROPERTY FAKE_OVERRIDE name:annotations visibility:public modality:ABSTRACT [fake_override,val]
          overridden:
            public abstract fun <get-annotations> (): kotlin.collections.List<kotlin.Annotation> declared in kotlin.reflect.KAnnotatedElement
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KAnnotatedElement
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KDeclarationContainer
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KAnnotatedElement
          public open fun toString (): kotlin.String [fake_override] declared in kotlin.reflect.KClassifier
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FILE fqName:kotlin.reflect fileName:/KDeclarationContainer.kt
    CLASS INTERFACE name:KDeclarationContainer modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.reflect.KDeclarationContainer
      PROPERTY name:members visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-members> visibility:public modality:ABSTRACT <> ($this:kotlin.reflect.KDeclarationContainer) returnType:kotlin.collections.Collection<kotlin.reflect.KCallable<*>>
          correspondingProperty: PROPERTY name:members visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:kotlin.reflect.KDeclarationContainer
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any

KtFile: parsingWithLocalDeclarationsIncorrect.kt
  PACKAGE_DIRECTIVE
    <empty list>
  PsiComment(EOL_COMMENT)('// LANGUAGE: +ContextParameters')
  PsiWhiteSpace('\n')
  PsiComment(EOL_COMMENT)('// ISSUE: KT-80853, KT-81521')
  PsiWhiteSpace('\n')
  PsiComment(EOL_COMMENT)('// COMPILATION_ERRORS')
  PsiWhiteSpace('\n\n')
  IMPORT_LIST
    IMPORT_DIRECTIVE
      PsiElement(import)('import')
      PsiWhiteSpace(' ')
      DOT_QUALIFIED_EXPRESSION
        DOT_QUALIFIED_EXPRESSION
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('kotlin')
          PsiElement(DOT)('.')
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('reflect')
        PsiElement(DOT)('.')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('KClass')
  PsiWhiteSpace('\n\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('test')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      PsiComment(EOL_COMMENT)('// Other modifiers')
      PsiWhiteSpace('\n\n    ')
      FUN
        MODIFIER_LIST
          PsiElement(suspend)('suspend')
          PsiWhiteSpace(' ')
          CONTEXT_RECEIVER_LIST
            PsiElement(context)('context')
            PsiElement(LPAR)('(')
            PsiErrorElement:Expecting ')'
              <empty list>
        PsiElement(fun)('fun')
        VALUE_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        BLOCK
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(RPAR)(')')
      PsiWhiteSpace(' ')
      LAMBDA_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n        ')
          BLOCK
            CALL_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('contextFun')
              VALUE_ARGUMENT_LIST
                PsiElement(LPAR)('(')
                PsiElement(RPAR)(')')
          PsiWhiteSpace('\n    ')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      FUN
        MODIFIER_LIST
          CONTEXT_RECEIVER_LIST
            PsiElement(context)('context')
            PsiElement(LPAR)('(')
            PsiErrorElement:Expecting ')'
              <empty list>
        PsiElement(fun)('fun')
        VALUE_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        BLOCK
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('suspend')
      PsiWhiteSpace(' ')
      LAMBDA_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n        ')
          BLOCK
            CALL_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('contextFun')
              VALUE_ARGUMENT_LIST
                PsiElement(LPAR)('(')
                PsiElement(RPAR)(')')
          PsiWhiteSpace('\n    ')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  FUN
    MODIFIER_LIST
      CONTEXT_RECEIVER_LIST
        PsiElement(context)('context')
        PsiElement(LPAR)('(')
        VALUE_PARAMETER
          PsiElement(IDENTIFIER)('x')
          PsiElement(COLON)(':')
          PsiWhiteSpace(' ')
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('Any')
        PsiElement(RPAR)(')')
    PsiWhiteSpace('\n')
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('contextFun')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiElement(RBRACE)('}')
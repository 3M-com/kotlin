package

public fun </*0*/ X> foo(/*0*/ a: A<X>, /*1*/ stub: A<X>.() -> kotlin.Unit): kotlin.String
public fun </*0*/ X, /*1*/ Y> foo(/*0*/ a: B<X, Y>, /*1*/ stub: B<X, Y>.() -> kotlin.Unit): kotlin.String
public fun main(): kotlin.Unit

public open class A</*0*/ X> {
    public constructor A</*0*/ X>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class B</*0*/ X, /*1*/ Y> : A<Y> {
    public constructor B</*0*/ X, /*1*/ Y>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

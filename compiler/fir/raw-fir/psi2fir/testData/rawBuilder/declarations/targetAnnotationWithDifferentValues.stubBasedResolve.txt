FILE: [ResolvedTo(BODY_RESOLVE)] targetAnnotationWithDifferentValues.kt
    @R|kotlin/annotation/Target|[Types](allowedTargets = vararg(*<implicitArrayOf>(Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.PROPERTY|, Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.FIELD|))) public final [ResolvedTo(BODY_RESOLVE)] annotation class AnnotationWithArrayLiteral : R|kotlin/Annotation| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=AnnotationWithArrayLiteral] constructor(): R|AnnotationWithArrayLiteral| {
            super<R|kotlin/Any|>()
        }

    }
    @R|kotlin/annotation/Target|[Types](allowedTargets = vararg(*<implicitArrayOf>(Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.PROPERTY|, Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.FIELD|, Int(1)))) public final [ResolvedTo(BODY_RESOLVE)] annotation class AnnotationWithArrayLiteralAndIncorrectValue : R|kotlin/Annotation| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=AnnotationWithArrayLiteralAndIncorrectValue] constructor(): R|AnnotationWithArrayLiteralAndIncorrectValue| {
            super<R|kotlin/Any|>()
        }

    }
    @R|kotlin/annotation/Target|[Types](allowedTargets = vararg(*<implicitArrayOf>(Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.PROPERTY|, Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.FIELD|))) public final [ResolvedTo(BODY_RESOLVE)] annotation class AnnotationWithArrayLiteralAndSpreadOperator : R|kotlin/Annotation| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=AnnotationWithArrayLiteralAndSpreadOperator] constructor(): R|AnnotationWithArrayLiteralAndSpreadOperator| {
            super<R|kotlin/Any|>()
        }

    }
    @Target[Unresolved](LAZY_EXPRESSION) public final? [ResolvedTo(RAW_FIR)] annotation class AnnotationWithArrayOf : R|kotlin/Annotation| {
        public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnnotationWithArrayOf] constructor(): R|AnnotationWithArrayOf| {
            LAZY_super<R|kotlin/Any|>
        }

    }
    @Target[Unresolved](LAZY_EXPRESSION) public final? [ResolvedTo(RAW_FIR)] annotation class AnnotationWithArrayOfAndSpreadOperator : R|kotlin/Annotation| {
        public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnnotationWithArrayOfAndSpreadOperator] constructor(): R|AnnotationWithArrayOfAndSpreadOperator| {
            LAZY_super<R|kotlin/Any|>
        }

    }
    @Target[Unresolved](LAZY_EXPRESSION) public final? [ResolvedTo(RAW_FIR)] annotation class AnnotationWithArrayOfWithoutSpreadOperator : R|kotlin/Annotation| {
        public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnnotationWithArrayOfWithoutSpreadOperator] constructor(): R|AnnotationWithArrayOfWithoutSpreadOperator| {
            LAZY_super<R|kotlin/Any|>
        }

    }
    @R|kotlin/annotation/Target|[Types](allowedTargets = vararg(Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.PROPERTY|, Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.FIELD|)) public final [ResolvedTo(BODY_RESOLVE)] annotation class AnnotationWithVararg : R|kotlin/Annotation| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=AnnotationWithVararg] constructor(): R|AnnotationWithVararg| {
            super<R|kotlin/Any|>()
        }

    }
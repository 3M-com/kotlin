FILE: [ResolvedTo(BODY_RESOLVE)] contextReceivers.kt
    context([ResolvedTo(EXPECT_ACTUAL_MATCHING)] A@<ERROR TYPE REF: Symbol not found for A>, [ResolvedTo(EXPECT_ACTUAL_MATCHING)] b@<ERROR TYPE REF: Symbol not found for B>)
    public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] fun foo(): R|kotlin/Unit| { LAZY_BLOCK }
    context([ResolvedTo(EXPECT_ACTUAL_MATCHING)] A@<ERROR TYPE REF: Symbol not found for A>, [ResolvedTo(EXPECT_ACTUAL_MATCHING)] b@<ERROR TYPE REF: Symbol not found for B>)
    public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] val x: R|kotlin/Int|
        public [ResolvedTo(EXPECT_ACTUAL_MATCHING)] get(): R|kotlin/Int| { LAZY_BLOCK }
    context([ResolvedTo(BODY_RESOLVE)] A@<ERROR TYPE REF: Symbol not found for A>, [ResolvedTo(BODY_RESOLVE)] b@<ERROR TYPE REF: Symbol not found for B>)
    public final [ResolvedTo(BODY_RESOLVE)] class C : R|kotlin/Any| {
        context([ResolvedTo(BODY_RESOLVE)] A@<ERROR TYPE REF: Symbol not found for A>, [ResolvedTo(BODY_RESOLVE)] b@<ERROR TYPE REF: Symbol not found for B>)
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=C] constructor(): R|C| {
            super<R|kotlin/Any|>()
        }

    }
    public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] fun bar1([ResolvedTo(EXPECT_ACTUAL_MATCHING)] x: R|@ContextFunctionTypeParams(2) context(ERROR CLASS: Symbol not found for A, ERROR CLASS: Symbol not found for B) () -> kotlin/Unit|): R|kotlin/Unit| { LAZY_BLOCK }
    public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] fun bar2([ResolvedTo(EXPECT_ACTUAL_MATCHING)] x: R|@ContextFunctionTypeParams(2) context(ERROR CLASS: Symbol not found for A, ERROR CLASS: Symbol not found for B) C.() -> kotlin/Unit|): R|kotlin/Unit| { LAZY_BLOCK }
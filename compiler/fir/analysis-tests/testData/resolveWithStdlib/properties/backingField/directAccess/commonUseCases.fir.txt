FILE: commonUseCases.kt
    public final class A : R|kotlin/Any| {
        public constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final var number: R|kotlin/String|
            private <explicit backing field>: R|kotlin/Int| = Int(10)
            public get(): R|kotlin/String| {
                ^ this@R|/A|.F|/A.number|.R|kotlin/Any.toString|()
            }
            public set(newValue: R|kotlin/String|): R|kotlin/Unit| {
                this@R|/A|.F|/A.number| = R|<local>/newValue|.R|kotlin/String.length|
            }

        public final fun updateNumber(): R|kotlin/Unit| {
            lval oldValue: R|kotlin/Int| = this@R|/A|.R|/A.number|.F|/A.number|
            this@R|/A|.R|/A.number|.F|/A.number| = R|<local>/oldValue|.R|kotlin/Int.plus|(Int(100))
        }

        public final fun represent(): R|kotlin/String| {
            ^represent String(field = ).R|kotlin/String.plus|(this@R|/A|.R|/A.number|.F|/A.number|)
        }

    }
    public final fun box(): R|kotlin/String| {
        lval a: R|A| = R|/A.A|()
        ^box R|java/lang/StringBuilder.StringBuilder|().R|kotlin/apply|<R|java/lang/StringBuilder|>(<L> = apply@fun R|java/lang/StringBuilder|.<anonymous>(): R|kotlin/Unit| <inline=Inline, kind=EXACTLY_ONCE>  {
            lvar value: R|kotlin/String| = R|<local>/a|.R|/A.number|
            this@R|special/anonymous|.R|java/lang/StringBuilder.append|(<strcat>(String(number = ), R|<local>/value|, String(, length = )).R|kotlin/String.plus|(R|<local>/value|.R|kotlin/String.length|))
            R|<local>/a|.R|/A.updateNumber|()
            this@R|special/anonymous|.R|java/lang/StringBuilder.append|(<strcat>(String(number = ), R|<local>/a|.R|/A.number|, String(, length = )).R|kotlin/String.plus|(R|<local>/a|.R|/A.number|.R|kotlin/String.length|))
        }
        ).R|java/lang/StringBuilder.toString|()
    }
